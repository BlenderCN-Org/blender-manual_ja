# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/constraints/common_interface.rst:6
msgid "Constraints Common Interface"
msgstr ""

#: ../../manual/constraints/common_interface.rst:12
msgid "The three parts of a constraint interface"
msgstr ""

#: ../../manual/constraints/common_interface.rst:15
msgid ""
"As with :doc:`modifiers </modifiers>`, an object (or bone, see the "
":doc:`rigging chapter </rigging>` for details) can use several constraints "
"at once. Hence, these constraints are organized in a stack which controls "
"their order of evaluation (from top to bottom)."
msgstr ""

#: ../../manual/constraints/common_interface.rst:19
msgid ""
"All constraints share a common basic interface, packed up in a sort of sub-"
"panel, that is split into three parts:"
msgstr ""

#: ../../manual/constraints/common_interface.rst:22
msgid "The header, gathering most common settings."
msgstr ""

#: ../../manual/constraints/common_interface.rst:23
msgid "The constraint's specific settings."
msgstr ""

#: ../../manual/constraints/common_interface.rst:24
msgid ""
"The influence and animation controls (the :guilabel:`Rigid Body Joint` "
"constraints have no influence setting)."
msgstr ""

#: ../../manual/constraints/common_interface.rst:28
msgid "Constraints Header"
msgstr ""

#: ../../manual/constraints/common_interface.rst:34
msgid "A constraint header"
msgstr ""

#: ../../manual/constraints/common_interface.rst:37
msgid ""
"The header of a constraint \"sub-panel\" is the same for all. From left to "
"right, you have:"
msgstr ""

#: ../../manual/constraints/common_interface.rst:40
msgid "A small arrow"
msgstr ""

#: ../../manual/constraints/common_interface.rst:40
msgid "This control allows you to show/hide the constraint's settings."
msgstr ""

#: ../../manual/constraints/common_interface.rst:43
msgid "The constraint type"
msgstr ""

#: ../../manual/constraints/common_interface.rst:43
msgid "This is just static text showing you what this constraint is..."
msgstr ""

#: ../../manual/constraints/common_interface.rst:53
msgid "The name field"
msgstr ""

#: ../../manual/constraints/common_interface.rst:46
msgid ""
"Here you can give your constraint a more meaningful name than the default "
"one. This control has another *important* purpose: it turns red when the "
"constraint is not functional (as in *A constraint header*). As most "
"constraints need a second \"target\" object to work (see below), when just "
"added, they are in \"red state\", as Blender cannot guess which object or "
"bone to use as target. This can also happen when you choose an invalid set "
"of settings, e.g. with a :doc:`Track To constraint "
"</constraints/tracking/track_to>` of which the :guilabel:`To` and "
":guilabel:`Up` vectors are both set to the same axis. As noted above, "
"constraints in \"red state\" are ignored during the stack evaluation."
msgstr ""

#: ../../manual/constraints/common_interface.rst:56
msgid "The \"up\"/\"down\" buttons"
msgstr ""

#: ../../manual/constraints/common_interface.rst:56
msgid ""
"As seen above, these allow you to move a constraint up/down in the stack."
msgstr ""

#: ../../manual/constraints/common_interface.rst:60
msgid "The \"X\" control"
msgstr ""

#: ../../manual/constraints/common_interface.rst:59
msgid ""
"As seen above, this will delete (remove from the stack) the constraint."
msgstr ""

#: ../../manual/constraints/common_interface.rst:63
msgid "Constraints Settings"
msgstr ""

#: ../../manual/constraints/common_interface.rst:69
msgid ""
"The central part of a constraint's subpanel contains the constraint's "
"settings, the target, and constraint space"
msgstr ""

#: ../../manual/constraints/common_interface.rst:72
msgid ""
"The constraints settings area is of course specific to each constraint type."
" However, there are two points that are common to many constraints, so we "
"will detail them here."
msgstr ""

#: ../../manual/constraints/common_interface.rst:77
msgid "The target"
msgstr ""

#: ../../manual/constraints/common_interface.rst:79
msgid ""
"Most constraints need another \"target\" object or bone to \"guide\" them. "
"You select which by selecting its name in the :guilabel:`Target` field. "
"Except for a few cases, you can use any type of object (camera, mesh, "
"empty...); its object origin will be the target point."
msgstr ""

#: ../../manual/constraints/common_interface.rst:84
msgid ""
"When you type in the :guilabel:`OB` field a mesh or lattice name, a second "
":guilabel:`Vertex Group` field appears just below. If you leave it empty, "
"the mesh or lattice will be used as a standard object target. But if you "
"enter in this :guilabel:`Vertex Group` field the name of one of the mesh's "
"or lattice's vertex groups, then the constraint will use the median point of"
" this vertex group as target."
msgstr ""

#: ../../manual/constraints/common_interface.rst:90
msgid ""
"Similarly, if you type in the :guilabel:`OB` field an armature name, a "
"second :guilabel:`Bone` field appears just below. If you enter in it the "
"name of one of the armature's bones, then the constraint will use this "
"bone's *root* as target. In some constraints, when you use a bone as target,"
" another :guilabel:`Head/Tail` numeric field will also appear, that allows "
"you to select where along the bone the target point will lay, from root "
"(**0.0**) to tip (**1.0**) (remember that currently, in Blender UI, bones' "
"roots are called \"heads\", and bones' tips, \"tails\"...)."
msgstr ""

#: ../../manual/constraints/common_interface.rst:102
msgid "The Constraint Space ({{Literal|Space}})"
msgstr ""

#: ../../manual/constraints/common_interface.rst:104
msgid ""
"For many constraints you can choose in which space it is evaluated/applied. "
"In the Space drop-down lists, the right side one is the space that the owner"
" is evaluated in (Owner Space). When such a constraint uses a target, you "
"can also choose in which space the target is evaluated (Target Space). The "
"Target Space drop-down list is on the left side. Both lists have the same "
"options, depending on whether the element (owner or target) is a regular "
"object, or a bone:"
msgstr ""

#: ../../manual/constraints/common_interface.rst:114
msgid "Local Space"
msgstr ""

#: ../../manual/constraints/common_interface.rst:112
msgid ""
"The object's properties are evaluated in its own local space, i.e. based on "
"its rest position (without taking into account its parents transformations "
"in its chain, or its armature object's transformation)."
msgstr ""

#: ../../manual/constraints/common_interface.rst:119
msgid "Local With Parent (bones only)"
msgstr ""

#: ../../manual/constraints/common_interface.rst:117
msgid ""
"The bone properties are evaluated in its own local space, *including* the "
"transformations due to a possible parent relationship (i.e. due to the "
"chain's transformations above the bone)."
msgstr ""

#: ../../manual/constraints/common_interface.rst:125
msgid "Pose Space (bones only)"
msgstr ""

#: ../../manual/constraints/common_interface.rst:122
msgid ""
"The bone properties are evaluated in the armature object local space (i.e. "
"independently from the armature transformations in :guilabel:`Object` mode)."
" Hence, if the armature object has null transformations, :guilabel:`Pose "
"Space` will have the same effect as :guilabel:`World Space`."
msgstr ""

#: ../../manual/constraints/common_interface.rst:129
msgid "Local (Without Parent) Space (objects only)"
msgstr ""

#: ../../manual/constraints/common_interface.rst:128
msgid ""
"The object properties are evaluated in its own local space, *without* the "
"transformations due to a possible parent relationship."
msgstr ""

#: ../../manual/constraints/common_interface.rst:134
msgid "World Space (default setting)"
msgstr ""

#: ../../manual/constraints/common_interface.rst:132
msgid ""
"Here the object's or bone's properties are evaluated in the global "
"coordinate system. This is the easiest to understand and most natural "
"behavior, as it always uses the \"visual\" transform properties (i.e. as you"
" see them in the 3D views)."
msgstr ""

#: ../../manual/constraints/common_interface.rst:136
msgid ""
"Understanding the Constraint Space effects is not really easy (unless you "
"are a geometry genius...). The best thing to do is to experiment with their "
"different combinations, using e.g. two empties (as they materialize clearly "
"their axes), and a :guilabel:`Copy Rotation` constraint (as rotations are "
"the most demonstrative transformations, to visualize the various spaces "
"specificities...)."
msgstr ""

#: ../../manual/constraints/common_interface.rst:146
#: ../../manual/constraints/common_interface.rst:152
msgid "Influence"
msgstr ""

#: ../../manual/constraints/common_interface.rst:155
msgid ""
"At the bottom of nearly all constraints, you have the :guilabel:`Influence` "
"slider, which controls the influence of the constraint on its owner. As you "
"might expect, **0.0** means that the constraint has no effect, and **1. 0** "
"means that the constraint has full effect. Using in-between values, you can "
"have several constraints all working together on the same owner's "
"properties. Note that if a constraint has a full influence on a given "
"property, all other constraints above in the stack working on that same "
"property will have no effect at all."
msgstr ""

#: ../../manual/constraints/common_interface.rst:163
msgid ""
"But the best thing with influence is that you can animate it with an Fcurve "
"- see :doc:`the constraints page of the animation chapter "
"</animation/techs/object/constraint>` for more details about this."
msgstr ""
