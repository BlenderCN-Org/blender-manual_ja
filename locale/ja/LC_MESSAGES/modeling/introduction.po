# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/modeling/introduction.rst:4
msgid "Introduction"
msgstr "イントロダクション"

#: ../../manual/modeling/introduction.rst:6
msgid ""
"The creation of a 3D scene needs at least three key components: Models, "
"Materials and Lights. In this part, we will delve deeper into the creation "
"of the first of these: modeling. Modeling is the art and science of creating"
" a surface that either mimics the shape of a real-world object or expresses "
"your imagination of abstract objects."
msgstr ""

#: ../../manual/modeling/introduction.rst:11
msgid ""
"There are three primary types of modeling - mesh modeling, curve/surface "
"modeling, and meta modeling."
msgstr ""

#: ../../manual/modeling/introduction.rst:14
msgid ":doc:`Mesh Modeling </modeling/meshes>`"
msgstr ""

#: ../../manual/modeling/introduction.rst:16
msgid ""
"Mesh modeling typically begins with a primitive shape (e.g. circle, cube, "
"cylinder...). This :doc:`Mesh Primitive </modeling/meshes/primitives>` is "
"defined by an array of points in 3D space called vertices (singular form is "
":term:`Vertex`). From there you might begin extruding faces and moving "
"vertices to create a larger, more complex shape."
msgstr ""

#: ../../manual/modeling/introduction.rst:22
msgid ""
":doc:`Curve </modeling/curves>` and :doc:`Surface </modeling/surfaces>` "
"Modeling"
msgstr ""

#: ../../manual/modeling/introduction.rst:24
msgid ""
":doc:`Curve modeling</modeling/curves>` uses control points to define the "
"shape of the curve."
msgstr ""

#: ../../manual/modeling/introduction.rst:26
msgid ""
":doc:`Surface modeling</modeling/surfaces>` is similar to curve modeling, "
"but instead of being limited to simple linear paths, they allow the creation"
" of three dimensional surfaces, potentially with volume."
msgstr ""

#: ../../manual/modeling/introduction.rst:31
msgid ":doc:`Meta Object (Metaball) Modeling</modeling/metas>`"
msgstr ""

#: ../../manual/modeling/introduction.rst:33
msgid ""
"Metaball modeling begins similarly to mesh modeling, with a base shape like "
"a cube or sphere, but instead of extruding these base shapes, these objects "
"are clumped together to form a larger object. In order to accomplish this, "
"the metaballs have a liquid-like quality, when two or more are brought "
"together they merge by smoothly rounding out the point of connection, "
"appearing as one unified object."
msgstr ""

#: ../../manual/modeling/introduction.rst:38
msgid ""
"This is one of the quickest ways to get started roughly modeling an object. "
"The resulting figure can then be converted into a mesh for further detailing"
" using :kbd:`Alt-C`."
msgstr ""

#: ../../manual/modeling/introduction.rst:42
msgid ":doc:`Text Modeling </modeling/texts>`"
msgstr ""

#: ../../manual/modeling/introduction.rst:44
msgid ""
"Inserting text is quite common for the creation of logos, and can be seen as"
" a special case of neither curve nor mesh modeling. You may define the text,"
" font, bevel, extruded width and several other parameters that control "
"generated object."
msgstr ""

#: ../../manual/modeling/introduction.rst:49
msgid ":doc:`Scripted Modeling </modeling/scripts>`"
msgstr ""

#: ../../manual/modeling/introduction.rst:51
msgid ""
"Since Blender functionality is extensible via Python scripting, there are a "
"number of very useful scripts that assist you in modeling. They may give you"
" new mesh primitives to work with, or apply some fancy manipulation of the "
"meshes that you are already working with."
msgstr ""

#: ../../manual/modeling/introduction.rst:55
msgid ""
"Modeling scripts are generally more advanced, but also less frequently used "
"programmatic effects that can be a huge time saver in certain cases."
msgstr ""

#: ../../manual/modeling/introduction.rst:58
msgid ""
"The included :doc:`spin </modeling/meshes/editing/duplicating/spin>` and "
":doc:`screw </modeling/meshes/editing/duplicating/screw>` functions are "
"examples of a modeling scripts that might otherwise take significantly more "
"work to replicate by hand through mesh or curve modeling."
msgstr ""

#~ msgid ""
#~ "As you have seen in the :doc:`Quick Start "
#~ "</your_first_animation/1.a_static_gingerbread_man>` chapter, the creation of"
#~ " a 3D scene needs at least three key things: Models, Materials and Lights. "
#~ "In this Part we will delve deeper into the first of these issues: modeling. "
#~ "Modeling is the art and science of creating a surface that mimics the shape "
#~ "of a real-world object or fits your imagination of abstract objects."
#~ msgstr ""

#~ msgid ""
#~ "Objects come in many forms, shapes and sizes, so Blender has many different "
#~ "tools available to help you make your model quickly and efficiently:"
#~ msgstr ""

#~ msgid ":doc:`Objects </modeling/objects>`"
#~ msgstr ""

#~ msgid "Working with objects as a whole"
#~ msgstr ""

#~ msgid ":doc:`Meshes </modeling/meshes>`"
#~ msgstr ""

#~ msgid "Working with the mesh that defines the shape of an object"
#~ msgstr ""

#~ msgid ":doc:`Curves </modeling/curves>`"
#~ msgstr ""

#~ msgid "Using Curves to model and control objects"
#~ msgstr ""

#~ msgid ":doc:`Surfaces </modeling/surfaces>`"
#~ msgstr ""

#~ msgid "Modeling a NURBS surface"
#~ msgstr ""

#~ msgid ":doc:`Text </modeling/texts>`"
#~ msgstr ""

#~ msgid "Textual tools for putting words in 3D space"
#~ msgstr ""

#~ msgid ":doc:`Meta Objects </modeling/metas>`"
#~ msgstr ""

#~ msgid "Globs and Globules"
#~ msgstr ""

#~ msgid ":doc:`Duplications </modeling/objects/duplication>`"
#~ msgstr ""

#~ msgid "Duplicating Objects"
#~ msgstr ""

#~ msgid ":doc:`Modeling Scripts </modeling/scripts>`"
#~ msgstr ""

#~ msgid ""
#~ "Since Blender functionality is extensible via Python, there are a number of "
#~ "very useful scripts that assist you in modeling."
#~ msgstr ""

#~ msgid ""
#~ "Many people use \"box modeling\" which starts with a basic cube, and "
#~ "proceeds with extruding faces and moving vertices to create a larger, more "
#~ "complicated mesh. For flat objects, like walls and table tops, you can use "
#~ "\"curve modeling\" which defines the outline using bezier or Nurbs curves, "
#~ "and then extrudes it to the desired thickness. Either method is fully "
#~ "supported in Blender using its modeling tools."
#~ msgstr ""
