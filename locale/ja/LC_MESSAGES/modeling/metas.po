# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/modeling/metas.rst:4
msgid "Meta Objects"
msgstr ""

#: ../../manual/modeling/metas.rst:6 ../../manual/modeling/metas.rst:131
#: ../../manual/modeling/metas.rst:211
msgid "Reference"
msgstr ""

#: ../../manual/modeling/metas.rst:19
msgid ""
"A very distinct visual characteristic of metas is that they are fluid "
"*mercurial*, or *clay-like* forms that have a \"rounded\" shape. "
"Furthermore, when two meta objects get close to one another, they begin to "
"interact with one another. They \"blend\" or \"merge\", as water droplets "
"do, especially in zero-g (which, by the way, makes them very handy for "
"modeling streams of water when you don't want to do a fluid simulation). If "
"they subsequently move away from one another, they restore their original "
"shape."
msgstr ""

#: ../../manual/modeling/metas.rst:43
msgid "Primitives"
msgstr ""

#: ../../manual/modeling/metas.rst:45
msgid ""
"There are five predefined meta \"primitives\" (or configurations) available "
"in the :menuselection:`Add --> Meta` sub-menu:"
msgstr ""

#: ../../manual/modeling/metas.rst:61
msgid "Visualization"
msgstr ""

#: ../../manual/modeling/metas.rst:71
msgid "Meta Ball example."
msgstr ""

#: ../../manual/modeling/metas.rst:81
msgid "Meta Ball Options"
msgstr ""

#: ../../manual/modeling/metas.rst:94
msgid "global meta properties."
msgstr ""

#: ../../manual/modeling/metas.rst:94
msgid "individual meta properties."
msgstr ""

#: ../../manual/modeling/metas.rst:99
msgid "Resolution"
msgstr ""

#: ../../manual/modeling/metas.rst:103
msgid "Meta"
msgstr ""

#: ../../manual/modeling/metas.rst:104
msgid "object."
msgstr ""

#: ../../manual/modeling/metas.rst:105
msgid "View"
msgstr ""

#: ../../manual/modeling/metas.rst:106
msgid ""
"The 3D View resolution of the generated mesh. The range is from **0.05** "
"(finest) to **1.0** (coarsest)."
msgstr ""

#: ../../manual/modeling/metas.rst:109
msgid "Render"
msgstr ""

#: ../../manual/modeling/metas.rst:108
msgid ""
"The rendered resolution of the generated mesh. The range is from **0.05** "
"(finest) to **1.0** (coarsest)."
msgstr ""

#: ../../manual/modeling/metas.rst:123
msgid "Left: Underlying structure, Right: the shape."
msgstr ""

#: ../../manual/modeling/metas.rst:125
msgid ""
"You can clearly see the underlying cubic structure that gives the meta cube "
"its shape."
msgstr ""

#: ../../manual/modeling/metas.rst:129
msgid "Threshold (Influence)"
msgstr ""

#: ../../manual/modeling/metas.rst:154
msgid "Positive."
msgstr ""

#: ../../manual/modeling/metas.rst:157
msgid ""
"A *positive* influence is defined as an attraction, meaning the meshes will "
"stretch towards each other as the *rings of influence* intersect. "
"(*Positive*) shows two meta balls' *rings of influence* intersecting with a "
"*positive* influence."
msgstr ""

#: ../../manual/modeling/metas.rst:162
msgid ""
"Notice how the meshes have pulled towards one another. The area circled in "
"white shows the green *influence* rings intersecting."
msgstr ""

#: ../../manual/modeling/metas.rst:167
msgid "Update"
msgstr ""

#: ../../manual/modeling/metas.rst:181
msgid ""
"This should help you if you experience difficulties (metas are quite "
"compute-intensive...), but with modern computers, this shouldn't happen, "
"unless you use many metas, or very high resolutions..."
msgstr ""

#: ../../manual/modeling/metas.rst:187
msgid "Meta Structure"
msgstr ""

#: ../../manual/modeling/metas.rst:190
msgid "Technical Details"
msgstr ""

#: ../../manual/modeling/metas.rst:192
msgid ""
"A more formal definition of a meta object can be given as a *directing "
"structure* which can be seen as the source of a static field. The field can "
"be either positive or negative and hence the field generated by neighboring "
"directing structures can attract or repel."
msgstr ""

#: ../../manual/modeling/metas.rst:196
msgid ""
"The implicit surface is defined as the surface where the 3D field generated "
"by all the directing structures assume a given value. For example a meta "
"ball, whose directing structure is a point, generates an isotropic (i.e. "
"identical in all directions) field around it and the surfaces at constant "
"field value are spheres centered at the directing point."
msgstr ""

#: ../../manual/modeling/metas.rst:209
msgid "Underlying Structure"
msgstr ""

#: ../../manual/modeling/metas.rst:228
msgid "Ball (point, zero-dimensional structure)"
msgstr ""

#: ../../manual/modeling/metas.rst:235
msgid "Tube (straight line, uni-dimensional structure)"
msgstr ""

#: ../../manual/modeling/metas.rst:231
msgid ""
"This is a meta which surface is generated by the field produced by a "
"straight line of a given length. This gives a cylindrical surface, with "
"rounded closed ends. It has one additional parameter:"
msgstr ""

#: ../../manual/modeling/metas.rst:245
msgid "Plane (rectangular plane, bi-dimensional structure)"
msgstr ""

#: ../../manual/modeling/metas.rst:238
msgid ""
"This is a meta which surface is generated by the field produced by a "
"rectangular plane. This gives a parallelepipedal surface, with a fixed "
"thickness, and rounded borders. It has two additional parameters:"
msgstr ""

#: ../../manual/modeling/metas.rst:245
msgid "Note that by default, the plane is a square."
msgstr ""

#: ../../manual/modeling/metas.rst:254
msgid "Elipsoid (ellipsoidal volume, tri-dimensional structure)"
msgstr ""

#: ../../manual/modeling/metas.rst:248
msgid ""
"This is a meta which surface is generated by the field produced by an "
"ellipsoidal volume. This gives an ellipsoidal surface. It has three "
"additional parameters:"
msgstr ""

#: ../../manual/modeling/metas.rst:265
msgid "Cube (parallelepipedal volume, tri-dimensional structure)"
msgstr ""

#: ../../manual/modeling/metas.rst:257
msgid ""
"This is a meta which surface is generated by the field produced by a "
"parallelepipedal volume. This gives a parallelepipedal surface, with rounded"
" edges. As you might have guessed, it has three additional parameters:"
msgstr ""

#: ../../manual/modeling/metas.rst:264
msgid "Note that by default, the volume is a cube."
msgstr ""

#: ../../manual/modeling/metas.rst:271
msgid "the 5 meta primitives."
msgstr ""

#: ../../manual/modeling/metas.rst:14
msgid ""
"Meta objects are *implicit surfaces*, meaning that they are *not* "
"*explicitly* defined by vertices (as meshes are) or control points (as "
"surfaces are): they exist *procedurally*. Meta objects are literally "
"mathematical formulas that are calculated on-the-fly by Blender."
msgstr ""

#: ../../manual/modeling/metas.rst:26
msgid ""
"Each of these is defined by its own underlying FIXME(TODO: Internal Link; "
"[[#Technical Details|mathematical structure]] ), and you can at any time "
"switch between them using the *Active Element* panel."
msgstr ""

#: ../../manual/modeling/metas.rst:31
msgid ""
"Typically *Meta* objects are used for special effects or as a basis for "
"modeling. For example, you could use a collection of metas to form the "
"initial shape of your model and then convert it to another object type "
"(well, only meshes are available...) for further modeling. Meta objects are "
"also very efficient for ray-tracing."
msgstr ""

#: ../../manual/modeling/metas.rst:36
msgid ""
"Note that *Meta* objects have a slightly different behavior in *Object* "
"mode, as detailed FIXME(TODO: Internal Link; [[#\"Object\" Mode|below]] )."
msgstr ""

#: ../../manual/modeling/metas.rst:48
msgid "Meta Ball"
msgstr ""

#: ../../manual/modeling/metas.rst:49
msgid "adds a meta with a point underlying structure."
msgstr ""

#: ../../manual/modeling/metas.rst:50
msgid "Meta Tube"
msgstr ""

#: ../../manual/modeling/metas.rst:51
msgid "adds a meta with a line segment underlying structure."
msgstr ""

#: ../../manual/modeling/metas.rst:52
msgid "Meta Plane"
msgstr ""

#: ../../manual/modeling/metas.rst:53
msgid "adds a meta with a planar underlying structure."
msgstr ""

#: ../../manual/modeling/metas.rst:54
msgid "Meta Ellipsoid"
msgstr ""

#: ../../manual/modeling/metas.rst:55
msgid "adds a meta with an ellipsoidal underlying structure."
msgstr ""

#: ../../manual/modeling/metas.rst:58
msgid "Meta Cube"
msgstr ""

#: ../../manual/modeling/metas.rst:57
msgid "adds a meta with a volumetric cubic underlying structure."
msgstr ""

#: ../../manual/modeling/metas.rst:63
msgid ""
"In Object mode, the calculated mesh is shown, along with a black \"selection"
" ring\" (becoming pink when selected). To learn more about metas in Object "
"mode, see FIXME(TODO: Internal Link; [[#\"Object\" Mode|below]])."
msgstr ""

#: ../../manual/modeling/metas.rst:74
msgid ""
"In *Edit* mode (*Meta Ball* *example*), a meta is drawn as a mesh (either "
"shaded or as black wireframe, but without any vertex of course), with two "
"colored circles: a red one for selection (pink when selected), and a green "
"one for a direct control of the meta's stiffness (see FIXME(TODO: Internal "
"Link; [[#Stiffness|below]] ) - light green when active). Note that except "
"for the *Scale* (:kbd:`S`) transformation, having the green circle "
"highlighted is equivalent to having the red one."
msgstr ""

#: ../../manual/modeling/metas.rst:83
msgid ""
"All Meta objects in a scene interact with each other. The settings in the "
"*MetaBall* section apply to all meta objects. In *Edit* mode, the *Active "
"Element* panel appears for editing individual meta elements."
msgstr ""

#: ../../manual/modeling/metas.rst:101
msgid ""
"The *Resolution* controls the resolution of the resultant mesh as generated "
"by the"
msgstr ""

#: ../../manual/modeling/metas.rst:111
msgid ""
"One way to see the underlying mathematical structure is to lower the "
"*Resolution*, increase the *Threshold* and set the *Stiffness* (see below) a"
" fraction above the *Threshold*. (*Underlying structure*) is a (*Meta cube*)"
" with the above mentioned configuration applied as follows: *Resolution* of "
"**0.410**, *Threshold* of **5.0** and *Stiffness* a fraction above at "
"**5.01**."
msgstr ""

#: ../../manual/modeling/metas.rst:138
msgid ""
"*Threshold* defines how much a meta's surface \"influences\" other metas. It"
" controls the *field level* at which the surface is computed. The setting is"
" global to a FIXME(TODO: Internal Link; [[#Grouping|group]] ) of *Meta* "
"objects. As the threshold increases, the influence that each meta has on "
"each other increases."
msgstr ""

#: ../../manual/modeling/metas.rst:143
msgid ""
"There are two types of influence: **positive** or **negative**. The type can"
" be toggled on the *Active Element* panel while in *Edit* mode, using the "
"*Negative* button. You could think of **positive** as attraction and "
"**negative** as repulsion of meshes. A negative meta will push away or repel"
" the meshes of positive *Meta* objects."
msgstr ""

#: ../../manual/modeling/metas.rst:169
msgid ""
"While transforming metas (grab/move, scale, etc.), you have four \"modes\" "
"of visualization, located in the *Update* buttons group of the *MetaBall* "
"panel:"
msgstr ""

#: ../../manual/modeling/metas.rst:172
msgid "Always"
msgstr ""

#: ../../manual/modeling/metas.rst:173
msgid "fully draw the meta during transformations."
msgstr ""

#: ../../manual/modeling/metas.rst:174
msgid "Half Res"
msgstr ""

#: ../../manual/modeling/metas.rst:175
msgid ""
"During transformations, draw the meta at half its *Wiresize* resolution."
msgstr ""

#: ../../manual/modeling/metas.rst:176
msgid "Fast"
msgstr ""

#: ../../manual/modeling/metas.rst:177
msgid "Do not show meta mesh during transformations."
msgstr ""

#: ../../manual/modeling/metas.rst:179
msgid "Never"
msgstr ""

#: ../../manual/modeling/metas.rst:179
msgid ""
"Never show meta mesh (not a very recommended option, as the meta is only "
"visible at render time!)."
msgstr ""

#: ../../manual/modeling/metas.rst:202
msgid ""
"*Meta* objects are nothing more than mathematical formulae that perform "
"logical operations on one another (AND, OR), and that can be added and "
"subtracted from each other. This method is also called **Constructive Solid "
"Geometry** (CSG). Because of its mathematical nature, CSG uses little "
"memory, but requires lots of processing power to compute."
msgstr ""

#: ../../manual/modeling/metas.rst:218
msgid ""
"Blender has five types of metas, each determined by its underlying (or "
"directing) structure. In *Edit* mode, you can change this structure, either "
"using the relevant buttons in the *MetaBall tools* panel, or the drop-down "
"list in the *Transform Properties* panel (:kbd:`N`). Depending on the "
"structure, you might have additional parameters, located in both *Transform "
"Properties* and *MetaBall tools* panels."
msgstr ""

#: ../../manual/modeling/metas.rst:226
msgid ""
"This is the simplest meta, without any additional setting. As it is just a "
"point, it generates an isotropic field, yielding a spherical surface (this "
"is why it is called *Meta Ball* or *Ball* in Blender)."
msgstr ""

#: ../../manual/modeling/metas.rst:235
msgid "dx"
msgstr ""

#: ../../manual/modeling/metas.rst:235
msgid "The length of the line (and hence of the tube - defaults to **1.0**)."
msgstr ""

#: ../../manual/modeling/metas.rst:243
msgid "dx, dy"
msgstr ""

#: ../../manual/modeling/metas.rst:243
msgid "The length, width of the rectangle (defaults to **1.0**)."
msgstr ""

#: ../../manual/modeling/metas.rst:252 ../../manual/modeling/metas.rst:262
msgid "dx, dy, dz"
msgstr ""

#: ../../manual/modeling/metas.rst:252
msgid "The length, width, height of the ellipsoid (defaults to **1.0**)."
msgstr ""

#: ../../manual/modeling/metas.rst:254
msgid ""
"Note that by default, the volume is a sphere, producing a spherical meta, as"
" the *Ball* option..."
msgstr ""

#: ../../manual/modeling/metas.rst:262
msgid "The length, width, height of the parallelepiped (defaults to **1.0**)."
msgstr ""

#~ msgid ""
#~ ":guilabel:`Meta` objects are *implicit surfaces*, meaning that they are "
#~ "*not* *explicitly* defined by vertices (as meshes are) or control points (as"
#~ " surfaces are): they exist *procedurally*. Meta objects are literally "
#~ "mathematical formulas that are calculated on-the-fly by Blender."
#~ msgstr ""

#~ msgid ""
#~ "Each of these is defined by its own underlying FIXME(TODO: Internal Link; "
#~ "[[#Technical Details|mathematical structure]] ), and you can at any time "
#~ "switch between them using the :guilabel:`Active Element` panel."
#~ msgstr ""

#~ msgid ""
#~ "Typically :guilabel:`Meta` objects are used for special effects or as a "
#~ "basis for modeling. For example, you could use a collection of metas to form"
#~ " the initial shape of your model and then convert it to another object type "
#~ "(well, only meshes are available...) for further modeling. Meta objects are "
#~ "also very efficient for ray-tracing."
#~ msgstr ""

#~ msgid ""
#~ "Note that :guilabel:`Meta` objects have a slightly different behavior in "
#~ ":guilabel:`Object` mode, as detailed FIXME(TODO: Internal Link; "
#~ "[[#\"Object\" Mode|below]] )."
#~ msgstr ""

#~ msgid ":guilabel:`Meta Ball` adds a meta with a point underlying structure."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Meta Tube` adds a meta with a line segment underlying structure."
#~ msgstr ""

#~ msgid ":guilabel:`Meta Plane` adds a meta with a planar underlying structure."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Meta Ellipsoid` adds a meta with an ellipsoidal underlying "
#~ "structure."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Meta Cube` adds a meta with a volumetric cubic underlying "
#~ "structure."
#~ msgstr ""

#~ msgid ""
#~ "In :guilabel:`Object` mode, the calculated mesh is shown, along with a black"
#~ " \"selection ring\" (becoming pink when selected). To learn more about metas"
#~ " in :guilabel:`Object` mode, see FIXME(TODO: Internal Link; [[#\"Object\" "
#~ "Mode|below]] )."
#~ msgstr ""

#~ msgid ""
#~ "In :guilabel:`Edit` mode (:guilabel:`Meta Ball` *example*), a meta is drawn "
#~ "as a mesh (either shaded or as black wireframe, but without any vertex of "
#~ "course), with two colored circles: a red one for selection (pink when "
#~ "selected), and a green one for a direct control of the meta's stiffness (see"
#~ " FIXME(TODO: Internal Link; [[#Stiffness|below]] ) - light green when "
#~ "active). Note that except for the :guilabel:`Scale` (:kbd:`S`) "
#~ "transformation, having the green circle highlighted is equivalent to having "
#~ "the red one."
#~ msgstr ""

#~ msgid ""
#~ "All Meta objects in a scene interact with each other. The settings in the "
#~ ":guilabel:`MetaBall` section apply to all meta objects. In :guilabel:`Edit` "
#~ "mode, the :guilabel:`Active Element` panel appears for editing individual "
#~ "meta elements."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Resolution` controls the resolution of the resultant mesh as "
#~ "generated by the"
#~ msgstr ""

#~ msgid ""
#~ "One way to see the underlying mathematical structure is to lower the "
#~ ":guilabel:`Resolution`, increase the :guilabel:`Threshold` and set the "
#~ ":guilabel:`Stiffness` (see below) a fraction above the "
#~ ":guilabel:`Threshold`. (*Underlying structure*) is a (*Meta cube*) with the "
#~ "above mentioned configuration applied as follows: :guilabel:`Resolution` of "
#~ "**0.410**, :guilabel:`Threshold` of **5.0** and :guilabel:`Stiffness` a "
#~ "fraction above at **5.01**."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Threshold` defines how much a meta's surface \"influences\" other"
#~ " metas. It controls the *field level* at which the surface is computed. The "
#~ "setting is global to a FIXME(TODO: Internal Link; [[#Grouping|group]] ) of "
#~ ":guilabel:`Meta` objects. As the threshold increases, the influence that "
#~ "each meta has on each other increases."
#~ msgstr ""

#~ msgid ""
#~ "There are two types of influence: **positive** or **negative**. The type can"
#~ " be toggled on the :guilabel:`Active Element` panel while in "
#~ ":guilabel:`Edit` mode, using the :guilabel:`Negative` button. You could "
#~ "think of **positive** as attraction and **negative** as repulsion of meshes."
#~ " A negative meta will push away or repel the meshes of positive "
#~ ":guilabel:`Meta` objects."
#~ msgstr ""

#~ msgid ""
#~ "While transforming metas (grab/move, scale, etc.), you have four \"modes\" "
#~ "of visualization, located in the :guilabel:`Update` buttons group of the "
#~ ":guilabel:`MetaBall` panel:"
#~ msgstr ""

#~ msgid ":guilabel:`Always` - fully draw the meta during transformations."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Half Res` - During transformations, draw the meta at half its "
#~ ":guilabel:`Wiresize` resolution."
#~ msgstr ""

#~ msgid ":guilabel:`Fast` - Do not show meta mesh during transformations."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Never` - Never show meta mesh (not a very recommended option, as "
#~ "the meta is only visible at render time!)."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Meta` objects are nothing more than mathematical formulae that "
#~ "perform logical operations on one another (AND, OR), and that can be added "
#~ "and subtracted from each other. This method is also called **Constructive "
#~ "Solid Geometry** (CSG). Because of its mathematical nature, CSG uses little "
#~ "memory, but requires lots of processing power to compute."
#~ msgstr ""

#~ msgid ""
#~ "Blender has five types of metas, each determined by its underlying (or "
#~ "directing) structure. In :guilabel:`Edit` mode, you can change this "
#~ "structure, either using the relevant buttons in the :guilabel:`MetaBall "
#~ "tools` panel, or the drop-down list in the :guilabel:`Transform Properties` "
#~ "panel (:kbd:`N`). Depending on the structure, you might have additional "
#~ "parameters, located in both :guilabel:`Transform Properties` and "
#~ ":guilabel:`MetaBall tools` panels."
#~ msgstr ""

#~ msgid ""
#~ "This is the simplest meta, without any additional setting. As it is just a "
#~ "point, it generates an isotropic field, yielding a spherical surface (this "
#~ "is why it is called :guilabel:`Meta Ball` or :guilabel:`Ball` in Blender)."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`dx`: The length of the line (and hence of the tube - defaults to "
#~ "**1.0**)."
#~ msgstr ""

#~ msgid ":guilabel:`dx`: The length of the rectangle (defaults to **1.0**)."
#~ msgstr ""

#~ msgid ":guilabel:`dy`: The width of the rectangle (defaults to **1.0**)."
#~ msgstr ""

#~ msgid ":guilabel:`dx`: The length of the ellipsoid (defaults to **1.0**)."
#~ msgstr ""

#~ msgid ":guilabel:`dy`: The width of the ellipsoid (defaults to **1.0**)."
#~ msgstr ""

#~ msgid ":guilabel:`dz`: The height of the ellipsoid (defaults to **1.0**)."
#~ msgstr ""

#~ msgid ""
#~ "Note that by default, the volume is a sphere, producing a spherical meta, as"
#~ " the :guilabel:`Ball` option..."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`dx`: The length of the parallelepiped (defaults to **1.0**)."
#~ msgstr ""

#~ msgid ":guilabel:`dy`: The width of the parallelepiped (defaults to **1.0**)."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`dz`: The height of the parallelepiped (defaults to **1.0**)."
#~ msgstr ""
