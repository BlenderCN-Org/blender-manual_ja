# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/modifiers/generate/array.rst:4
msgid "Array Modifier"
msgstr "アレイモディファイアー"

#: ../../manual/modifiers/generate/array.rst:18
msgid "Options"
msgstr "オプション"

#: ../../manual/modifiers/generate/array.rst:22
msgid "Array modifier."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:34
msgid "Fit Type menu"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:29
msgid "Fit Curve"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:31
msgid "Fit Length"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:34
msgid "Fixed Count"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:37
msgid "Curve"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:40
msgid "Length"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:44
msgid "Count"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:57
msgid "Constant Offset, X, Y, Z"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:56
msgid ""
"Adds a constant translation component to the duplicate object's offset. X, Y"
" and Z constant components can be specified."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:62
msgid "Relative offset example."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:71
msgid "Object offset example."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:80
msgid "Merge"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:97
msgid "First Last"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:99
msgid "Distance"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:105
msgid "Start cap"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:112
msgid "End cap"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:115
msgid "Hints"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:118
msgid "Offset Calculation"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:129
msgid "Examples"
msgstr "例"

#: ../../manual/modifiers/generate/array.rst:132
msgid "Mechanical"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:139
msgid "A bridge made from a tileable mesh."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:144
msgid ""
"A track. `Sample blend file "
"<http://wiki.blender.org/index.php/Media:Tracktest.blend>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:156
msgid ""
"A crankshaft. `Sample blend file <http://wiki.blender.org/index.php/Media"
":Dev-ArrayModifier-Crankshaft01.blend>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:162
msgid ""
"A chain created from a single link. `Sample blend file "
"<http://wiki.blender.org/index.php/Media:Dev-ArrayModifier-Chain01.blend>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:169
msgid "Fractal"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:187
msgid ""
"A fractal fern image created with 2 array modifiers and 1 mirror applied to "
"a cube."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:193
msgid "Organic"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:216
msgid ""
"Subsurfed cube array with 1 object offset, 4 cubes and a high vertex merge "
"setting to give the effect of skinning."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:218
msgid ""
"A double spiral created with two array modifiers and one subsurf modifier "
"applied to a cube. As above, the vertex merge threshold is set very high to "
"give the effect of skinning. `Sample blend file "
"<http://wiki.blender.org/index.php/Media:Dev-ArrayModifier-"
"Spiral01.blend>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:222
msgid ""
"A tentacle created with an Array modifier followed by a Curve modifier. The "
"segment in the foreground is the base mesh for the tentacle; the tentacle is"
" capped by two specially-modeled objects deformed by the same Curve object "
"as the main part of the tentacle. `Sample blend file "
"<http://wiki.blender.org/index.php/Media:Manual-Modifier-Array-"
"Tentacle01.blend>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:229
msgid "Tutorials"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:231
msgid ""
"`Neal Hirsig's Array Modifier Screencast on Vimeo "
"<http://vimeo.com/46061877>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:232
msgid ""
":doc:`Creating A Double Helix With Modifiers </ls/modifiers/a_double_helix>`"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:6
msgid ""
"The Array modifier creates an array of copies of the base object, with each "
"copy being offset from the previous one in any of a number of possible ways."
" Vertices in adjacent copies can be merged if they are nearby, allowing "
"smooth :doc:`subsurf </modifiers/generate/subsurf>` frameworks to be "
"generated."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:10
msgid ""
"This modifier can be useful when combined with tileable meshes for quickly "
"developing large scenes. It is also useful for creating complex repetitive "
"shapes."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:13
msgid ""
"Multiple array modifiers may be active for an object at the same time (e.g. "
"to create complex three dimensional constructs)."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:48
msgid ""
"Both *Fit Curve* and *Fit Length* use the local coordinate system size of "
"the base object, which means that scaling the base object in *Object* mode "
"will not change the number of copies generated by the *Array* modifier."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:50
msgid ""
"*Fit Length* uses the local coordinate system length of the curve, which "
"means that scaling the curve in *Object* mode will not change the number of "
"copies generated by the *Array* modifier."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:52
msgid "Applying the scale with :kbd:`Ctrl-A` can be useful for each one."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:66
msgid "Relative Offset, X, Y, Z"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:64
msgid ""
"Adds a translation equal to the object's bounding box size along each axis, "
"multiplied by a scaling factor, to the offset. X, Y and Z scaling factors "
"can be specified."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:76
msgid "Object Offset"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:73
msgid ""
"Adds a transformation taken from an object (relative to the current object) "
"to the offset. It is good practice to use an Empty object centered or near "
"to the initial object. E.g. by rotating this Empty a circle or helix of "
"objects can be created."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:150
msgid ""
"A cog created from a single segment. `Blend "
"<http://wiki.blender.org/index.php/Media:Dev-ArrayModifier-Cog01.blend>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:176
msgid "Multi-level array animated with motion blur."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:181
msgid ""
"Fractal created with multiple arrays. `Blend "
"<http://wiki.blender.org/index.php/Media:Dev-ArrayModifier-"
"Fractal01.blend>`__"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:200
#: ../../manual/modifiers/generate/array.rst:215
msgid "Fig 01"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:205
#: ../../manual/modifiers/generate/array.rst:219
msgid "Fig 02"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:210
#: ../../manual/modifiers/generate/array.rst:226
msgid "Fig 03"
msgstr ""

#: ../../manual/modifiers/generate/array.rst:234
msgid ""
"The 'Double Helix' tutorial explains the Array modifier. It is for an old "
"Blender Version (2.44) but except for the keyboard shortcuts it is still "
"valid."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:26
msgid ""
"Controls how the length of the array is determined. There are three choices,"
" activating respectively the display of the *Curve*, *Length* or *Count* "
"settings explained below:."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:30
msgid ""
"Generates enough copies to fit within the length of the curve object "
"specified in *Curve*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:32
msgid ""
"Generates enough copies to fit within the fixed length given by *Length*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:34
msgid "Generates the number of copies specified in *Count*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:37
msgid "The Curve object to use for *Fit Curve*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:40
msgid "The length to use for *Fit Length*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:43
msgid "The number of duplicates to use for *Fixed Count*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:79
msgid ""
"If enabled, vertices in each copy will be merged with vertices in the next "
"copy that are within the given *Distance*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:83
msgid ""
"If enabled **and** *Merge* is enabled, vertices in the first copy will be "
"merged with vertices in the last copy (this is useful for circular objects)."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:100
msgid "Controls the merge distance for *Merge*."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:102
msgid ""
"The mesh object to be used as a start cap. A single copy of this object will"
" be placed at the \"beginning\" of the array - in fact, as if it was in "
"position ``-1``, i.e. one \"array step\" before the first \"regular\" array "
"copy. Of course, if *Merge* is activated, and the *Start cap* is near enough"
" to the first copy, they will be merged."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:108
msgid ""
"The mesh object to be used as an end cap. A single copy of this object will "
"be placed at the \"end\" of the array - in fact, as if it was in position "
"**n+1**, i.e. one \"array step\" after the last \"regular\" array copy. And "
"as *Start cap*, it can be merged with the last copy..."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:120
msgid ""
"The transformation applied from one copy to the next is calculated as the "
"sum of the three different components (*Relative*, *Constant* and *Object*),"
" all of which can be enabled/disabled independently of the others. This "
"allows, for example, a relative offset of ``1.0, 0.0, 0.0`` and a constant "
"offset of ``0.1, 0.0, 0.0``, giving an array of objects neatly spaced along "
"the X axis with a constant ``0.1`` units between them, whatever the original"
" object's size."
msgstr ""

#: ../../manual/modifiers/generate/array.rst:0
msgid "*First Last* merge example."
msgstr ""

#~ msgid ""
#~ "Generates enough copies to fit within the length of the curve object "
#~ "specified in :guilabel:`Curve`."
#~ msgstr ""

#~ msgid ""
#~ "Generates enough copies to fit within the fixed length given by "
#~ ":guilabel:`Length`."
#~ msgstr ""

#~ msgid "Generates the number of copies specified in :guilabel:`Count`."
#~ msgstr ""

#~ msgid "The Curve object to use for :guilabel:`Fit Curve`."
#~ msgstr ""

#~ msgid "The length to use for :guilabel:`Fit Length`."
#~ msgstr ""

#~ msgid "The number of duplicates to use for :guilabel:`Fixed Count`."
#~ msgstr ""

#~ msgid ""
#~ "If enabled, vertices in each copy will be merged with vertices in the next "
#~ "copy that are within the given :guilabel:`Distance`."
#~ msgstr ""

#~ msgid ":guilabel:`First Last` merge example."
#~ msgstr ""

#~ msgid "Controls the merge distance for :guilabel:`Merge`."
#~ msgstr ""

#~ msgid ""
#~ "The mesh object to be used as a start cap. A single copy of this object will"
#~ " be placed at the \"beginning\" of the array - in fact, as if it was in "
#~ "position ``-1``, i.e. one \"array step\" before the first \"regular\" array "
#~ "copy. Of course, if :guilabel:`Merge` is activated, and the :guilabel:`Start"
#~ " cap` is near enough to the first copy, they will be merged."
#~ msgstr ""

#~ msgid ""
#~ "The mesh object to be used as an end cap. A single copy of this object will "
#~ "be placed at the \"end\" of the array - in fact, as if it was in position "
#~ "**n+1**, i.e. one \"array step\" after the last \"regular\" array copy. And "
#~ "as :guilabel:`Start cap`, it can be merged with the last copy..."
#~ msgstr ""

#~ msgid ""
#~ "Controls how the length of the array is determined. There are three choices,"
#~ " activating respectively the display of the :guilabel:`Curve`, "
#~ ":guilabel:`Length` or :guilabel:`Count` settings explained below:."
#~ msgstr ""

#~ msgid ""
#~ "If enabled **and** :guilabel:`Merge` is enabled, vertices in the first copy "
#~ "will be merged with vertices in the last copy (this is useful for circular "
#~ "objects)."
#~ msgstr ""

#~ msgid ""
#~ "The transformation applied from one copy to the next is calculated as the "
#~ "sum of the three different components (:guilabel:`Relative`, "
#~ ":guilabel:`Constant` and :guilabel:`Object`), all of which can be "
#~ "enabled/disabled independently of the others. This allows, for example, a "
#~ "relative offset of ``1.0, 0.0, 0.0`` and a constant offset of ``0.1, 0.0, "
#~ "0.0``, giving an array of objects neatly spaced along the X axis with a "
#~ "constant ``0.1`` units between them, whatever the original object's size."
#~ msgstr ""

#~ msgid "Description"
#~ msgstr ""

#~ msgid "Multidimensional array animated with motion blur."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Array` modifier creates an array of copies of the base "
#~ "object, with each copy being offset from the previous one in a number of "
#~ "possible ways. Vertices in adjacent copies can be merged based on a merge "
#~ "distance, allowing smooth subsurf frameworks to be generated."
#~ msgstr ""

#~ msgid ""
#~ "This modifier can be useful when combined with tilable meshes for quickly "
#~ "developing large scenes. It is also useful for creating complex repetitive "
#~ "shapes."
#~ msgstr ""

#~ msgid ""
#~ "Multiple array modifiers may be active for an object at the same time, e.g. "
#~ "to create complex 3 dimensional constructs."
#~ msgstr ""

#~ msgid "Fit Type menu."
#~ msgstr ""

#~ msgid ""
#~ "Controls how the length of the array is determined. There are three choices,"
#~ " activating respectively the display of the :guilabel:`Curve`, "
#~ ":guilabel:`Length` or :guilabel:`Count` setting:"
#~ msgstr ""

#~ msgid ""
#~ "Both :guilabel:`Fit Curve` and :guilabel:`Fit Length` use the local "
#~ "coordinate system size of the base object, which means that scaling the base"
#~ " object in :guilabel:`Object` mode will not change the number of copies "
#~ "generated by the :guilabel:`Array` modifier."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Fit Length` uses the local coordinate system length of the curve,"
#~ " which means that scaling the curve in :guilabel:`Object` mode will not "
#~ "change the number of copies generated by the :guilabel:`Array` modifier."
#~ msgstr ""

#~ msgid ""
#~ "Applying the scale with the :guilabel:`Apply Scale` button can be useful for"
#~ " each one."
#~ msgstr ""

#~ msgid ""
#~ ":guilabel:`Relative Offset`, :guilabel:`X`, :guilabel:`Y`, :guilabel:`Z`"
#~ msgstr ""

#~ msgid ""
#~ "Adds a translation equal to the object's bounding box size along each axis, "
#~ "multiplied by a scaling factor, to the offset. X, Y and Z scaling factors "
#~ "can be specified. See *Relative offset example*."
#~ msgstr ""

#~ msgid ":guilabel:`Object Offset`"
#~ msgstr ""

#~ msgid ""
#~ "Adds a transformation taken from an object (relative to the current object) "
#~ "to the offset. See *Object offset example*. It is good practice to use an "
#~ "Empty object centered or near to the initial object. E.g. by rotating this "
#~ "Empty a circle or helix of objects can be created."
#~ msgstr ""

#~ msgid ""
#~ "If enabled **and** :guilabel:`Merge` is enabled, vertices in the first copy "
#~ "will be merged with vertices in the last copy (this is useful for circular "
#~ "objects; see (*First Last merge example*))."
#~ msgstr ""

#~ msgid ""
#~ "Subsurf discontinuity caused by not merging vertices between first and last "
#~ "copies (:guilabel:`First Last` off)."
#~ msgstr ""

#~ msgid ""
#~ "Subsurf discontinuity eliminated by merging vertices between first and last "
#~ "copies (:guilabel:`First Last` on)."
#~ msgstr ""

#~ msgid ""
#~ "The transformation applied from one copy to the next is calculated as the "
#~ "sum of the three different components (:guilabel:`Relative`, "
#~ ":guilabel:`Constant` and :guilabel:`Object`), all of which can be "
#~ "enabled/disabled independently of the others. This allows, for example, a "
#~ "relative offset of **(1, 0, 0)** and a constant offset of **(0.1, 0, 0)**, "
#~ "giving an array of objects neatly spaced along the X axis with a constant "
#~ "**0.1BU** (Blender Units) between them, whatever the original object's size."
#~ msgstr ""

#~ msgid ""
#~ "A cog created from a single segment. `Sample blend file "
#~ "<http://wiki.blender.org/index.php/Media:Dev-ArrayModifier-Cog01.blend>`__"
#~ msgstr ""

#~ msgid ""
#~ "A fractal-like image created with multiple array modifiers applied to a "
#~ "cube. `Sample blend file <http://wiki.blender.org/index.php/Media:Dev-"
#~ "ArrayModifier-Fractal01.blend>`__"
#~ msgstr ""

#~ msgid ""
#~ "The 'Double Helix' tutorial explains the :guilabel:`Array` modifier. It is "
#~ "for an old Blender Version (2.44) but except for the keyboard shortcuts it "
#~ "is still valid."
#~ msgstr ""

#~ msgid "Reference"
#~ msgstr ""
