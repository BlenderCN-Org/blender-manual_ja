# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/modifiers/generate/mirror.rst:4
msgid "Mirror Modifier"
msgstr "鏡面モディファイアー"

#: ../../manual/modifiers/generate/mirror.rst:20
msgid "Options"
msgstr "オプション"

#: ../../manual/modifiers/generate/mirror.rst:24
msgid "Mirror modifier"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:35
msgid "Axis"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:63
msgid "Options:"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:40
msgid "Merge"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:53
msgid "Clipping"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:63
msgid "Vertex Groups"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:70
msgid "Textures"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:74
msgid "Merge Limit"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:80
msgid "Mirror Object"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:83
msgid "Hints"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:106
msgid "Subsurf modifier before Mirror modifier"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:119
msgid "Mirror modifier before Subsurf modifier"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:10
msgid ""
"The corner of a cube mirrored across three axes to form... well... a cube."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:13
msgid ""
"The Mirror modifier mirrors a mesh along its **local** X, Y and/or Z axes, "
"across the object's center (the mirror plane is then defined by the two "
"other axes)."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:16
msgid ""
"It can also use another object as the mirror center, then use that object's "
"local axes instead of its own."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:28
msgid ""
"The axis (*X*, *Y*, or *Z*) along which to mirror (i.e. the axis "
"perpendicular to the mirror plane of symmetry)."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:31
msgid ""
"To understand how the axis applies to the mirror direction, if you were to "
"mirror on the X axis, the positive X values of the original mesh would "
"become the negative X values on the mirrored side."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:34
msgid ""
"You can select more than one of these axes - you'll then get more mirrored "
"copies. With one axis you get a single mirror, with two axes four mirrors, "
"and with all three axes eight mirrors."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:39
msgid ""
"Where a vertex is in the same place (within the *Merge Limit* distance) as "
"its mirror it will be merged with the mirrored vertex."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:43
msgid ""
"Prevents vertices from moving through the mirror plane(s) while the user is "
"transforming them in Edit Mode."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:45
msgid ""
"If *Clipping* is enabled but vertices are beyond the mirror plane and "
"outside of the *Merge Limit*, the vertices will not be merged. But as soon "
"as the vertices are within *Merge Limit* they are snapped together and "
"cannot be moved beyond the mirror plane."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:51
msgid ""
"Vertices on the mirror plane will be unable to move away from the mirror "
"plane as long as *Clipping* is enabled. You must disable *Clipping* to be "
"able to move the vertices along the mirror axis again."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:56
msgid ""
"When enabled, the Mirror modifier will try to mirror existing vertex groups."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:58
msgid "A very nice feature, but one that has very specific prerequisites:"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:60
msgid ""
"The vertex groups you want to mirror must be named following the usual "
"left/right pattern (i.e. suffixed by something like \".R\", \".right\", "
"\".L\", etc)."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:62
msgid ""
"The mirror side vertex group must already exist (it will not be created "
"automatically). It must also be completely empty (no vertices assigned to "
"it)."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:66
msgid ""
"The *U* and *V* options allows you to mirror the UV texture coordinates "
"across the middle of the image."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:69
msgid ""
"E.g. if you have a vertex with UV coordinates of (``0.3, 0.9``), its mirror "
"copy will have UV coordinates of (``0.7, 0.1``)."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:73
msgid ""
"The maximum distance between a vertex and its mirror copy before they are "
"merged together. In other words, a vertex may be half this distance away "
"from the mirror plane before it snaps to it."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:77
msgid ""
"The name of another object (usually an empty), to be used as the reference "
"for the mirror process: its center and axes will drive the plane(s) of "
"symmetry. You can of course animate its position/rotation to animate the "
"mirror effect."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:91
msgid ""
"The Mirror modifier offers a simpler way to do this. Once your modeling is "
"completed you can either click *Apply* to make a real version of your mesh "
"or leave it as is for future editing."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:96
msgid "Using the Mirror Modifier with a Subdivision Surface Modifier"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:98
msgid ""
"When using the Mirror modifier along with a :doc:`subsurf "
"</modifiers/generate/subsurf>` modifier, the order in which the modifiers "
"are placed is important."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:109
msgid ""
"The above image shows the subsurf modifier placed before the Mirror one; as "
"you can see the effect of this is that the mesh is split down the center "
"line of the mirror effect. This is because the subsurf calculation moves "
"vertices away from the mirror plane, too far away from the *Merge Limit*."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:122
msgid ""
"The above image shows the Mirror modifier placed before the subsurf "
"modifier. In this order, the mirror calculation is done and the vertices are"
" merged together. Only after that does the subsurf modifier move any "
"vertices."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:128
msgid "Accurately Positioning the Mirror Plane"
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:130
msgid ""
"To apply a Mirror modifier, it is common to have to move the object's center"
" onto the edge or face that is to be the axis for mirroring. This can be "
"tricky when attempted visually."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:134
msgid ""
"A good technique to achieve an exact position is to select the edge, then "
"use :kbd:`Shift-S` and choosing *Cursor to Selection*. This will position "
"the 3D Cursor in the center of the edge. Finally, press :kbd:`Ctrl-Alt-"
"Shift-C` for the *Set Origin* menu, then select *Origin to 3D Cursor*. This "
"will move the object's center (and thus, the mirror plane) to where the 3D "
"cursor is located, and the mirroring will be exact."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:142
msgid ""
"An alternative is to use an Empty as a *Mirror Object* that you move to the "
"correct position."
msgstr ""

#: ../../manual/modifiers/generate/mirror.rst:85
msgid ""
"Many modeling tasks involve creating objects that are symmetrical. However, "
"there used to be no quick way to model both halves of an object without "
"using one of the workarounds that have been discovered by clever Blender "
"artists over the years. A common technique was to model one half of an "
"object and use :kbd:`Alt-D` to create a linked duplicate which can then be "
"scaled on one axis by ``-1`` to produce a perfect mirror-image copy which "
"updates in real time as you edit."
msgstr ""

#~ msgid ""
#~ "Many modeling tasks involve creating objects that are symmetrical. However, "
#~ "there used to be no quick way to model both halves of an object without "
#~ "using one of the workarounds that have been discovered by clever Blender "
#~ "artists over the years.  A common technique was to model one half of an "
#~ "object and use :kbd:`Alt-D` to create a linked duplicate which can then be "
#~ "scaled on one axis by ``-1`` to produce a perfect mirror-image copy which "
#~ "updates in real time as you edit."
#~ msgstr ""

#~ msgid ""
#~ "The corner of a cube mirrored across three axes to form ... well ... a cube."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Mirror` modifier automatically mirrors a mesh along its "
#~ "**local** X, Y and/or Z axes, which pass through the object's center (the "
#~ "mirror plane is then defined by the two other axes). It can also use another"
#~ " object as mirror center, then use that object's local axes instead of its "
#~ "own. It can weld vertices together on the mirror plane within a specified "
#~ "*tolerance* distance. Vertices from the original object can be prevented "
#~ "from moving across or through the mirror plane. And last but not least, it "
#~ "can also mirror vertex groups and UV coordinates."
#~ msgstr ""

#~ msgid ""
#~ "The axis (:guilabel:`X`, :guilabel:`Y`, or :guilabel:`Z`) along which to "
#~ "mirror (i.e. the axis perpendicular to the mirror plane of symmetry). To "
#~ "understand how the axis applies to the mirror direction, if you were to "
#~ "mirror on the X axis, the X plus values of the original mesh would become X "
#~ "minus values on the mirrored instance. You can select more than one of these"
#~ " axes - you'll then get more mirror instances, so that all planes of "
#~ "symmetry selected are \"fully processed\" (i.e. with one axis you get a "
#~ "single mirror, with two axes four mirrors, and with all three axes eight "
#~ "mirrors)."
#~ msgstr ""

#~ msgid ""
#~ "Merges vertices at the mirror plane.  See :guilabel:`Merge Limit` below."
#~ msgstr ""

#~ msgid ""
#~ "When this button is enabled, the :guilabel:`Mirror` modifier will try to "
#~ "mirror existing vertex groups. A very nice feature, but that has quite "
#~ "specific prerequisites."
#~ msgstr ""

#~ msgid ""
#~ "First, the vertex groups you want to mirror must be named following the "
#~ "usual left/right pattern (i.e. suffixed by something like \"\\ ``.R`` \", "
#~ "\"\\ ``.right`` \", \"\\ ``.L`` \", et cetera)."
#~ msgstr ""

#~ msgid ""
#~ "Next, you must have the \"mirrored\" groups already existing (i.e. same "
#~ "names suffixed by the \"other side\") *and completely empty* (no vertex "
#~ "assigned to it), else it won't work."
#~ msgstr ""

#~ msgid ""
#~ "Usually, the mirrored copies of the vertices of a group remain in this "
#~ "group. Once this option is activated, all groups following the rules "
#~ "described above will only be valid on the original object - the mirrored "
#~ "copy will put these same vertices into the \"mirror\" group. Very handy with"
#~ " armatures, for example: you just model half of your object, carefully rig "
#~ "it with half of your armature, and just let the :guilabel:`Mirror` modifier "
#~ "build the other half. Just be sure to put your :guilabel:`Armature` "
#~ "modifier(s) after the :guilabel:`Mirror` one."
#~ msgstr ""

#~ msgid ""
#~ "A final word about multi-axes mirror: in these cases, the \"direct\", "
#~ "\"first level\" copies get the mirrored groups, the copies of copies "
#~ "(\"second level\") get the original groups, et cetera."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`U` and :guilabel:`V` options allows you to mirror, "
#~ "respectively, the U and V texture coordinates. The values are \"mirrored\" "
#~ "around the ``0.5`` value, i.e. if you have a vertex with UV coordinates of "
#~ "(``0.3``, ``0.85``), its mirror copy will have UV coordinates of (``0.7``, "
#~ "``0.15``) with both buttons enabled."
#~ msgstr ""

#~ msgid ""
#~ "The maximal distance between vertices and mirror plane for the welding "
#~ "between original and mirrored vertices to take place. The vertices then will"
#~ " snap together, allowing linking the original mesh to its mirrored copy."
#~ msgstr ""

#~ msgid ""
#~ "The name of another object (usually an empty), to be used as the reference "
#~ "for the mirror process: its center and axes will drive the plane(s) of "
#~ "symmetry. You can of course animate its position/rotation (Ipo curves or "
#~ "others), to animate the mirror effect."
#~ msgstr ""

#~ msgid ""
#~ "Many modeling tasks involve creating objects that are symmetrical. However, "
#~ "there used to be no quick way to model both halves of an object without "
#~ "using one of the workarounds that have been discovered by clever Blender "
#~ "artists over the years.  A common technique is to model one half of an "
#~ "object and use :kbd:`alt-D` to create a linked duplicate which can then be "
#~ "mirrored on one axis to produce a perfect mirror-image copy, which updates "
#~ "in real time as you edit."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Mirror` modifier offers another, simpler way to do this. Once"
#~ " your modeling is completed you can either click :guilabel:`Apply` to make a"
#~ " real version of your mesh or leave it as is for future editing."
#~ msgstr ""

#~ msgid "Using Mirror modifier with {{Literal|Subdivision Surface}} modifier"
#~ msgstr ""

#~ msgid ""
#~ "When using the :guilabel:`Mirror` modifier along with the "
#~ ":guilabel:`Subsurf` modifier, the order in which the modifiers are placed is"
#~ " important."
#~ msgstr ""

#~ msgid ""
#~ "This shows the :guilabel:`Subsurf` modifier placed before the "
#~ ":guilabel:`Mirror` one; as you can see the effect of this is that the mesh "
#~ "splits down the center line of the mirror effect."
#~ msgstr ""

#~ msgid ""
#~ "This shows the :guilabel:`Mirror` modifier placed before the "
#~ ":guilabel:`Subsurf` modifier. In this order you will get the center line of "
#~ "the mesh snapped to the center line, which in most cases would be the "
#~ "desired effect."
#~ msgstr ""

#~ msgid "Aligning for Mirror"
#~ msgstr ""

#~ msgid ""
#~ "To apply a :guilabel:`Mirror` modifier, it is common to have to move the "
#~ "object's center onto the edge or face that is to be the axis for mirroring. "
#~ "This can be tricky when attempted visually. A good technique to achieve an "
#~ "exact position is to determine the edge against which you wish to mirror. "
#~ "Select two vertices on that edge. Then use :kbd:`shift-S` followed by "
#~ ":guilabel:`Cursor to Selection` (:kbd:`c`). This will center the 3D cursor "
#~ "exactly on the edge midway between the two vertices. Finally, press :kbd"
#~ ":`Ctrl-Alt-Shift-c` for the :guilabel:`Set Origin` popup, then select "
#~ ":guilabel:`Origin to 3D Cursor` (:kbd:`t`). This will move the object's "
#~ "center to where the 3D cursor is located, and the mirroring will be exact."
#~ msgstr ""

#~ msgid ""
#~ "An alternative is to use an Empty as a :guilabel:`Mirror Object` that you "
#~ "move to the correct position."
#~ msgstr ""

#~ msgid ""
#~ "Prevents vertices from crossing through the mirror plane(s). Note that this "
#~ "is only valid in :guilabel:`Edit mode` (i.e when using object "
#~ "transformations, translations, scaling, et cetera, in :guilabel:`Object "
#~ "mode`, vertices will happily cross these borders.) If :guilabel:`Clipping` "
#~ "is selected but vertices are outside of the :guilabel:`Merge Limit` the "
#~ "vertices will not merge. As soon as the vertices are within :guilabel:`Merge"
#~ " Limit` they are clipped together and cannot be moved beyond the mirror "
#~ "plane. If several vertices are selected and are at different distances from "
#~ "the mirror plane, they will one by one be clipped at the mirror plane.  Once"
#~ " you have confirmed clipped vertices with :kbd:`lmb` you must, if you want "
#~ "to break the clipping, un-select :guilabel:`Clipping` to be able to move "
#~ "vertices away from the mirror."
#~ msgstr ""

#~ msgid "Description"
#~ msgstr ""

#~ msgid ""
#~ "Prevents vertices from crossing through the mirror plane(s). Note that this "
#~ "is only valid in :guilabel:`Edit mode` (i.e when using object "
#~ "transformations, translations, scaling, et cetera, in :guilabel:`Object "
#~ "mode`, vertices will happily cross these borders.) If :guilabel:`Clipping` "
#~ "is selected but vertices are outside of the :guilabel:`Merge Limit` the "
#~ "vertices will not merge. As soon as the vertices are within :guilabel:`Merge"
#~ " Limit` they are clipped together and cannot be moved beyond the mirror "
#~ "plane. If several vertices are selected and are at different distances from "
#~ "the mirror plane, they will one by one be clipped at the mirror plane. Once "
#~ "you have confirmed clipped vertices with :kbd:`lmb` you must, if you want to"
#~ " break the clipping, un-select :guilabel:`Clipping` to be able to move "
#~ "vertices away from the mirror."
#~ msgstr ""

#~ msgid "Reference"
#~ msgstr ""
