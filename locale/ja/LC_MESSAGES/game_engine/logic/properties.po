# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/game_engine/logic/properties.rst:4
msgid "Properties"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:6
msgid ""
"Properties are the game logic equivalent to variables. They are stored with "
"the object, and can be used to represent things about them such as ammo, "
"health, name, and so on."
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:11
msgid "Property Types"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:13
msgid "There are five types of properties:"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:29
msgid "Using Properties"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:31
msgid ""
"When a game is running, values of properties are set, manipulated, and "
"evaluated using the :doc:`Property Sensor "
"</game_engine/logic/sensors/property>` and the :doc:`Property Actuator "
"</game_engine/logic/actuators/property>`."
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:35
msgid ""
"Logic Properties are created and edited using the  panel on the left of the "
"Logic Editor Panel. The top menu provides a list of the available property "
"types."
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:41
msgid "Properties Panel of the Logic Editor"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:46
msgid "Add Game Property button"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:51
msgid "Name field"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:49
msgid ""
"Where you give your property its name, this is how you are going to access "
"it through python or expressions. The way to do so in python is by "
"dictionary style lookup (``GameObject[\"propname\"]``). The name is case "
"sensitive."
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:53
msgid "Type menu"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:54
msgid ""
"This menu determines which type of property it is. The available options are"
" in `Property Types`_."
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:56
msgid "Value field"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:56
msgid "Sets the initial value of the property."
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:45
msgid ""
"This button adds a new property to the list, default is a *Float* property "
"named ``prop``, followed by a number if there already is one with this name."
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:64
msgid "*i* information button"
msgstr ""

#: ../../manual/game_engine/logic/properties.rst:59
msgid ""
"Display property value in debug information. If debugging is turned on, the "
"value of the property is given in the top left-hand corner of the screen "
"while the game is running. To turn debugging on, tick *Show Debug "
"Properties* in the *Game* menu. All properties with debugging activated will"
" then be presented with their object name, property name and value during "
"gameplay. This is useful if you suspect something with your properties is "
"causing problems."
msgstr ""

#~ msgid ":guilabel:`Timer`"
#~ msgstr ""

#~ msgid ""
#~ "Starts at the property value and counts upwards as long as the object "
#~ "exists. It can for example be used if you want to know how long time it "
#~ "takes the player to complete a level."
#~ msgstr ""

#~ msgid ":guilabel:`Float`"
#~ msgstr ""

#~ msgid ""
#~ "Uses decimal numbers as values, can range from -10000.000 to 10000.000. It "
#~ "is useful for precision values."
#~ msgstr ""

#~ msgid ":guilabel:`Integer`"
#~ msgstr ""

#~ msgid ""
#~ "Uses integers (whole numbers) as values, between -10000 and 10000. Useful "
#~ "for counting things such as ammunition, where decimals are unnecessary."
#~ msgstr ""

#~ msgid ":guilabel:`String`"
#~ msgstr ""

#~ msgid "Takes text as value. Can store 128 characters."
#~ msgstr ""

#~ msgid ":guilabel:`Boolean`"
#~ msgstr ""

#~ msgid ""
#~ "Boolean variable, has two values: true or false. This is useful for things "
#~ "that have only two modes, like a light switch."
#~ msgstr ""

#~ msgid ""
#~ "This button adds a new property to the list, default is a :guilabel:`Float` "
#~ "property named ``prop``, followed by a number if there already is one with "
#~ "this name."
#~ msgstr ""

#~ msgid ""
#~ "Display property value in debug information. If debugging is turned on, the "
#~ "value of the property is given in the top left-hand corner of the screen "
#~ "while the game is running. To turn debugging on, tick :guilabel:`Show Debug "
#~ "Properties` in the :guilabel:`Game` menu. All properties with debugging "
#~ "activated will then be presented with their object name, property name and "
#~ "value during gameplay. This is useful if you suspect something with your "
#~ "properties is causing problems."
#~ msgstr ""

#~ msgid ":guilabel:`i` information button"
#~ msgstr ""

#~ msgid ""
#~ "FIXME(Template Unsupported: Shortcut/Keypress; {{Shortcut/Keypress|I}}) "
#~ "information button"
#~ msgstr ""
