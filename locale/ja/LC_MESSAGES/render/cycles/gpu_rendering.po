# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/render/cycles/gpu_rendering.rst:4
msgid "GPU Rendering"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:7
msgid "Introduction"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:9
msgid ""
"GPU rendering makes it possible to use your graphics card for rendering, "
"instead of the CPU. This can speed up rendering, because modern GPUs are "
"designed to do quite a lot of number crunching. On the other hand, they also"
" have some limitations in rendering complex scenes, due to more limited "
"memory, and issues with interactivity when using the same graphics card for "
"display and rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:15
msgid ""
"Cycles has two GPU rendering modes: through CUDA, which is the preferred "
"method for NVidia graphics cards; and OpenCL, which is intended to support "
"rendering on AMD/ATI graphics cards. The implementation of OpenCL is only in"
" an experimental stage and disabled in official builds."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:22
msgid "Configuration"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:24
msgid ""
"To enable GPU rendering, go into the User Preferences, and under the System "
"tab, select the Compute Device(s) to use. Next, for each scene, you can "
"configure to use CPU or GPU rendering in the Render properties."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:30
msgid "CUDA"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:33
msgid ""
"NVidia :abbr:`CUDA (Compute Unified Device Architecture)` is supported for "
":abbr:`GPU (Graphics processing unit)` rendering with **NVidia graphics "
"cards**. We support graphics cards starting from GTX 4xx (computing "
"capability 2.0). Computing capability 1.x cards are no longer supported, but"
" you may still be able to compile experimental builds with a limited feature"
" set (see below)."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:40
msgid ""
"Cycles requires recent drivers to be installed, on all operating systems. Be"
" sure to download the Blender version matching your operating system; that "
"is, download 64-bit Blender for 64-bit operating systems."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:44
msgid ""
"`List of CUDA cards with shader model "
"<http://www.nvidia.com/object/cuda_gpus.htm>`__"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:48
msgid "Limitations"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:50
msgid ""
"The maximum amount of individual textures is limited to 95 byte image "
"textures (PNG, JPEG, ..) and 5 float-image textures (OpenEXR, 16 bit TIFF, "
"..)."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:52
msgid ""
":doc:`Open shading language </render/cycles/nodes/osl>` (OSL) is only "
"supported by CPU."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:53
msgid "Subsurface Scattering is not supported on GPU yet."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:57
msgid "Older Cards"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:59
msgid ""
"For Mac and Linux, it's possible to compile kernels at runtime, for cards "
"that are not officially supported. GeForce 8xxx, 9xxx and 2xx cards are not "
"included in the official release, but they might work by enabling "
":doc:`experimental features </render/cycles/experimental_features>`."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:63
msgid ""
"The `CUDA toolkit 5.0 <https://developer.nvidia.com/cuda-"
"toolkit-50-archive>`__ (64-bit version) or newer must be installed for this."
" Other versions might work, but are not supported. The first time rendering "
"is done, the kernel must be compiled for your GPU architecture. Since Cycles"
" is quite complex compared to a typical GPU kernel, compilation may take "
"from 40 seconds to a few minutes, and may also use about 2GB of memory, "
"depending on the graphics card model."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:72
msgid "Missing Features with Shader Model 1.x"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:74
msgid ""
"Due to limitations of the hardware, compiling a kernel with all features "
"enabled is not possible for these cards. Currently missing are:"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:79
msgid "Transparent Shadows"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:80
msgid "Sample as Lamp for World textures"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:81
msgid "Ambient Occlusion"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:82
msgid "Render Passes"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:83
msgid "Motion Blur"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:84
msgid "Non-Progressive integrator"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:88
msgid "Frequently Asked Questions"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:91
msgid "Why is Blender unresponsive during rendering?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:93
msgid ""
"While a graphics card is rendering, it can not redraw the user interface, "
"which makes Blender unresponsive. We attempt to avoid this problem by giving"
" back control over the :abbr:`GPU (Graphics processing unit)` as often as "
"possible, but a completely smooth interaction can't be guaranteed, "
"especially on heavy scenes. This is a limitation of graphics cards for which"
" no true solution exists, though we might be able to improve this somewhat "
"in the future."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:100
msgid ""
"If possible, it is best to install more than one :abbr:`GPU (Graphics "
"processing unit)`, using one for display and the other(s) for rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:105
msgid "Why does a scene that renders on the CPU not render on the GPU?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:107
msgid ""
"There maybe be multiple causes, but the most common is that there is not "
"enough memory on your graphics card. We can currently only render scenes "
"that fit in graphics card memory, and this is usually smaller than that of "
"the CPU. Note that, for example, 8k, 4k, 2k and 1k image textures take up "
"respectively 256MB, 64MB, 16MB and 4MB of memory."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:113
msgid ""
"We do intend to add a system to support scenes bigger than GPU memory, but "
"this will not be added soon."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:118
msgid ""
"Can I use multiple {{abbr|GPU|Graphics processing unit}}s for rendering?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:120
msgid ""
"Yes, go to User Preferences > System > Compute Device Panel, and configure "
"it as you desire."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:124
msgid ""
"Would multiple {{abbr|GPU|Graphics processing unit}}s increase available "
"memory?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:126
msgid "No, each GPU can only access its own memory."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:130
msgid "What renders faster, NVidia or AMD, CUDA or OpenCL?"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:132
msgid ""
"Currently NVidia with CUDA is rendering faster. There is no fundamental "
"reason why this should be so—we don't use any CUDA-specific features—but the"
" compiler appears to be more mature, and can better support big kernels. "
"OpenCL support is still being worked on and has not been optimized as much, "
"because we haven't had the full kernel working yet."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:140
msgid "Error Messages"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:143
msgid "Unsupported GNU version! gcc 4.7 and up are not supported!"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:145
msgid "On Linux, depending on your GCC version you might get this error."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:147
msgid ""
"If so, delete the following line in /usr/local/cuda/include/host_config.h"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:156
msgid "CUDA Error: Invalid kernel image"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:158
msgid ""
"If you get this error on Windows 64-bit, be sure to use the 64-bit build of "
"Blender, not the 32-bit version."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:163
msgid "CUDA Error: Out of memory"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:165
msgid ""
"This usually means there is not enough memory to store the scene on the GPU."
" We can currently only render scenes that fit in graphics card memory, and "
"this is usually smaller than that of the CPU. See above for more details."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:171
msgid "The NVIDIA OpenGL driver lost connection with the display driver"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:173
msgid ""
"If a GPU is used for both display and rendering, Windows has a limit on the "
"time the GPU can do render computations. If you have a particularly heavy "
"scene, Cycles can take up too much GPU time. Reducing Tile Size in the "
"Performance panel may alleviate the issue, but the only real solution is to "
"use separate graphics cards for display and rendering."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:179
msgid ""
"Another solution can be to increase the timeout, although this will make the"
" user interface less responsive when rendering heavy scenes. "
"http://msdn.microsoft.com/en-us/windows/hardware/gg487368.aspx"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:185
msgid "CUDA error: Unknown error in cuCtxSynchronize()"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:187
msgid ""
"An unknown error can have many causes, but one possibility is that it's a "
"timeout. See the above answer for solutions."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:192
msgid "On Mac OS X ( pre 2.66a* ), no CUDA GPU is available"
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:194
msgid ""
"Since 2.66a, Blender OSX comes with precompiled cuda kernels ( "
"kernel_sm_yx.cubin ), you still have to install the CUDA driver (any recent "
"version)."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:197
msgid ""
"For earlier versions, you need to install Xcode (command line tools are "
"sufficient), the `CUDA toolkit 4.2 <https://developer.nvidia.com/cuda-"
"toolkit-42-archive>`__ (exactly this version), and the CUDA driver (any "
"recent version). Xcode can be installed from the App Store. After Xcode is "
"installed you also need to install its command line tools. This is done by "
"starting Xcode, going to the Preferences, and then under Downloads "
"installing the command line tools."
msgstr ""

#: ../../manual/render/cycles/gpu_rendering.rst:205
msgid ""
"If it still doesn't work, ensure that in the Energy Saver preferences, the "
"automatic graphics switching is disabled and the fastest GPU is selected. "
"Also ensure you do not have other CUDA toolkit versions installed."
msgstr ""
