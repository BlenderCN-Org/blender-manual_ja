# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/render/performance/introduction.rst:4
msgid "Introduction"
msgstr ""

#: ../../manual/render/performance/introduction.rst:7
msgid "Optimizing Render Performance"
msgstr ""

#: ../../manual/render/performance/introduction.rst:9
msgid ""
"\"A watched pot never boils\" is the old saying, but you may wonder why your"
" render takes so long to create, or worse, crashes mid-way through! Well, "
"there is lots going on and lots you can do to speed up rendering or enable a"
" complicated render to complete. Also, it is possible to render a very "
"complicated scene on a mediocre PC by being \"render-smart\". Here's a \"top"
" ten\" list of things to do or not do in order to speed up rendering or even"
" avoid crashes during scene render. Some options may decrease the quality of"
" your render, but for draft renders you may not care."
msgstr ""

#: ../../manual/render/performance/introduction.rst:17
msgid ""
"If you get the message \"Malloc returns nil\", in plain English that means "
"the memory allocator tried to get more physical memory for Blender but came "
"back empty-handed. This means that you do not have enough memory available "
"to render the scene, and Blender cannot continue. You will need to do one or"
" more of the following tasks on this page in order to render."
msgstr ""

#: ../../manual/render/performance/introduction.rst:24
msgid "Hardware Improvements"
msgstr ""

#: ../../manual/render/performance/introduction.rst:26
msgid ""
"Get more RAM up to your PC's (motherboard and operating system) limit. "
"Presently, Blender can use up to 8gig of physical memory (64-bit address "
"space), but most PCs can only handle 4G of RAM."
msgstr ""

#: ../../manual/render/performance/introduction.rst:28
msgid "Upgrade your CPU to a multi-core/multiprocessor"
msgstr ""

#: ../../manual/render/performance/introduction.rst:29
msgid "Upgrade your OpenGL video drivers"
msgstr ""

#: ../../manual/render/performance/introduction.rst:30
msgid "Get a faster memory bus"
msgstr ""

#: ../../manual/render/performance/introduction.rst:31
msgid ""
"Get faster memory, up to your PC's motherboard limit. 667MHz memory is 30% "
"slower than 800MHz."
msgstr ""

#: ../../manual/render/performance/introduction.rst:32
msgid ""
"Use or set up a render farm using all available PCs in your house, or use a "
"render farm such as BURP."
msgstr ""

#: ../../manual/render/performance/introduction.rst:36
msgid "Operating System Configuration"
msgstr ""

#: ../../manual/render/performance/introduction.rst:38
msgid "Increase Blender's processing priority through your OS."
msgstr ""

#: ../../manual/render/performance/introduction.rst:39
msgid ""
"Increase your swap file space used by the OS for memory swapping. Also "
"called virtual memory pagefile size, up to the size of your physical memory."
msgstr ""

#: ../../manual/render/performance/introduction.rst:41
msgid ""
"Upgrade to a 64-bit operating system (if you're not already using one)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:42
msgid ""
"Exit or stop any background processes, like virus scanners, BOINC, Real, "
"even \"inactive\" ones like Quicktime, as they can randomly start up to look"
" for updates. They also take up RAM."
msgstr ""

#: ../../manual/render/performance/introduction.rst:44
msgid ""
"Disable network connections to stop random pinging traffic and refresh "
"traffic."
msgstr ""

#: ../../manual/render/performance/introduction.rst:45
msgid ""
"Stop listening to Internet radio, and close web browsers, especially any "
"multi-media (audio/video/game) sites."
msgstr ""

#: ../../manual/render/performance/introduction.rst:46
msgid "Close down all other running applications, like Word."
msgstr ""

#: ../../manual/render/performance/introduction.rst:47
msgid ""
"Exit all TSRs (those icons on your system tray) and widgets, any background "
"processes, and virus scanners."
msgstr ""

#: ../../manual/render/performance/introduction.rst:51
msgid "Blender Settings"
msgstr ""

#: ../../manual/render/performance/introduction.rst:53
msgid ""
"Increase the MEM Cache Limit in the User Preferences System & OpenGL tab."
msgstr ""

#: ../../manual/render/performance/introduction.rst:54
msgid ""
"Upgrade to an `optimized Blender build <http://www.graphicall.org>`__, "
"especially if you have a modern chip that supports SSE2 - render times are "
"**30% faster** using an optimized build."
msgstr ""

#: ../../manual/render/performance/introduction.rst:56
msgid ""
"Switch to an Orthographic camera, and render your own \"parts\" of the scene"
" as separate images, and then paste those parts together in GIMP. An old "
"trick in making your own panorama with a real camera is to take three or so "
"pictures of a very wide (beach sunset) scene, where you take one picture, "
"rotate to the right, snap another, then another, and when you get the "
"pictures developed, you overlap them to make a very wide landscape image. Do"
" the same in Blender: render out one shot to a file, then move the camera to"
" look at a different area of the scene, and render that shot. Each shot will"
" be of a smaller area and thus take in fewer polygons/faces. Be sure that "
"when you position your camera that you snap overlapping shots, so that you "
"can then match them up. If you don't want to use GIMP, you can use "
"compositing nodes and the Translate node to match them up in Blender."
msgstr ""

#: ../../manual/render/performance/introduction.rst:66
msgid ""
"Minimize the render window (and Blender if rendering to an internal window)."
" ATI users report dramatic speedup on a per frame basis, which adds up over "
"the frame range."
msgstr ""

#: ../../manual/render/performance/introduction.rst:68
msgid ""
"Use the Big Render script to render sub-sections of the overall image, and "
"then paste them together."
msgstr ""

#: ../../manual/render/performance/introduction.rst:69
msgid ""
"Make a customized build. For example, comment out calls to "
"check_non_flat_quads in convertblender.c; in some cases can make a "
"noticeable difference of 20-40%."
msgstr ""

#: ../../manual/render/performance/introduction.rst:74
msgid "Scene and Specific Objects"
msgstr ""

#: ../../manual/render/performance/introduction.rst:76
msgid ""
"Remove lamps, or move them to unrendered layers, or tie them to layers."
msgstr ""

#: ../../manual/render/performance/introduction.rst:77
msgid ""
"Turn off some lamp's shadows, using only one or two main sun lamps to cast "
"shadows. A few \"shadows only\" lights will render faster than every light "
"having shadows on."
msgstr ""

#: ../../manual/render/performance/introduction.rst:79
msgid "Use Buffer Shadows rather than ray-traced Shadows"
msgstr ""

#: ../../manual/render/performance/introduction.rst:80
msgid ""
"Bake your shadows using Render Baking Full Render bake on surfaces that do "
"not move. Use that texture for that mesh, then disable shadows for that "
"material."
msgstr ""

#: ../../manual/render/performance/introduction.rst:82
msgid ""
"Simplify meshes (remove polygons). The more vertices you have in camera, the"
" more time it takes to render."
msgstr ""

#: ../../manual/render/performance/introduction.rst:83
msgid "Remove Doubles, or use the Decimator mesh edit feature."
msgstr ""

#: ../../manual/render/performance/introduction.rst:84
msgid "Remove Subsurf and Multires modifiers."
msgstr ""

#: ../../manual/render/performance/introduction.rst:85
msgid "Delete backsides of meshes (removing unseen geometry)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:86
msgid ""
"Render just a few objects at a time; in the beginning of your project, "
"render the background objects and sets that will not change and will always "
"be in the background."
msgstr ""

#: ../../manual/render/performance/introduction.rst:88
msgid ""
"Put the buildings on another layer, and through render layers, don't render "
"them. Then composite them back in later."
msgstr ""

#: ../../manual/render/performance/introduction.rst:90
msgid ""
"Make the camera static so that you can better accomplish the above two "
"ideas."
msgstr ""

#: ../../manual/render/performance/introduction.rst:91
msgid "Avoid use of Area lights."
msgstr ""

#: ../../manual/render/performance/introduction.rst:92
msgid "Make materials Shadeless."
msgstr ""

#: ../../manual/render/performance/introduction.rst:93
msgid "Render Bake AO and textures, and then make those materials Shadeless."
msgstr ""

#: ../../manual/render/performance/introduction.rst:94
msgid "Decrease the Clip distance for spot lights."
msgstr ""

#: ../../manual/render/performance/introduction.rst:95
msgid "Decrease the Clip distance for the camera."
msgstr ""

#: ../../manual/render/performance/introduction.rst:96
msgid "Turn off world AO."
msgstr ""

#: ../../manual/render/performance/introduction.rst:97
msgid "Turn off Material SSS."
msgstr ""

#: ../../manual/render/performance/introduction.rst:98
msgid ""
"Use smaller image textures. A 256x256 image takes only 1% of the memory that"
" a 2k image does, often with no loss of quality in the ultimate render."
msgstr ""

#: ../../manual/render/performance/introduction.rst:100
msgid ""
"Reduce Subsurf. Each level quadruples (4x) the number of faces from the "
"previous level."
msgstr ""

#: ../../manual/render/performance/introduction.rst:101
msgid "Reduce Multires."
msgstr ""

#: ../../manual/render/performance/introduction.rst:102
msgid ""
"Make a matte render of background objects, like buildings, and put the image"
" of them on a billboard in the scene instead of the object themselves. This "
"will reduce vertex/face count."
msgstr ""

#: ../../manual/render/performance/introduction.rst:105
msgid ""
"if you have lots of linked instances of an object, use DupliFaces, as these "
"are instanced. If you have 100 of them, Blender will only store the geometry"
" for 1 (Instances themselves take a small amount of memory)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:110
msgid "Render Settings"
msgstr ""

#: ../../manual/render/performance/introduction.rst:116
msgid ""
"Render to an :doc:`Image Editor </ce/windows/uv-image>` window, not a popup."
" :doc:`Render Window </render/display>`."
msgstr ""

#: ../../manual/render/performance/introduction.rst:135
msgid ""
"Render in Parts. This will also allow you to render HUGE images on a weak "
"PC. On a multi-core PC, it will assign a thread to each part as well."
msgstr ""

#: ../../manual/render/performance/introduction.rst:137
msgid "Increase the octree resolution."
msgstr ""

#: ../../manual/render/performance/introduction.rst:138
msgid "Render at a percentage size of your final resolution (like 25%)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:141
msgid ":doc:`Anim Panel </render/workflows/animations>`"
msgstr ""

#: ../../manual/render/performance/introduction.rst:143
msgid ""
"Decrease the frame count of the animation (and use a lower framerate for the"
" same duration of animation). For example, render 30 frames at 10 frames per"
" second for a 3-second animation, instead of 75 frames at 25 frames per "
"second."
msgstr ""

#: ../../manual/render/performance/introduction.rst:146
msgid ":doc:`Bake Panel </render/workflows/bake>`"
msgstr ""

#: ../../manual/render/performance/introduction.rst:148
msgid ""
"Bake Full Render - create a UV Texture that colors the objects based on "
"materials, and then use that UV Texture shadeless instead of the material."
msgstr ""

#: ../../manual/render/performance/introduction.rst:150
msgid "Bake Ambient Occlusion only."
msgstr ""

#: ../../manual/render/performance/introduction.rst:151
msgid "Bake textures for objects."
msgstr ""

#: ../../manual/render/performance/introduction.rst:152
msgid ""
"Baking Normals or Displacement does not speed up render time, and are used "
"for other things."
msgstr ""

#: ../../manual/render/performance/introduction.rst:165
msgid "Multi-Pass Compositing"
msgstr ""

#: ../../manual/render/performance/introduction.rst:177
msgid ""
"Both shadows and highlights can be captured separately from the objects that"
" are being illuminated or shadowed, such that the intensity, color, and "
"depth of the effect can be adjusted later without re-rendering."
msgstr ""

#: ../../manual/render/performance/introduction.rst:184
msgid ""
"Tricky lighting situations can be avoided by handling the objects "
"separately, then combining the individually-rendered clips and \"tweaking\" "
"the result."
msgstr ""

#: ../../manual/render/performance/introduction.rst:195
msgid "There are compelling advantages to this approach:"
msgstr ""

#: ../../manual/render/performance/introduction.rst:203
msgid ""
"It's also possible that you find yourself saying, \"okay, that's *almost* "
"what I wanted, but now I'd like to *add* this and maybe *take away* that.\" "
"A compositing-based approach enables you to do just that, and furthermore, "
"to do so *non-destructively.* In other words, having generated the "
"\"addition\" (or the \"mask\") as a separate channel of information, you can"
" now fine-tune its influence in the overall \"mix, \" or even change your "
"mind and remove it altogether, all without permanently altering anything."
msgstr ""

#: ../../manual/render/performance/introduction.rst:208
msgid ""
"By and large, these stages work *two-* dimensionally, manipulating what is "
"by that time \"a raster bitmap with R, G, B, Alpha *(transparency...)* and "
"Z-Depth information,\" so they're consistently fast."
msgstr ""

#: ../../manual/render/performance/introduction.rst:210
msgid ""
"Since each discrete rendering task has been simplified, the computer can "
"carry them out using much fewer resources."
msgstr ""

#: ../../manual/render/performance/introduction.rst:211
msgid ""
"The tasks can be distributed among several different computers ... even "
"less-powerful ones (like the two older machines that are sitting in your "
"closet right now because you can't get rid of them)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:213
msgid ""
"\"After all, the scene doesn't actually have to be *physically perfect,* to "
"be *convincing.* \" A compositing-based approach lets you take full "
"advantage of this. You can focus your attention (and Blender's) upon those "
"specific aspects of the scene which will actually make a noticeable "
"difference. It is possible to save a considerable amount of time by "
"consciously choosing to exclude less-important aspects which (although "
"\"technically correct\") probably won't be noticed."
msgstr ""

#: ../../manual/render/performance/introduction.rst:112
msgid ""
":doc:`Output Panel </render/output>` - Disable *Edge* rendering. - *Save "
"Buffers*."
msgstr ""

#: ../../manual/render/performance/introduction.rst:118
msgid "Use multiple *Threads* on a multi-core CPU (with multiple *Parts*)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:119
msgid ""
":doc:`Render Layers Panel </render/post_process/layers>` - Render only the "
"Layers of interest. - Render with all lights set to one simple spot (enter "
"its name in the *Light:* field). - Render with one material override (enter "
"its name in the Mat: field)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:124
msgid ""
"Disable unnecessary Render Passes, such as *Z*, or only render the pass of "
"interest, such as *Diffuse*."
msgstr ""

#: ../../manual/render/performance/introduction.rst:126
msgid ""
":doc:`Render Panel </render/options>` - Turn off *Shadows*. - Turn off "
"*Environment Mapping*. - Turn off *Panoramic Rendering*. - Turn off "
"*Raytracing*. - Turn off SSS Subsurface Scattering. - Turn off or lower "
"oversampling/aliasing *OSA*. - Turn off or lower *Motion Blur*."
msgstr ""

#: ../../manual/render/performance/introduction.rst:139
msgid "Turn off *Fields* rendering."
msgstr ""

#: ../../manual/render/performance/introduction.rst:140
msgid "Use *Border* rendering to render a subset of the full image."
msgstr ""

#: ../../manual/render/performance/introduction.rst:153
msgid ""
":doc:`Format Panel </render/output>` - Render at a lower resolution. Smaller"
" pictures take less time to render. - Choose a faster CODEC or CODEC "
"settings. - Render in black and white (*BW* button). - If using FFMPEG, do "
"not activate *Multiplex audio*. - If using FFMPEG, *Autosplit Output* "
"(*Video* panel button)."
msgstr ""

#: ../../manual/render/performance/introduction.rst:160
msgid ""
"Render only RGB if you just need color; the A channel (*RGBA* button) takes "
"more memory and is unused when saving a movie file."
msgstr ""

#: ../../manual/render/performance/introduction.rst:167
msgid ""
"Another strategy that can be used to address the problem of long (re-)render"
" times is to structure your workflow from the ground up so that you make "
"aggressive use of *compositing*, as described in the \"Post-Production\" "
"section. In this approach, you break down each shot into components that can"
" be rendered separately, then you combine those separately-rendered elements"
" to achieve the finished clip. For instance:"
msgstr ""

#: ../../manual/render/performance/introduction.rst:174
msgid ""
"If the camera isn't moving, then neither is the background: only a single "
"frame is needed. (The same is true of any non-moving object within the "
"frame.) These individual elements, having been generated *once,* can be re-"
"used as many times as necessary over as many frames as necessary."
msgstr ""

#: ../../manual/render/performance/introduction.rst:179
msgid ""
"Start by using lights that do not cast shadows. (Shadow calculations are big"
" time-killers.) Then, use \"shadow-only\" lights (which cast shadows, but do"
" not cast light) to create shadows *only* where you judge that they are "
"actually necessary. (It is very often the case that only a few of the "
"shadows which could exist in the scene actually matter, and that the rest of"
" them simply won't be noticed.)"
msgstr ""

#: ../../manual/render/performance/introduction.rst:187
msgid ""
"This is a very familiar idea. Modern sound recordings, for example, always "
"use a \"multi-track\" approach. Individual components of the song are "
"captured separately and in isolation, then the components are \"mixed\" "
"together. The \"final mix\" then goes through additional processing stages, "
"called *mastering*, to produce the finished product(s). (In fact, the "
"features and design of modern sound-processing software are directly "
"comparable to that of Blender's node-based compositor.)"
msgstr ""

#: ../../manual/render/performance/introduction.rst:197
msgid ""
"You have options. If something is \"not quite right,\" you don't necessarily"
" have to start over from scratch."
msgstr ""

#: ../../manual/render/performance/introduction.rst:198
msgid ""
"In practice, the deadline-killer is *re-* rendering, which ordinarily must "
"be done (in its entirety) just because \"'one little thing' about the shot "
"is wrong.\" Compositing helps to avoid this, because (ideally...) only the "
"specific parts that are found to be in error must be repeated. (Or, maybe, "
"the error can be blocked out with a \"garbage matte\" and a corrected "
"version can be inserted in its place. No one will ever know!)"
msgstr ""

#: ../../manual/render/performance/introduction.rst:221
msgid ""
"Of course, this approach is not without its own set of trade-offs. You must "
"devise a workable asset-management system for keeping track of exactly what "
"material you have, where it is, whether it is up-to-date, and exactly how to"
" re-create it. You must understand and use the \"library linking\" features "
"of Blender to allow you to refer to objects, nodes, materials, textures and "
"scenes in a carefully-organized collection of other files. You need to have "
"a very clear notion, *in advance*, of exactly what the finished shot must "
"consist of and what the task breakdown must be. You must be a scrupulous "
"note-taker and record-keeper. But sometimes this is the best way, if not the"
" *only* way, to accomplish a substantial production."
msgstr ""

#~ msgid ""
#~ "Another strategy that can be used to address the problem of long (re-)render"
#~ " times is to structure your workflow from the ground up so that you make "
#~ "aggressive use of *compositing*, as described in the \"Post-Production\" "
#~ "section.  In this approach, you break down each shot into components that "
#~ "can be rendered separately, then you combine those separately-rendered "
#~ "elements to achieve the finished clip. For instance:"
#~ msgstr ""

#~ msgid ""
#~ "If the camera isn't moving, then neither is the background:  only a single "
#~ "frame is needed. (The same is true of any non-moving object within the "
#~ "frame.)  These individual elements, having been generated *once,* can be re-"
#~ "used as many times as necessary over as many frames as necessary."
#~ msgstr ""

#~ msgid ""
#~ "Start by using lights that do not cast shadows. (Shadow calculations are big"
#~ " time-killers.)  Then, use \"shadow-only\" lights (which cast shadows, but "
#~ "do not cast light) to create shadows *only* where you judge that they are "
#~ "actually necessary. (It is very often the case that only a few of the "
#~ "shadows which could exist in the scene actually matter, and that the rest of"
#~ " them simply won't be noticed.)"
#~ msgstr ""

#~ msgid ""
#~ "This is a very familiar idea.  Modern sound recordings, for example, always "
#~ "use a \"multi-track\" approach. Individual components of the song are "
#~ "captured separately and in isolation, then the components are \"mixed\" "
#~ "together. The \"final mix\" then goes through additional processing stages, "
#~ "called *mastering*, to produce the finished product(s).  (In fact, the "
#~ "features and design of modern sound-processing software are directly "
#~ "comparable to that of Blender's node-based compositor.)"
#~ msgstr ""

#~ msgid ""
#~ "You have options.  If something is \"not quite right,\" you don't "
#~ "necessarily have to start over from scratch."
#~ msgstr ""

#~ msgid ""
#~ "In practice, the deadline-killer is *re-* rendering, which ordinarily must "
#~ "be done (in its entirety) just because \"'one little thing' about the shot "
#~ "is wrong.\"  Compositing helps to avoid this, because (ideally...) only the "
#~ "specific parts that are found to be in error must be repeated. (Or, maybe, "
#~ "the error can be blocked out with a \"garbage matte\" and a corrected "
#~ "version can be inserted in its place. No one will ever know!)"
#~ msgstr ""

#~ msgid ""
#~ "Of course, this approach is not without its own set of trade-offs.  You must"
#~ " devise a workable asset-management system for keeping track of exactly what"
#~ " material you have, where it is, whether it is up-to-date, and exactly how "
#~ "to re-create it.  You must understand and use the \"library linking\" "
#~ "features of Blender to allow you to refer to objects, nodes, materials, "
#~ "textures and scenes in a carefully-organized collection of other files. You "
#~ "need to have a very clear notion, *in advance*, of exactly what the finished"
#~ " shot must consist of and what the task breakdown must be. You must be a "
#~ "scrupulous note-taker and record-keeper.  But sometimes this is the best "
#~ "way, if not the *only* way, to accomplish a substantial production."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Output Panel </render/output>` - Disable :guilabel:`Edge` rendering. -"
#~ " :guilabel:`Save Buffers`."
#~ msgstr ""

#~ msgid ""
#~ "Use multiple :guilabel:`Threads` on a multi-core CPU (with multiple "
#~ ":guilabel:`Parts`)."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Render Layers Panel </render/post_process/layers>` - Render only the "
#~ "Layers of interest. - Render with all lights set to one simple spot (enter "
#~ "its name in the :guilabel:`Light:` field). - Render with one material "
#~ "override (enter its name in the Mat: field)."
#~ msgstr ""

#~ msgid ""
#~ "Disable unnecessary Render Passes, such as :guilabel:`Z`, or only render the"
#~ " pass of interest, such as :guilabel:`Diffuse`."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Render Panel </render/options>` - Turn off :guilabel:`Shadows`. - Turn"
#~ " off :guilabel:`Environment Mapping`. - Turn off :guilabel:`Panoramic "
#~ "Rendering`. - Turn off :guilabel:`Raytracing`. - Turn off SSS Subsurface "
#~ "Scattering. - Turn off or lower oversampling/aliasing :guilabel:`OSA`. - "
#~ "Turn off or lower :guilabel:`Motion Blur`."
#~ msgstr ""

#~ msgid "Turn off :guilabel:`Fields` rendering."
#~ msgstr ""

#~ msgid "Use :guilabel:`Border` rendering to render a subset of the full image."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`Format Panel </render/output>` - Render at a lower resolution. Smaller"
#~ " pictures take less time to render. - Choose a faster CODEC or CODEC "
#~ "settings. - Render in black and white (:guilabel:`BW` button). - If using "
#~ "FFMPEG, do not activate :guilabel:`Multiplex audio`. - If using FFMPEG, "
#~ ":guilabel:`Autosplit Output` (:guilabel:`Video` panel button)."
#~ msgstr ""

#~ msgid ""
#~ "Render only RGB if you just need color; the A channel (:guilabel:`RGBA` "
#~ "button) takes more memory and is unused when saving a movie file."
#~ msgstr ""
