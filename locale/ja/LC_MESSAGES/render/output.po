# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../manual/render/output.rst:4
msgid "Output Options"
msgstr ""

#: ../../manual/render/output.rst:6
msgid ""
"The first step in the rendering process is to determine and set the output "
"options. This includes render size, frame rate, pixel aspect ratio, output "
"location, and file type."
msgstr ""

#: ../../manual/render/output.rst:11
msgid "Dimensions"
msgstr ""

#: ../../manual/render/output.rst:19
msgid "Resolution"
msgstr ""

#: ../../manual/render/output.rst:28
msgid "Aspect Ratio"
msgstr ""

#: ../../manual/render/output.rst:28
msgid ""
"See :doc:`Video Output </render/output/video>` for details on pixel aspect "
"ratio."
msgstr ""

#: ../../manual/render/output.rst:38
msgid "Border"
msgstr ""

#: ../../manual/render/output.rst:42
msgid "Frame Range"
msgstr ""

#: ../../manual/render/output.rst:47
msgid "Frame Rate"
msgstr ""

#: ../../manual/render/output.rst:45
msgid ""
"For an :doc:`Animation </render/workflows/animations>` the frame rate, or "
"how many frames will be displayed per second, which, by default, is 24 "
"frames per second, the standard for animation. Use 29.97 frames per second "
"for USA television."
msgstr ""

#: ../../manual/render/output.rst:51
msgid "Time Remapping"
msgstr ""

#: ../../manual/render/output.rst:50
msgid "Use to remap the length of an animation."
msgstr ""

#: ../../manual/render/output.rst:54
msgid "Presets"
msgstr ""

#: ../../manual/render/output.rst:56
msgid ""
"To make life easier the topmost menu provides some common presets (par = "
"Pixel Aspect Ratio). You can add your own or remove one with the + and - "
"buttons:"
msgstr ""

#: ../../manual/render/output.rst:61
msgid ""
"These are just the presets; you can set any resolution you wish, subject to "
"your PC's memory restrictions; see the Render page for ideas and techniques "
"and tools for enabling huge render outputs."
msgstr ""

#: ../../manual/render/output.rst:67
msgid "Output Panel"
msgstr ""

#: ../../manual/render/output.rst:69
msgid ""
"This panel provides options for setting the location of rendered frames for "
"animations, and the quality of the saved images."
msgstr ""

#: ../../manual/render/output.rst:74
msgid "File Locations"
msgstr ""

#: ../../manual/render/output.rst:81
msgid ""
"Clicking the folder icon to the right of the field turns a Blender window "
"pane into a File Browser window. This window is very handy for scrolling "
"through your hard disk and selecting a file or directory."
msgstr ""

#: ../../manual/render/output.rst:86
msgid "PathSpecs"
msgstr ""

#: ../../manual/render/output.rst:88
msgid ""
"The path specification for the location can be absolute *On Microsoft-"
"Windows include a normal or mapped drive letter (e.g. \"F:\")*, a breadcrumb"
" notation (e.g. \"./\" and \"../\" and \"//\" (the blend file location). "
"Forward slashes (Unix-style) or backslashes (Windows-style) are acceptable "
"on either platform. If omitted, the file is saved in the current working "
"directory blender was started from."
msgstr ""

#: ../../manual/render/output.rst:96
msgid "File Type"
msgstr ""

#: ../../manual/render/output.rst:98
msgid ""
"Blender supports a wide mix of image formats. These formats are listed in "
"alphabetical order."
msgstr ""

#: ../../manual/render/output.rst:106
msgid ""
"There are many image formats out there for many different uses. A format "
"stores an image in a *loss-less* or lossy format; with lossy formats you "
"suffer some image degradation but save disk space because the image is saved"
" using fewer bytes. A loss-less format preserves the image exactly, pixel "
"for pixel. You can break formats down into *static* images and movie "
"*clips*."
msgstr ""

#: ../../manual/render/output.rst:112
msgid ""
"Within either category there are standards (static formats and clip codecs) "
"which may be proprietary standards (developed and controlled by one "
"company), or open standards (which are community or consortium-controlled). "
"Open standards generally outlive any one particular company and will always "
"be royalty-free and freely obtained by the viewer. Proprietary formats may "
"only work with a specific video card, or while the codec may be free, the "
"viewer may cost."
msgstr ""

#: ../../manual/render/output.rst:121
msgid "Compression"
msgstr ""

#: ../../manual/render/output.rst:123
msgid ""
"Some formats can compress the image to use less disk space. This compression"
" might be loss-less (PNG, ...) or lossy (Jpeg, ...). Lossy formats don't "
"store individual pixel information, thus reducing image quality. All the "
"other formats are more or less equivalent, each having advantages and "
"disadvantages. Make your compression selection using the button or field "
"located beneath the format selector. For example, if Jpeg is selected, you "
"can specify a compression level (Quality:90 by default). Higher quality "
"takes more disk space, but results in a better looking picture with less "
"compression encoding artifacts."
msgstr ""

#: ../../manual/render/output.rst:139
msgid "Channels"
msgstr ""

#: ../../manual/render/output.rst:147
msgid ""
"**OpenEXR** and **OpenEXR Multilayer** formats are the only formats that "
"store Z-depth buffer information. **OpenEXR Multilayer** is the only format "
"that stores Render Layer and Render Passes as layers that can then be "
"composited in post-production."
msgstr ""

#: ../../manual/render/output.rst:153
msgid "Image Formats"
msgstr ""

#: ../../manual/render/output.rst:155
msgid "BMP"
msgstr ""

#: ../../manual/render/output.rst:156
msgid "Bit-Mapped Paint loss-less format used by early paint programs."
msgstr ""

#: ../../manual/render/output.rst:157
msgid "Iris"
msgstr ""

#: ../../manual/render/output.rst:158
msgid ""
"The standard Silicon Graphics Inc (SGI) format used on those spanking Unix "
"OS machines."
msgstr ""

#: ../../manual/render/output.rst:160
msgid "PNG"
msgstr ""

#: ../../manual/render/output.rst:160
msgid ""
"Portable Network Graphics, a standard meant to replace old GIF inasmuch as "
"it is loss-less, but supports full true color images. Supports Alpha "
"channel."
msgstr ""

#: ../../manual/render/output.rst:164
msgid "Jpeg"
msgstr ""

#: ../../manual/render/output.rst:163
msgid ""
"Joint Picture Expert Group (name of the consortium which defined it), an "
"open format that supports very good compression with little loss of quality."
" Only saves RGB values. Re-saving images results in more and more "
"compression and loss of quality."
msgstr ""

#: ../../manual/render/output.rst:166
msgid "Jpeg 2000"
msgstr ""

#: ../../manual/render/output.rst:167
msgid "Uses the Jpeg 2000 codec."
msgstr ""

#: ../../manual/render/output.rst:170
msgid "Targa and Targa raw"
msgstr ""

#: ../../manual/render/output.rst:169
msgid ""
"Truevision Advanced Raster Graphics Adapter is a simple raster graphics "
"format established in 1984 and used by the original IBM PCs. Supports Alpha "
"Channel. Enable the RGBA button to save the Alpha channel."
msgstr ""

#: ../../manual/render/output.rst:173
msgid "Cineon"
msgstr ""

#: ../../manual/render/output.rst:173
msgid ""
"Format produced by a Kodak Cineon camera and used in high-end graphics "
"software and more directed toward digital film."
msgstr ""

#: ../../manual/render/output.rst:177
msgid "DPX"
msgstr ""

#: ../../manual/render/output.rst:176
msgid ""
"Digital Moving-Picture eXchange format; an open professional format (close "
"to Cineon) that also contains metainformation about the picture; 16-bit "
"uncompressed bitmap (huge file size). Used in preservation."
msgstr ""

#: ../../manual/render/output.rst:189
msgid "OpenEXR"
msgstr ""

#: ../../manual/render/output.rst:180
msgid ""
"An open and non-proprietary extended and highly dynamic range (HDR) image "
"format, saving both Alpha and Z-depth buffer information."
msgstr ""

#: ../../manual/render/output.rst:183
msgid ""
"Enable the *Half* button to use the 16-bit format; otherwise 32-bit floating"
" point precision color depth will be used."
msgstr ""

#: ../../manual/render/output.rst:185
msgid ""
"Enable the *Zbuf* button to save the Z-buffer (distance from camera) info."
msgstr ""

#: ../../manual/render/output.rst:186
msgid ""
"Choose a compression/decompression *CODEC* (ZIP by default) to save disk "
"space."
msgstr ""

#: ../../manual/render/output.rst:187
msgid "Enable the *RGBA* button to save the Alpha channel."
msgstr ""

#: ../../manual/render/output.rst:188
msgid ""
"Because OpenEXR is so new and previews are generally not supported by "
"Operating Systems, enable *Preview* to save a JPG image along with the EXR "
"image so you can quickly and easily see what the basic image looks like."
msgstr ""

#: ../../manual/render/output.rst:194
msgid "OpenEXR (MultiLayer)"
msgstr ""

#: ../../manual/render/output.rst:192
msgid ""
"An OpenEXR format that supports storing multiple layers of images together "
"in one file. Each layer stores a render pass, such as shadow, specularity, "
"color, etc. You can specify the encoding used to save the MultiLayer file "
"using the codec selector (ZIP (loss-less) is shown and used by default)."
msgstr ""

#: ../../manual/render/output.rst:197
msgid "Radiance HDR"
msgstr ""

#: ../../manual/render/output.rst:197
msgid ""
"A High Dynamic Range image format that can store images in floating point "
"(with light brighter than 1.0) - 32bits per channel."
msgstr ""

#: ../../manual/render/output.rst:199
msgid "TIFF"
msgstr ""

#: ../../manual/render/output.rst:200
msgid "Often used for teletype and facsimile (FAX) images."
msgstr ""

#: ../../manual/render/output.rst:205
msgid "Frame Server"
msgstr ""

#: ../../manual/render/output.rst:202
msgid ""
"This is an alternative output method that allows Blender to serve frames "
"over a network, useful for using external video encoders where the frames "
"would not fit uncompressed on disk. :doc:`documentation "
"</render/output/frameserver>`"
msgstr ""

#: ../../manual/render/output.rst:208
msgid "VSE Rendering"
msgstr ""

#: ../../manual/render/output.rst:212
msgid "Rendering to an Image Sequence"
msgstr ""

#: ../../manual/render/output.rst:214
msgid ""
"In many cases, cutting and re-arranging (editing) a codec-encoded video "
"strip will give you fits, because the encoding algorithm that is used "
"internally to reconstruct each image gets 'off' by a frame or two or three. "
"To work directly on the 'raw' frame set, a very common technique is to "
"import your video as a strip and render it out to series of individual "
"frames, where each frame is stored in its own image file (JPG most "
"commonly)."
msgstr ""

#: ../../manual/render/output.rst:221
msgid ""
"To do so, Add→Movie and load your original video. Set your Format SizeX and "
"SizeY (either to match the original, or different if you want to distort or "
"upscale/downscale the video), set image type to JPEG, adjust your Quality "
"settings, and in the Anim panel set your End: to the number of actual frames"
" in the video strip. Click ANIMATION and a series of numbered files will be "
"output to the top filespec in the Output panel."
msgstr ""

#: ../../manual/render/output.rst:228
msgid ""
"You can now delete the video strip, and Add→Image instead; right click on "
"the directory name to pull in all of the images, in sequence, that are "
"within that directory. Now, when you cut at frame 4321, for example, the "
"next frame of the second strip will *really* start with frame 4322."
msgstr ""

#: ../../manual/render/output.rst:235
msgid "Rendering to Video"
msgstr ""

#: ../../manual/render/output.rst:237
msgid "Ridiculously easy (when you learn where the buttons are):"
msgstr ""

#: ../../manual/render/output.rst:239
msgid "Add the sequence of images as described above."
msgstr ""

#: ../../manual/render/output.rst:240
msgid ""
"Set your Output file path and name to wherever you want to save the movie "
"file (e.g. C:\\My Documents\\MyMovie) in the upper output box of the render "
"buttons."
msgstr ""

#: ../../manual/render/output.rst:242
msgid ""
"Change your Format to a movie file format (AVI, MOV, FFMPEG) and CODEC."
msgstr ""

#: ../../manual/render/output.rst:243
msgid ""
"Set your framerate to match whatever framerate the sequence is to be played "
"back in. Under the Anim/Playback buttons."
msgstr ""

#: ../../manual/render/output.rst:245
msgid "Set your ANIM End: to the number of images in the sequence, and"
msgstr ""

#: ../../manual/render/output.rst:246
msgid "ANIM"
msgstr ""

#: ../../manual/render/output.rst:248
msgid ""
"The single movie file is created and saved; the name is what you specified "
"but with the starting frame and ending frame numbers appended (e.g. "
"MyMovie0000-0250.avi)"
msgstr ""

#: ../../manual/render/output.rst:14
msgid ""
"The Dimensions section has settings for the size of the rendered images. By "
"default the dimensions *SizeX* and *SizeY* are 1920?1080 and can be changed "
"by adjusting the X and Y fields. These buttons control the overall size of "
"the image."
msgstr ""

#: ../../manual/render/output.rst:18
msgid ""
"The *Percentage* slider will scale the currently set resolution by that "
"value. This is useful for small test renders that are the same proportions "
"as the final image."
msgstr ""

#: ../../manual/render/output.rst:22
msgid ""
"Just below are two more settings, *AspX* and *AspY* which control the shape "
"of the pixels along the respective axis. By default it is 1:1 since computer"
" screen pixels are square. If television shorts are being made, and since TV"
" pixels are not square, you want to change this aspect ratio to match the "
"destination video standard: PAL for Europe, and NTSC for the Americas."
msgstr ""

#: ../../manual/render/output.rst:31
msgid ""
"You can render just a portion of the view instead of rendering the entire "
"frame. While in Camera View, enable *Border* and press :kbd:`Ctrl-B`, then "
"drag a rectangle to define the area you want to render. :kbd:`Ctrl-Alt-B` is"
" the shortcut to disable the border. Note that this disables the *Save "
"Buffers* option in *Performance* and *Full Sample* option in *Anti-"
"Aliasing*."
msgstr ""

#: ../../manual/render/output.rst:37
msgid ""
"Enabling *Crop* will crop the rendered image to the *Border* size, instead "
"of rendering a black region around it."
msgstr ""

#: ../../manual/render/output.rst:41
msgid ""
"Set the *Start* and *End* frames for :doc:`Rendering Animations "
"</render/workflows/animations>`. *Step* controls the number of frames to "
"advance by for each frame in the timeline."
msgstr ""

#: ../../manual/render/output.rst:59
msgid "See: :term:`Video Presets`"
msgstr ""

#: ../../manual/render/output.rst:76
msgid ""
"By default, each frame of an animation is saved in the /tmp directory. "
"Change this or any field by :kbd:`Shift-LMB` clicking in the name field and "
"entering a new name. If you use the // and do not save a new .blend file "
"somewhere, Blender assumes the // to refer to the Blender install folder."
msgstr ""

#: ../../manual/render/output.rst:101
msgid ""
"The output format for Animations **Animation** :kbd:`Ctrl-F12` is selected "
"using the *File Format* Menu. From here you can select many image or "
"animation formats. When rendering static images, you can select the file "
"type after you render when you save the image."
msgstr ""

#: ../../manual/render/output.rst:132
msgid ""
"The default image type is *Targa*, but, since the image is stored in a "
"buffer and then saved, it is possible to change the image file type after "
"the rendering and before saving using this menu. (**Attention** : this is "
"only valid for static images, not when rendering animations!)."
msgstr ""

#: ../../manual/render/output.rst:141
msgid ""
"Blender renders color (*RGB*) images by default, but Black and White (*BW*) "
"and color with Alpha Channel (*RGBA*) are also possible. Beware: unless the "
"Extensions button of the Output panel is set, Blender does *not* "
"automatically add extensions to filenames, hence any ``.tga`` or ``.png`` "
"extension must be explicitly written in the File Save window."
msgstr ""

#~ msgid ""
#~ "Blender renders color (*RGB*) images by default, but Black and White (*BW*) "
#~ "and color with Alpha Channel (*RGBA*) are also possible.  Beware: unless the"
#~ " Extensions button of the Output panel is set, Blender does *not* "
#~ "automatically add extensions to filenames, hence any *.tga* or *.png* "
#~ "extension must be explicitly written in the File Save window."
#~ msgstr ""

#~ msgid ""
#~ "The Dimensions section has settings for the size of the rendered images. By "
#~ "default the dimensions :guilabel:`SizeX` and :guilabel:`SizeY` are 1920?1080"
#~ " and can be changed by adjusting the X and Y fields. These buttons control "
#~ "the overall size of the image."
#~ msgstr ""

#~ msgid ""
#~ "The :guilabel:`Percentage` slider will scale the currently set resolution by"
#~ " that value. This is useful for small test renders that are the same "
#~ "proportions as the final image."
#~ msgstr ""

#~ msgid ""
#~ "Just below are two more settings, :guilabel:`AspX` and :guilabel:`AspY` "
#~ "which control the shape of the pixels along the respective axis. By default "
#~ "it is 1:1 since computer screen pixels are square. If television shorts are "
#~ "being made, and since TV pixels are not square, you want to change this "
#~ "aspect ratio to match the destination video standard: PAL for Europe, and "
#~ "NTSC for the Americas."
#~ msgstr ""

#~ msgid ""
#~ "You can render just a portion of the view instead of rendering the entire "
#~ "frame. While in Camera View, enable :guilabel:`Border` and press "
#~ ":kbd:`ctrl-B`, then drag a rectangle to define the area you want to render. "
#~ ":kbd:`ctrl-alt-B` is the shortcut to disable the border. Note that this "
#~ "disables the :guilabel:`Save Buffers` option in :guilabel:`Performance` and "
#~ ":guilabel:`Full Sample` option in :guilabel:`Anti-Aliasing`."
#~ msgstr ""

#~ msgid ""
#~ "Enabling :guilabel:`Crop` will crop the rendered image to the "
#~ ":guilabel:`Border` size, instead of rendering a black region around it."
#~ msgstr ""

#~ msgid ""
#~ "Set the :guilabel:`Start` and :guilabel:`End` frames for :doc:`Rendering "
#~ "Animations </render/workflows/animations>`. :guilabel:`Step` controls the "
#~ "number of frames to advance by for each frame in the timeline."
#~ msgstr ""

#~ msgid ":guilabel:`DVCPRO HD 1080p`"
#~ msgstr ""

#~ msgid "1280x1080, 3:2par 24fps"
#~ msgstr ""

#~ msgid ":guilabel:`DVCPRO HD 720p`"
#~ msgstr ""

#~ msgid "960x720 4:3par  24fps"
#~ msgstr ""

#~ msgid ":guilabel:`HDTV 1080p`"
#~ msgstr ""

#~ msgid "1920×1080 square pixels 24fps"
#~ msgstr ""

#~ msgid ":guilabel:`HDTV 720p`"
#~ msgstr ""

#~ msgid "1280x720 square pixels 24fps"
#~ msgstr ""

#~ msgid ":guilabel:`HDV 1080p`"
#~ msgstr ""

#~ msgid "1440x1080 4:3par 23.98fps"
#~ msgstr ""

#~ msgid ":guilabel:`HDV NTSC 1080p`"
#~ msgstr ""

#~ msgid "1440x1080 4:3par 29.97fps"
#~ msgstr ""

#~ msgid ":guilabel:`HDV PAL 1080p`"
#~ msgstr ""

#~ msgid "1440x1080 4:3par 25fps"
#~ msgstr ""

#~ msgid ":guilabel:`TV NTSC 16:9`"
#~ msgstr ""

#~ msgid "720x480 4:3.3par 29.97fps"
#~ msgstr ""

#~ msgid ":guilabel:`NTSC 4:3`"
#~ msgstr ""

#~ msgid "720×480 10:11par. 29.97fps"
#~ msgstr ""

#~ msgid ":guilabel:`PAL 16:9`"
#~ msgstr ""

#~ msgid "720x576 16:11par 25fps"
#~ msgstr ""

#~ msgid ":guilabel:`PAL 4:3`"
#~ msgstr ""

#~ msgid "720x576 12:11par 25fps"
#~ msgstr ""

#~ msgid ""
#~ "By default, each frame of an animation is saved in the /tmp directory. "
#~ "Change this or any field by :kbd:`shift-Lmb` clicking in the name field and "
#~ "entering a new name. If you use the // and do not save a new .blend file "
#~ "somewhere, Blender assumes the // to refer to the Blender install folder."
#~ msgstr ""

#~ msgid ""
#~ "The output format for Animations **Animation** :kbd:`ctrl-f12` is selected "
#~ "using the :guilabel:`File Format` Menu. From here you can select many image "
#~ "or animation formats. When rendering static images, you can select the file "
#~ "type after you render when you save the image."
#~ msgstr ""

#~ msgid ""
#~ "The default image type is :guilabel:`Targa`, but, since the image is stored "
#~ "in a buffer and then saved, it is possible to change the image file type "
#~ "after the rendering and before saving using this menu. (**Attention** : this"
#~ " is only valid for static images, not when rendering animations!)."
#~ msgstr ""

#~ msgid ""
#~ "Blender renders color (:guilabel:`RGB`) images by default, but Black and "
#~ "White (:guilabel:`BW`) and color with Alpha Channel (:guilabel:`RGBA`) are "
#~ "also possible.  Beware: unless the Extensions button of the Output panel is "
#~ "set, Blender does *not* automatically add extensions to filenames, hence any"
#~ " :guilabel:`.tga` or :guilabel:`.png` extension must be explicitly written "
#~ "in the File Save window."
#~ msgstr ""
