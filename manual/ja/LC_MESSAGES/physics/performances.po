# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-30 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../manual/physics/performances.rst:3
msgid "Simulation performance adjustments"
msgstr ""

#: ../manual/physics/performances.rst:6
msgid "OpenMP (Mac OSX)"
msgstr ""

#: ../manual/physics/performances.rst:8
msgid ""
"How to use the distributed applescript to optimize simulation performance on"
" OSX"
msgstr ""

#: ../manual/physics/performances.rst:12
msgid "Suboptimal baking performance"
msgstr ""

#: ../manual/physics/performances.rst:14
msgid ""
"Often you will encounter suboptimal baking performance with openMP (OMP) "
"multithreaded simulations, especially fluids."
msgstr ""

#: ../manual/physics/performances.rst:17
msgid ""
"This is due how the domain splitting distributes threads to cells which are "
"sometimes not \"filled\" whereas calculations, resulting in lot of threads "
"not giving any speedboost. This is almost dependent on the resolution the "
"simulation and object density."
msgstr ""

#: ../manual/physics/performances.rst:21
msgid ""
"If you have such an \"undersaturated\" simulation, it helps a lot to just "
"reduce the OMP threads to a low number instead of letting OMP just use all "
"available cores."
msgstr ""

#: ../manual/physics/performances.rst:26
msgid "Solution"
msgstr ""

#: ../manual/physics/performances.rst:28
msgid ""
"For OSX openMP-enabled Blender you can now use a delivered applescript to "
"tune the OMP-threads used. This makes usage of the terminal obsolete."
msgstr ""

#: ../manual/physics/performances.rst:31
msgid "The default is for now set to 4 cores."
msgstr ""

#: ../manual/physics/performances.rst:33
msgid ""
"If you leave the input field empty, the script gets the corecount of your "
"logical cpu-cores (including HyperTrading) This is the same what openMP "
"would pull without the environment variable set."
msgstr ""

#: ../manual/physics/performances.rst:39
msgid "Steps to use the applescript"
msgstr ""

#: ../manual/physics/performances.rst:41
msgid "In your Blenderfolder open the \"set_simulation_threads\" applescript"
msgstr ""

#: ../manual/physics/performances.rst:45
msgid ""
"Set the threadcount you want to use (leave empty to let OMP get all "
"available cores)"
msgstr ""

#: ../manual/physics/performances.rst:49
msgid ""
"Press o.k. to set the new value, a messagebox will show you the new setting "
"accepted."
msgstr ""

#: ../manual/physics/performances.rst:53
msgid "Close and reopen Blender to take over the setting."
msgstr ""

#: ../manual/physics/performances.rst:54
msgid ""
"Watch your baking progress or simulation framerates and perhaps repeat steps"
" 1- 4 to get the optimal value."
msgstr ""
