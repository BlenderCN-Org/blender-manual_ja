# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-30 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../manual/constraints/relationship/action.rst:6
msgid "Action Constraint"
msgstr ""

#: ../manual/constraints/relationship/action.rst:8
msgid ""
"The :guilabel:`Action` constraint is powerful. It allows you control an "
":doc:`Action </animation/editors/dopesheet/action>` using the "
"transformations of another object."
msgstr ""

#: ../manual/constraints/relationship/action.rst:10
msgid ""
"The underlying idea of the :guilabel:`Action` constraint is very similar to "
"the one behind the :doc:`Drivers </animation/editors/graph/drivers>`, except"
" that the former uses a whole action (i.e. a bunch a Fcurves of the same "
"type), while the latter controls a single Fcurve of their \"owner\"..."
msgstr ""

#: ../manual/constraints/relationship/action.rst:12
msgid ""
"Note that even if the constraint accepts the :guilabel:`Mesh` action type, "
"only the :guilabel:`Object`, :guilabel:`Pose` and :guilabel:`Constraint` "
"types are really working, as constraints can only affect objects' or bones' "
"transform properties, and not meshes' shapes... . Also note that only the "
"object transformation (location, rotation, scale) is affected by the action,"
" if the action contains keyframes for other properties they are ignored, as "
"constraints do not influence those."
msgstr ""

#: ../manual/constraints/relationship/action.rst:21
msgid ""
"As an example, let's assume you have defined an :guilabel:`Object` action "
"(it can be assigned to any object, or even no object at all), and have "
"mapped it on your owner through an :guilabel:`Action` constraint, so that "
"moving the target in the ``[0.0, 2.0]`` range along its X axis maps the "
"action content on the owner in the ``[0, 100]`` frame range. This will mean "
"that when the target's X property is **0.0**, the owner will be as if in "
"frame **0** of the linked action; with the target's X property at **1.0**, "
"the owner will be as if in frame **50** of the linked action, etc."
msgstr ""

#: ../manual/constraints/relationship/action.rst:33
msgid "Options"
msgstr ""

#: ../manual/constraints/relationship/action.rst:39
msgid "Action panel"
msgstr ""

#: ../manual/constraints/relationship/action.rst:43
msgid "Target"
msgstr ""

#: ../manual/constraints/relationship/action.rst:43
msgid ""
"This constraint uses one target, and is not functional (red state) when it "
"has none."
msgstr ""

#: ../manual/constraints/relationship/action.rst:46
msgid "Bone:"
msgstr ""

#: ../manual/constraints/relationship/action.rst:46
msgid ""
"When target is an armature object, use this field to select the target bone."
msgstr ""

#: ../manual/constraints/relationship/action.rst:49
msgid "Transform Channel"
msgstr ""

#: ../manual/constraints/relationship/action.rst:49
msgid ""
"This drop-down list controls which transform property (location, rotation or"
" scale along/around one of its axes) from the target to use as \"action "
"driver\"."
msgstr ""

#: ../manual/constraints/relationship/action.rst:52
msgid "Target Space"
msgstr ""

#: ../manual/constraints/relationship/action.rst:52
msgid ""
"This constraint allows you to choose in which space to evaluate its target's"
" transform properties."
msgstr ""

#: ../manual/constraints/relationship/action.rst:61
msgid "To Action"
msgstr ""

#: ../manual/constraints/relationship/action.rst:55
msgid "Select the name of the action you want to use."
msgstr ""

#: ../manual/constraints/relationship/action.rst:59
msgid ""
"Even though it might not be in red state (UI refresh problems...), this "
"constraint is obviously not functional when this field does not contain a "
"valid action."
msgstr ""

#: ../manual/constraints/relationship/action.rst:64
msgid "Object Action"
msgstr ""

#: ../manual/constraints/relationship/action.rst:64
msgid ""
"**Bones only**, when enabled, this option will make the constrained bone use"
" the \"object\" part of the linked action, instead of the \"same-named "
"pose\" part. This allows you to apply the action of an object to a bone."
msgstr ""

#: ../manual/constraints/relationship/action.rst:75
msgid "Target Range Min / Max"
msgstr ""

#: ../manual/constraints/relationship/action.rst:67
msgid ""
"The lower and upper bounds of the driving transform property value. By "
"default, both values are set to **0.0**"
msgstr ""

#: ../manual/constraints/relationship/action.rst:72
msgid "Unfortunately, here again we find the constraints limitations:"
msgstr ""

#: ../manual/constraints/relationship/action.rst:74
msgid ""
"When using a rotation property as \"driver\", these values are \"mapped "
"back\" to the ``[-180.0- , 180.0- [`` range."
msgstr ""

#: ../manual/constraints/relationship/action.rst:75
msgid ""
"When using a scale property as \"driver\", these values are limited to null "
"or positive values."
msgstr ""

#: ../manual/constraints/relationship/action.rst:83
msgid "Action Range Start / End"
msgstr ""

#: ../manual/constraints/relationship/action.rst:78
msgid "The starting and ending frames of the action to be mapped. Note that:"
msgstr ""

#: ../manual/constraints/relationship/action.rst:81
msgid "These values must be strictly positive."
msgstr ""

#: ../manual/constraints/relationship/action.rst:82
msgid ""
"By default, both values are set to **0**, which disables the mapping (i.e. "
"the owner just gets the properties defined at frame **0** of the linked "
"action...)."
msgstr ""

#: ../manual/constraints/relationship/action.rst:86
msgid "Notes"
msgstr ""

#: ../manual/constraints/relationship/action.rst:88
msgid ""
"When the linked action affects some location properties, the owner's "
"existing location is added to the result of evaluating this constraint "
"(exactly as when the :guilabel:`Offset` button of the :doc:`Copy Location "
"constraint </constraints/transform/copy_location>` is enabled...)."
msgstr ""

#: ../manual/constraints/relationship/action.rst:89
msgid ""
"When the linked action affects some scale properties, the owner's existing "
"scale is multiplied with the result of evaluating this constraint."
msgstr ""

#: ../manual/constraints/relationship/action.rst:90
msgid ""
"When the linked action affects some rotation properties, the owner's "
"existing rotation is overridden by the result of evaluating this constraint."
msgstr ""

#: ../manual/constraints/relationship/action.rst:91
msgid ""
"Unlike usual, you can have a :guilabel:`Start` value higher than the "
":guilabel:`End` one, or a :guilabel:`Min` one higher than a :guilabel:`Max` "
"one: this will reverse the mapping of the action (i.e. it will be \"played\""
" reversed...), unless you have both sets reversed, obviously!"
msgstr ""

#: ../manual/constraints/relationship/action.rst:92
msgid ""
"When using a :guilabel:`Constraint` action, it is the constraint *channel's "
"names* that are used to determine to which constraints of the owner apply "
"the action. E.g. if you have a constraint channel named \"trackto_empt1\", "
"its keyed :guilabel:`Influence` and/or :guilabel:`Head/Tail` values (the "
"only ones you can key) will be mapped to the ones of the owner's constraint "
"named \"trackto_empt1\"."
msgstr ""

#: ../manual/constraints/relationship/action.rst:93
msgid ""
"Similarly, when using a :guilabel:`Pose` action (which is obviously only "
"meaningful and working when constraining a bone!), it is the bone's name "
"that is used to determine which bone *channel's names* from the action to "
"use (e.g. if the constrained bone is named \"arm\", it will use and only use"
" the action's bone channel named \"arm\"...). Unfortunately, using a "
":guilabel:`Pose` action on a whole armature object (to affect all the keyed "
"bones in the action at once) won't work..."
msgstr ""

#: ../manual/constraints/relationship/action.rst:94
msgid ""
"Note also that you can use the :doc:`pose library feature "
"</rigging/posing/pose_library>` to create/edit a :guilabel:`Pose` action "
"datablock... just remember that in this situation, there's one pose per "
"frame!"
msgstr ""
