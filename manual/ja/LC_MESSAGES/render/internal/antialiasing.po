# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-30 21:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../manual/render/internal/antialiasing.rst:3
msgid "Anti-Aliasing"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:5
msgid ""
"A computer generated image is made up of pixels; each pixel can of course "
"only be a single color. In the rendering process the rendering engine must "
"therefore assign a single color to each pixel on the basis of what object is"
" shown in that pixel. This often leads to poor results, especially at sharp "
"boundaries, or where thin lines are present, and it is particularly evident "
"for oblique lines."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:11
msgid ""
"To overcome this problem, which is known as *Aliasing*, it is possible to "
"resort to an Anti-Aliasing technique. Basically, each pixel is "
"'oversampled', by rendering it as if it were 5 pixels or more, and assigning"
" an 'average' color to the rendered pixel."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:16
msgid ""
"The buttons to control Anti-Aliasing, or OverSampling (OSA), are below the "
"rendering button in the :guilabel:`Render` Panel (*Render Panel.*)."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:21
msgid "Options"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:24
msgid "Anti-Aliasing (check box)"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:24
msgid "Enables oversampling"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:28
msgid "5 / 8 / 11 / 16"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:27
msgid ""
"The number of samples to use. The values 5, 8, 11, 16 are preset numbers in "
"specific sample patterns; a higher value produces better edges, but slows "
"down the rendering."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:30
msgid ""
"By default, we use in Blender a fixed \"Distributed Jitter\" table. The "
"samples within a pixel are distributed and jittered in a way that guarantees"
" two characteristics:"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:33
msgid "Each sample has equal distances to its neighbor samples"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:34
msgid ""
"The samples cover all sub-pixel positions equally, both horizontally and "
"vertically"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:36
msgid ""
"The images below show Blender sample patterns for 5, 8, 11 and 16 samples. "
"To show that the distribution is equalized over multiple pixels, the "
"neighbor pixel patterns were drawn as well. Note that each pixel has an "
"identical pattern."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:44
msgid "5 samples"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:44
msgid "8 samples"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:44
msgid "11 samples"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:44
msgid "16 samples"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:51
msgid "Full Sample"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:49
msgid ""
"For every anti-aliasing sample, save the entire Render Layer results. This "
"solves anti-aliasing issues with compositing."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:54
msgid "Filtering"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:56
msgid ""
"When the samples have been rendered, we've got color and alpha information "
"available per sample. It then is important to define how much each sample "
"contributes to a pixel."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:60
msgid ""
"The simplest method is to average all samples and make that the pixel color."
" This is called using a \"Box Filter\". The disadvantage of this method is "
"that it doesn't take into account that some samples are very close to the "
"edge of a pixel, and therefore could influence the color of the neighbor "
"pixel(s) as well."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:65
msgid ""
"Filter menu: Set The filter type to use to 'average' the samples: | "
":guilabel:`Box` | The original filter used in Blender, relatively low "
"quality. For the Box Filter, you can see that only the samples within the "
"pixel itself are added to the pixel's color. For the other filters, the "
"formula ensures that a certain amount of the sample color gets distributed "
"over the other pixels as well."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:70
msgid ":guilabel:`Box`"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:70
msgid "A low-quality box-shaped curve (see above)"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:72
msgid ":guilabel:`Tent`"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:72
msgid "A simplistic filter that gives sharp results"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:74
msgid ":guilabel:`Quadratic`"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:74
msgid "A Quadratic curve"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:76
msgid ":guilabel:`Cubic`"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:76
msgid "A Cubic curve"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:78
msgid ":guilabel:`Gauss`"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:78
msgid "Gaussian distribution, the most blurry"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:80
msgid ":guilabel:`Catmull-Rom`"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:80
msgid "Catmull-Rom filter, gives the most sharpening"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:82
msgid ":guilabel:`Mitchell-Netravali`"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:82
msgid ""
"Mitchell-Netravali, a good all-around filter that gives reasonable sharpness"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:89
msgid "Box"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:89
msgid "Tent"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:89
msgid "Quadratic"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:89
msgid "Cubic"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:93
msgid "Gaussian"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:93
msgid "Catmull-Rom"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:93
msgid "Mitchell-Netravali"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:98
msgid "Filter Size"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:100
msgid ""
"Making the filter size value smaller will squeeze the samples more into the "
"center, and blur the image more. A larger filter size makes the result "
"sharper. Notice that the last two filters also have a negative part; this "
"will give an extra sharpening result."
msgstr ""

#: ../manual/render/internal/antialiasing.rst:107
msgid "Examples"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:118
msgid "AA 8, Box filter"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:125
msgid "AA 8, Tent filter"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:132
msgid "AA 8, Quadratic filter"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:139
msgid "AA 8, Cubic filter"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:146
msgid "AA 8, Gaussian filter"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:153
msgid "AA 8, Catmull-Rom filter"
msgstr ""

#: ../manual/render/internal/antialiasing.rst:160
msgid "AA 8, Mitchell-Netravali filter"
msgstr ""
