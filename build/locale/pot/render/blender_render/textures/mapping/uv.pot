# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:4
# 6cba631b17b24d79beb4bccf9968a13b
msgid "UV Mapping"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:6
# 2d32bb9d77e2429ab34d319e7f9d8d46
msgid "The most flexible way of mapping a 2D texture over a 3D object is a process called \"UV mapping\". In this process, you take your three-dimensional (X,Y & Z) mesh and unwrap it to a flat two-dimensional (X & Y ... or rather, as we shall soon see, \"U & V\") image. Colors in the image are thus mapped to your mesh, and show up as the color of the faces of the mesh. Use UV texturing to provide realism to your objects that procedural materials and textures cannot do, and better details than Vertex Painting can provide."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:16
# 0753873513db433eabb7b59b123192a4
msgid "UVs Explained"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:21
# 3e0972ce21b643629a61ec1d353a70ad
msgid "Box being inspected"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:27
# 3689a47dc8e24b62945062cee0b35d6b
msgid "Box mapped flat"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:30
# d72faf23f6c643918a2da58eddfe7c9e
msgid "The best analogy to understanding UV mapping is cutting up a cardboard box. The box is a three-dimensional (3D) object, just like the mesh cube you add to your scene."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:33
# 6f7e06113f2244e6a72d965076275d3e
msgid "If you were to take a pair of scissors and cut a seam or fold of the box, you would be able to lay it flat on a tabletop. As you are looking down at the box on the table, we could say that U is the left-right direction, is V is the up-down direction. This image is thus in two dimensions (2D). We use **U** and **V** to refer to these \"texture-space coordinates\" instead of the normal **X** and **Y**, which are always used (along with **Z**) to refer to \"3D space.\""
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:41
# 223ce93ab58e486ab1f3f0b91d055291
msgid "When the box is reassembled, a certain UV location on the paper is transferred to an (X,Y,Z) location on the box. This is what the computer does with a 2D image in wrapping it around a 3D object."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:45
# 93d0c55f0da447ecb23eff6273790fa8
msgid "During the UV unwrapping process, you tell Blender exactly how to map the faces of your object (in this case, a box) to a flat image in the UV/Image Editor window. You have complete freedom in how to do this. (Continuing our previous example, imagine that, having initially laid the box flat on the tabletop, you now cut it into smaller pieces, somehow stretch and/or shrink those pieces, and then arrange them in some way upon a photograph that's also lying on that tabletop ...)"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:54
# 0a34ba061fca48f491ef44e114caaa35
msgid "Cartography Example"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:56
# c3be37c09e9a474eba4c0dd77860b129
msgid "Cartographers (map makers) have been dealing with this problem for millennia. A cartography (map-making) example is creating a projection map of the whole world. In cartography, we take the surface of the earth (a sphere) and make a flat map that can be folded up into the glove compartment aboard the space shuttle. We 'fill in' spaces toward the poles, or change the outline of the map in any of several ways:"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:67
# 43476cd0240b4c3d9a6b294d987140ed
msgid "Mercator Projection"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:72
# 56d729a648364281bd4f8902ab34dfb6
msgid "Mollweide Projection"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:77
# d3f7bb2fcedb462a96136a80fd61db31
msgid "Albers-equal Projection"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:80
# 122ad13fb7ec4e31b4ab643c94d7c0de
msgid "Each of these is an example of a way to UV map a sphere. Each of the hundred or so commonly accepted projections has its advantages and disadvantages. Blender allows us to do the same thing any way we want to, on the computer."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:84
# a5ff1708b81b460181ad6cf670a8c9a3
msgid "On more complex models (like seen in the earth map above) there pops up an issue where the faces can't be 'cut', but instead they are stretched in order to make them flat. This helps making easier UV maps, but sometimes adds distortion to the final mapped texture. (Countries and states that are closer to the North or the South Pole look smaller on a flat map than do ones which are close to the Equator.)"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:93
# 5d7861901d3340e9983fe6781b09433d
msgid "Half-Sphere Example"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:98
# e138e316bd0a49be94c7f8459ea3f7c6
msgid "3D Space (XYZ) versus UV Space (click to enlarge)"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:101
# eaa0823968584827a546a269c4e97849
msgid "In this image you can easily see that the shape and size of the marked face in 3D space is different in UV space."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:104
# e881c617e3a4467dbd445cd1970c77e9
msgid "This difference is caused by the 'stretching' (technically called mapping) of the 3D part (XYZ) onto a 2D plane (i.e the UV map)."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:107
# ace0b632bd50488db53dd87d2461dd46
msgid "If a 3D object has a UV map, then, in addition to the 3D-coordinates X, Y, and Z, each point on the object will have corresponding U and V coordinates. (*P* in the image above is an example of how a point on a 3D object might be mapped onto a 2D image.)"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:113
# 78e89a81675f4f5b872ce252512b4fbc
msgid "The UV Editor"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:115
# 904c2c67b2584154aaa4c0b6c5d23b13
msgid "About fuctionalities for mapping UV see :doc:`UV/Image Editor </render/blender_render/textures/mapping/uv_image_editor>` section for details."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:120
# e45bd7aa9a9b4cc99a98218fee428a0a
msgid "Advantages of UVs"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:122
# 482a19cf160648b3ae01ea7686119114
msgid "While procedural textures (described in the previous chapters) are useful-they never repeat themselves and always \"fit\" 3D objects-they are not sufficient for more complex or natural objects. For instance, the skin on a human head will never look quite right when procedurally generated. Wrinkles on a human head, or scratches on a car do not occur in random places, but depend on the shape of the model and its usage. Manually-painted images, or images captured from the real world gives more control and realism. For details such as book covers, tapestry, rugs, stains, and detailed props, artists are able to control every pixel on the surface using a UV Texture."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:133
# 49f98227dbc3469eb80838f0e0c9c882
msgid "A UV map describes what part of the texture should be attached to each polygon in the model. Each polygon's vertex gets assigned to 2D coordinates that define which part of the image gets mapped. These 2D coordinates are called UVs (compare this to the XYZ coordinates in 3D). The operation of generating these UV maps is also called \"unwrap\", since it is as if the mesh were unfolded onto a 2D plane."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:141
# ecc964295c5d4e308c75d9bc12bec70b
msgid "For most simple 3D models, Blender has an automatic set of unwrapping algorithms that you can easily apply. For more complex 3D models, regular Cubic, Cylindrical or Spherical mapping, is usually not sufficient. For even and accurate projection, use seams to guide the UV mapping. This can be used to apply textures to arbitrary and complex shapes, like human heads or animals. Often these textures are painted images, created in applications like the Gimp, Photoshop, or your favorite painting application."
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:151
# 57ff48c9777f4d9c9718d7a892e89db2
msgid "Games"
msgstr ""

#: ../../../manual/render/blender_render/textures/mapping/uv.rst:153
# d0f20586645e4390a5b08a1ee22a4470
msgid "UV mapping is also essential in the Blender game engine, or any other game. It is the de facto standard for applying textures to models; almost any model you find in a game is UV mapped."
msgstr ""

