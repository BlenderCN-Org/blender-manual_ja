# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/render/performance/introduction.rst:9
# 982b34fe2bf14de1bcaa27c6e1e382c9
msgid "Introduction"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:12
# 611691b43c7d41ebb807172df3a91561
msgid "Optimizing Render Performance"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:14
# 88d3e70fdeab421f9356314766ddd1b5
msgid "\"A watched pot never boils\" is the old saying, but you may wonder why your render takes so long to create, or worse, crashes mid-way through! Well, there is lots going on and lots you can do to speed up rendering or enable a complicated render to complete. Also, it is possible to render a very complicated scene on a mediocre PC by being \"render-smart\". Here's a \"top ten\" list of things to do or not do in order to speed up rendering or even avoid crashes during scene render. Some options may decrease the quality of your render, but for draft renders you may not care."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:22
# 248f9cb780234c2db25c6146a7f65d1c
msgid "If you get the message \"Malloc returns nil\", in plain English that means the memory allocator tried to get more physical memory for Blender but came back empty-handed. This means that you do not have enough memory available to render the scene, and Blender cannot continue. You will need to do one or more of the following tasks on this page in order to render."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:29
# f18252ad23a94a238a098ab030f573a9
msgid "Hardware Improvements"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:31
# 88e825e9f60b429fbe444f9918ed6f17
msgid "Install more system memory."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:32
# e9050f01ab6240579a26cb259ee96262
msgid "Upgrade your CPU to a multi-core/multiprocessor"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:33
# 6e212f4a54e345bf9a6ea7ccadeeee35
msgid "Upgrade your OpenGL video drivers"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:34
# 9cd26d4839b54611964410d5b59d1f0c
msgid "Get faster memory, up to your PC's motherboard limit."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:35
# c51af280fdb049719c268a47390c2328
msgid "Use or set up a render farm using all available PCs in your house, or use a render farm."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:39
# 508ccc3654e0422c8195b6004af643c3
msgid "Operating System Configuration"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:41
# ab01a4e0b52f4a7a85b41c633d58b763
msgid "Increase Blender's processing priority through your OS."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:42
# dcae766f53914836a761dd8e42ddb50f
msgid "Increase your swap file space used by the OS for memory swapping. Also called virtual memory pagefile size, up to the size of your physical memory."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:44
# eda0000eeb364752bece35cee4f7eab0
msgid "Use a system-monitor to check if any other processes are using significant CPU or RAM, which can be closed."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:45
# 40e65740bb44409c9506e090949df3f0
msgid "Render in *background mode* (from the command line), saves extra memory."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:49
# 66b6794051d64606a39669b8302a7201
msgid "Blender Settings"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:51
# b4a983f1ac394ca8930bfa7e3bdcaa5f
msgid "Increase the MEM Cache Limit in the User Preferences System & OpenGL tab."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:52
# bfefa98a2ed64c37a20ec317b15bc2c2
msgid "Switch to an Orthographic camera, and render your own \"parts\" of the scene as separate images, and then paste those parts together in GIMP. An old trick in making your own panorama with a real camera is to take three or so pictures of a very wide (beach sunset) scene, where you take one picture, rotate to the right, snap another, then another, and when you get the pictures developed, you overlap them to make a very wide landscape image. Do the same in Blender: render out one shot to a file, then move the camera to look at a different area of the scene, and render that shot. Each shot will be of a smaller area and thus take in fewer polygons/faces. Be sure that when you position your camera that you snap overlapping shots, so that you can then match them up. If you don't want to use GIMP, you can use compositing nodes and the Translate node to match them up in Blender."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:62
# c2801c10574c4a66a2ac10e4f6ac9ef2
msgid "Minimize the render window (and Blender if rendering to an internal window). ATI users report dramatic speedup on a per frame basis, which adds up over the frame range."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:64
# f9ed751b151a468780da429d4b85d786
msgid "Use the Big Render script to render sub-sections of the overall image, and then paste them together."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:68
# 0686b7900f1b471b99f2acbcbd43ddc9
msgid "Scene and Specific Objects"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:70
# 0ed1f7bba53749128d5538e4a914f226
msgid "Remove lamps, or move them to unrendered layers, or tie them to layers."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:71
# 1352d1d9a4024f8bb04316b2f71dc54b
msgid "Turn off some lamp's shadows, using only one or two main sun lamps to cast shadows. A few \"shadows only\" lights will render faster than every light having shadows on."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:73
# bc9b90f4780248f598b0d5eb708deeba
msgid "Use Buffer Shadows rather than ray-traced Shadows"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:74
# 3faa707488cc4e2fb5f6d61a15e70e23
msgid "Bake your shadows using Render Baking Full Render bake on surfaces that do not move. Use that texture for that mesh, then disable shadows for that material."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:76
# bfb9caba93534446ae23790a117b4f1c
msgid "Simplify meshes (remove polygons). The more vertices you have in camera, the more time it takes to render."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:77
# fb258ab29679419d849aecefd6cbd9d5
msgid "Remove Doubles, or use the Decimator mesh edit feature."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:78
# 61e4f2ccca70498caff65c06830510a4
msgid "Remove Subsurf and Multires modifiers."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:79
# 400056da50874a57aba345829ccadc9c
msgid "Delete backsides of meshes (removing unseen geometry)."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:80
# 192f1db3d74c4d149f2f1e52e9ecf826
msgid "Render just a few objects at a time; in the beginning of your project, render the background objects and sets that will not change and will always be in the background."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:82
# ff0619dfb5514fb58b0c31581630c99c
msgid "Put the buildings on another layer, and through render layers, don't render them. Then composite them back in later."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:84
# 5911058b122c427fbcd16f8b4a7e6961
msgid "Make the camera static so that you can better accomplish the above two ideas."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:85
# f0f4a549868d45b6bf7bfcc66bfdd27c
msgid "Avoid use of Area lights."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:86
# 922d83b3136e44a0bfc1bc828d7db4e2
msgid "Make materials Shadeless."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:87
# d57c919541d04fb2b08410864cc01b0d
msgid "Render Bake AO and textures, and then make those materials Shadeless."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:88
# 6c932e47353b4b709eb0371d99cbc6d5
msgid "Decrease the Clip distance for spot lights."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:89
# ed8f03293c904329aa8be218fbaad8fe
msgid "Decrease the Clip distance for the camera."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:90
# d455d4360f53466f9cce3d693c6ae96a
msgid "Turn off world AO."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:91
# 3d8405d83873496e8786f86b424dedac
msgid "Turn off Material SSS."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:92
# 039e2b3bc12c4125a8614714b4a0166c
msgid "Use smaller image textures. A 256x256 image takes only 1% of the memory that a 2k image does, often with no loss of quality in the ultimate render."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:94
# 993dd6c28d8c4529a99edba962de71f1
msgid "Reduce Subsurf. Each level quadruples (4x) the number of faces from the previous level."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:95
# 0453c3e1ce4445f68d0371aeab8b17e6
msgid "Reduce Multires."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:96
# 60ce00b256c4466bb9afa3c237fb6b07
msgid "Make a matte render of background objects, like buildings, and put the image of them on a billboard in the scene instead of the object themselves. This will reduce vertex/face count."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:99
# 8183f5e47e9744cb991294aa4143f21f
msgid "if you have lots of linked instances of an object, use DupliFaces, as these are instanced. If you have 100 of them, Blender will only store the geometry for 1 (Instances themselves take a small amount of memory)."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:104
# 736ff7a89bd644028915ae76650a6873
msgid "Render Settings"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:106
# b111a754c50b48adb57aac67d054010e
msgid ":doc:`Output Panel </render/output>` - Disable *Edge* rendering. - *Save Buffers*."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:110
# f276f8a2dfcc4eb8826263813cecc00a
msgid "Render to an :doc:`Image Editor </ce/windows/uv-image>` window, not a popup. :doc:`Render Window </render/display>`."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:112
# 288ee93ed74a4b7fbc3b1263465aeb5d
msgid "Use multiple *Threads* on a multi-core CPU (with multiple *Parts*)."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:113
# 40f053146cf844db912414da1b8f759b
msgid ":doc:`Render Layers Panel </render/post_process/layers>` - Render only the Layers of interest. - Render with all lights set to one simple spot (enter its name in the *Light:* field). - Render with one material override (enter its name in the Mat: field)."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:118
# 8f8d1d668fc84b9a98ac49f3231f7714
msgid "Disable unnecessary Render Passes, such as *Z*, or only render the pass of interest, such as *Diffuse*."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:120
# c506f0fbfd024e4ab5a82ef19ba0ec6e
msgid ":doc:`Render Panel </render/options>` - Turn off *Shadows*. - Turn off *Environment Mapping*. - Turn off *Panoramic Rendering*. - Turn off *Raytracing*. - Turn off SSS Subsurface Scattering. - Turn off or lower oversampling/aliasing *OSA*. - Turn off or lower *Motion Blur*."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:129
# f37b5706a96640d5901f6665fae9a65d
msgid "Render in Parts. This will also allow you to render HUGE images on a weak PC. On a multi-core PC, it will assign a thread to each part as well."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:131
# 137572c9ffbe485490693bd858435d8b
msgid "Increase the octree resolution."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:132
# d48fe4c408e04eae9f644c5b2d0d6a6e
msgid "Render at a percentage size of your final resolution (like 25%)."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:133
# 9b759e95d9074dc8871d4b83bfff6f03
msgid "Turn off *Fields* rendering."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:134
# cc6ff49052d4438e888d6d1cd3de9052
msgid "Use *Border* rendering to render a subset of the full image."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:135
# fc91eda0e5e94040a437ff5f579d5cb0
msgid ":doc:`Anim Panel </render/workflows/animations>`"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:137
# 73e4c785b415426e9822354ad0a8c422
msgid "Decrease the frame count of the animation (and use a lower framerate for the same duration of animation). For example, render 30 frames at 10 frames per second for a 3-second animation, instead of 75 frames at 25 frames per second."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:140
# 67e7c791e1c748bd8eb03c08f5741543
msgid ":doc:`Bake Panel </render/workflows/bake>`"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:142
# 3236c1e1d8a24ef0998eebe1b560e9af
msgid "Bake Full Render - create a UV Texture that colors the objects based on materials, and then use that UV Texture shadeless instead of the material."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:144
# 9ce5a3c7f33142d6875fe62668bc088b
msgid "Bake Ambient Occlusion only."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:145
# 72bdffb25d794ca98c4bb2936045c43d
msgid "Bake textures for objects."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:146
# 842a54f5130e478a934d5752d76f0485
msgid "Baking Normals or Displacement does not speed up render time, and are used for other things."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:147
# 5a363754227f43908d5040722504b8ae
msgid ":doc:`Format Panel </render/output>` - Render at a lower resolution. Smaller pictures take less time to render. - Choose a faster CODEC or CODEC settings. - Render in black and white (*BW* button). - If using FFMPEG, do not activate *Multiplex audio*. - If using FFMPEG, *Autosplit Output* (*Video* panel button)."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:154
# d453bc74ade4454b8e94589157bb38bd
msgid "Render only RGB if you just need color; the A channel (*RGBA* button) takes more memory and is unused when saving a movie file."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:159
# 9c110939285b48cf98b85234200c58c0
msgid "Multi-Pass Compositing"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:161
# fda5e5a5a53a4f0d818f99cc0fd0a175
msgid "Another strategy that can be used to address the problem of long (re-)render times is to structure your workflow from the ground up so that you make aggressive use of *compositing*, as described in the \"Post-Production\" section. In this approach, you break down each shot into components that can be rendered separately, then you combine those separately-rendered elements to achieve the finished clip. For instance:"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:168
# 415b49f062fb4512b881459a2724ef99
msgid "If the camera isn't moving, then neither is the background: only a single frame is needed. (The same is true of any non-moving object within the frame.) These individual elements, having been generated *once,* can be re-used as many times as necessary over as many frames as necessary."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:171
# 6d80b7cc73e24cce9c4ca73624b4245b
msgid "Both shadows and highlights can be captured separately from the objects that are being illuminated or shadowed, such that the intensity, color, and depth of the effect can be adjusted later without re-rendering."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:173
# 67839aaac0a3446c8495b9c46a5f4ff4
msgid "Start by using lights that do not cast shadows. (Shadow calculations are big time-killers.) Then, use \"shadow-only\" lights (which cast shadows, but do not cast light) to create shadows *only* where you judge that they are actually necessary. (It is very often the case that only a few of the shadows which could exist in the scene actually matter, and that the rest of them simply won't be noticed.)"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:178
# 4c545dd9290f4db39165640b758b90a0
msgid "Tricky lighting situations can be avoided by handling the objects separately, then combining the individually-rendered clips and \"tweaking\" the result."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:181
# 3ab5570957d5487dae5ea8f54b173131
msgid "This is a very familiar idea. Modern sound recordings, for example, always use a \"multi-track\" approach. Individual components of the song are captured separately and in isolation, then the components are \"mixed\" together. The \"final mix\" then goes through additional processing stages, called *mastering*, to produce the finished product(s). (In fact, the features and design of modern sound-processing software are directly comparable to that of Blender's node-based compositor.)"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:189
# 80cf8395ed0a4ee4bde205c3df3609e8
msgid "There are compelling advantages to this approach:"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:191
# a46af5a4c57d4a228cf45e5b5f808c32
msgid "You have options. If something is \"not quite right,\" you don't necessarily have to start over from scratch."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:192
# f6fa3aa6ab30496d9f66bbc6a0172532
msgid "In practice, the deadline-killer is *re-* rendering, which ordinarily must be done (in its entirety) just because \"'one little thing' about the shot is wrong.\" Compositing helps to avoid this, because (ideally...) only the specific parts that are found to be in error must be repeated. (Or, maybe, the error can be blocked out with a \"garbage matte\" and a corrected version can be inserted in its place. No one will ever know!)"
msgstr ""

#: ../../../manual/render/performance/introduction.rst:197
# 57b1ae3a58aa432684af52bddda80d38
msgid "It's also possible that you find yourself saying, \"okay, that's *almost* what I wanted, but now I'd like to *add* this and maybe *take away* that.\" A compositing-based approach enables you to do just that, and furthermore, to do so *non-destructively.* In other words, having generated the \"addition\" (or the \"mask\") as a separate channel of information, you can now fine-tune its influence in the overall \"mix, \" or even change your mind and remove it altogether, all without permanently altering anything."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:202
# 66f196c934874b41aefcabfe42e9da35
msgid "By and large, these stages work *two-* dimensionally, manipulating what is by that time \"a raster bitmap with R, G, B, Alpha *(transparency...)* and Z-Depth information,\" so they're consistently fast."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:204
# c059da59d58149758098e0e43236c099
msgid "Since each discrete rendering task has been simplified, the computer can carry them out using much fewer resources."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:205
# 472e44d13e024f219866f993c2010e7b
msgid "The tasks can be distributed among several different computers ... even less-powerful ones (like the two older machines that are sitting in your closet right now because you can't get rid of them)."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:207
# 2cdebeaefd4f4f3e8dbc732f5c731deb
msgid "\"After all, the scene doesn't actually have to be *physically perfect,* to be *convincing.* \" A compositing-based approach lets you take full advantage of this. You can focus your attention (and Blender's) upon those specific aspects of the scene which will actually make a noticeable difference. It is possible to save a considerable amount of time by consciously choosing to exclude less-important aspects which (although \"technically correct\") probably won't be noticed."
msgstr ""

#: ../../../manual/render/performance/introduction.rst:215
# 844d106a86084f75ab69bd7c5ce7fd65
msgid "Of course, this approach is not without its own set of trade-offs. You must devise a workable asset-management system for keeping track of exactly what material you have, where it is, whether it is up-to-date, and exactly how to re-create it. You must understand and use the \"library linking\" features of Blender to allow you to refer to objects, nodes, materials, textures and scenes in a carefully-organized collection of other files. You need to have a very clear notion, *in advance*, of exactly what the finished shot must consist of and what the task breakdown must be. You must be a scrupulous note-taker and record-keeper. But sometimes this is the best way, if not the *only* way, to accomplish a substantial production."
msgstr ""

