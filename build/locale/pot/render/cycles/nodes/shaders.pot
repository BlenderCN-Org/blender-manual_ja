# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/render/cycles/nodes/shaders.rst:5
# 9e5ab588daf24413a254160fc9189901
msgid "Shader Nodes"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:10
# ac34c412cb7946a2b7400944f6a347ab
msgid "Diffuse"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:12
# 3149278d6e67476c92adcb388faafa7b
msgid "Lambertian and Oren-Nayar diffuse reflection."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:15
#: ../../../manual/render/cycles/nodes/shaders.rst:46
#: ../../../manual/render/cycles/nodes/shaders.rst:75
#: ../../../manual/render/cycles/nodes/shaders.rst:108
#: ../../../manual/render/cycles/nodes/shaders.rst:147
#: ../../../manual/render/cycles/nodes/shaders.rst:176
#: ../../../manual/render/cycles/nodes/shaders.rst:214
#: ../../../manual/render/cycles/nodes/shaders.rst:251
#: ../../../manual/render/cycles/nodes/shaders.rst:275
#: ../../../manual/render/cycles/nodes/shaders.rst:319
#: ../../../manual/render/cycles/nodes/shaders.rst:353
#: ../../../manual/render/cycles/nodes/shaders.rst:396
#: ../../../manual/render/cycles/nodes/shaders.rst:431
# f9a59d7e663f42fab34933c22d2f796a
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
# ecf7b494d1cd478588cb2933adc9a78c
msgid "Color input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:15
# 8e8cd85ba345455dbd28dc9e88d8cd8b
msgid "Color of the surface, or physically speaking, the probability that light is reflected or transmitted for each wavelength."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:17
#: ../../../manual/render/cycles/nodes/shaders.rst:77
#: ../../../manual/render/cycles/nodes/shaders.rst:110
#: ../../../manual/render/cycles/nodes/shaders.rst:216
#: ../../../manual/render/cycles/nodes/shaders.rst:253
# 7ca70896f097475a8869bd1e0f745731
# 7dee8494e4a944efaf5c188be0e79544
# 7dee8494e4a944efaf5c188be0e79544
# 7dee8494e4a944efaf5c188be0e79544
# 7dee8494e4a944efaf5c188be0e79544
msgid "Roughness input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:18
# 41622c7fd8564f37bdd2f6db8d6d97f1
msgid "Surface roughness; 0.0 gives standard Lambertian reflection, higher values activate the Oren-Nayar BSDF."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:19
#: ../../../manual/render/cycles/nodes/shaders.rst:48
#: ../../../manual/render/cycles/nodes/shaders.rst:79
#: ../../../manual/render/cycles/nodes/shaders.rst:121
#: ../../../manual/render/cycles/nodes/shaders.rst:153
#: ../../../manual/render/cycles/nodes/shaders.rst:221
#: ../../../manual/render/cycles/nodes/shaders.rst:255
#: ../../../manual/render/cycles/nodes/shaders.rst:280
#: ../../../manual/render/cycles/nodes/shaders.rst:325
# 481f5ad795e8438b96cd4a6d2dae5a7d
# b1791753312a4cbe88fdf1d4a192d399
# b1791753312a4cbe88fdf1d4a192d399
# b1791753312a4cbe88fdf1d4a192d399
# b1791753312a4cbe88fdf1d4a192d399
# b1791753312a4cbe88fdf1d4a192d399
# b1791753312a4cbe88fdf1d4a192d399
# b1791753312a4cbe88fdf1d4a192d399
# b1791753312a4cbe88fdf1d4a192d399
msgid "Normal input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:20
#: ../../../manual/render/cycles/nodes/shaders.rst:49
#: ../../../manual/render/cycles/nodes/shaders.rst:80
#: ../../../manual/render/cycles/nodes/shaders.rst:122
#: ../../../manual/render/cycles/nodes/shaders.rst:154
#: ../../../manual/render/cycles/nodes/shaders.rst:222
#: ../../../manual/render/cycles/nodes/shaders.rst:256
#: ../../../manual/render/cycles/nodes/shaders.rst:281
#: ../../../manual/render/cycles/nodes/shaders.rst:326
# 72623181826a40bb86b4498c3827d802
# 44493298e0af4f60932d3756e31e60a0
# 44493298e0af4f60932d3756e31e60a0
# 44493298e0af4f60932d3756e31e60a0
# 44493298e0af4f60932d3756e31e60a0
# 44493298e0af4f60932d3756e31e60a0
# 44493298e0af4f60932d3756e31e60a0
# 44493298e0af4f60932d3756e31e60a0
# 44493298e0af4f60932d3756e31e60a0
msgid "Normal used for shading; if nothing is connected the default shading normal is used."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:23
#: ../../../manual/render/cycles/nodes/shaders.rst:52
#: ../../../manual/render/cycles/nodes/shaders.rst:82
#: ../../../manual/render/cycles/nodes/shaders.rst:126
#: ../../../manual/render/cycles/nodes/shaders.rst:157
#: ../../../manual/render/cycles/nodes/shaders.rst:180
#: ../../../manual/render/cycles/nodes/shaders.rst:224
#: ../../../manual/render/cycles/nodes/shaders.rst:259
#: ../../../manual/render/cycles/nodes/shaders.rst:284
# 2f54f90181f64c5b9de0e5b62922decb
# 24d94e53713849fdbcb3883a1a69931d
# 24d94e53713849fdbcb3883a1a69931d
# 24d94e53713849fdbcb3883a1a69931d
# 24d94e53713849fdbcb3883a1a69931d
# 24d94e53713849fdbcb3883a1a69931d
# 24d94e53713849fdbcb3883a1a69931d
# 24d94e53713849fdbcb3883a1a69931d
# 24d94e53713849fdbcb3883a1a69931d
msgid "BSDF output"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:22
# 76787fd56eb04b2b84a48181a6fc3cf5
msgid "Diffuse :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:29
# 832651c4350d4d0c9f71475ef87afa67
msgid "Diffuse behavior"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:42
# a48544b8956f4d67bc95cc16834f1992
msgid "Translucent"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:44
# ab0fd85884db4230bc6ccf5b783d09c2
msgid "Lambertian diffuse transmission."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:47
#: ../../../manual/render/cycles/nodes/shaders.rst:215
# c3787dad5afb471c8e79219154116376
# c3787dad5afb471c8e79219154116376
msgid "Color of the surface, or physically speaking, the probability that light is transmitted for each wavelength."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:51
# dcf307d1cb194428af8c0f27c9b12bc9
msgid "Translucent :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:61
# a2fc6e1b350c46f889532d0ba6a1fd88
msgid "Translucent Shader"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:67
# 82df8ba9fc8c4f5391b789ca272cff8f
msgid "Glossy"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:69
# c3aceed765094210aed64bafdd1294e9
msgid "Glossy reflection with microfacet distribution, used for materials such as metal or mirrors."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:73
#: ../../../manual/render/cycles/nodes/shaders.rst:106
#: ../../../manual/render/cycles/nodes/shaders.rst:212
#: ../../../manual/render/cycles/nodes/shaders.rst:249
# 2f57c55c68144b308dc2039ada388e02
# 2f57c55c68144b308dc2039ada388e02
# 2f57c55c68144b308dc2039ada388e02
# 2f57c55c68144b308dc2039ada388e02
msgid "Distribution"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:72
#: ../../../manual/render/cycles/nodes/shaders.rst:105
# bef402b975f4471d966914db3f0f3a3e
# bef402b975f4471d966914db3f0f3a3e
msgid "Microfacet distribution to use. *Sharp* results in perfectly sharp reflections like a mirror, while *Beckmann*, *GGX* and *Ashikhmin-Shirley* can use the *Roughness* input for blurry reflections."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:76
#: ../../../manual/render/cycles/nodes/shaders.rst:109
#: ../../../manual/render/cycles/nodes/shaders.rst:148
#: ../../../manual/render/cycles/nodes/shaders.rst:276
#: ../../../manual/render/cycles/nodes/shaders.rst:320
# bd569dcb42aa47449b027dc0c730a169
# bd569dcb42aa47449b027dc0c730a169
# bd569dcb42aa47449b027dc0c730a169
# bd569dcb42aa47449b027dc0c730a169
# bd569dcb42aa47449b027dc0c730a169
msgid "Color of the surface, or physically speaking, the probability that light is reflected for each wavelength."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:78
# 5d56d3ce6c0e4f47be6bc614bad7d91c
msgid "Influences sharpness of the reflection; perfectly sharp at 0.0 and smoother with higher values."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:82
#: ../../../manual/render/cycles/nodes/shaders.rst:258
# 542f6bd983c34b56b56728e368e7883a
# 542f6bd983c34b56b56728e368e7883a
msgid "Glossy :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:87
# eca8bb7530134536ab15c250e6b7c025
msgid "Sharp Glossy"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:88
# a5f0e03537ee47bca6f4f5a3e3995749
msgid "Rough Glossy"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:98
# 334aad1b532243cf8ae177f5abbb7086
msgid "Anisotropic"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:100
# 233d1526b51f47a5808d7264f3f3752a
msgid "Anisotropic glossy reflection, with separate control over U and V direction roughness. The tangents used for shading are derived from the active UV map. If no UV map is available, they are automatically generated using a sphere mapping based on the mesh bounding box."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:111
# 0214d6ace484475389caf43453e09364
msgid "Sharpness of the reflection; perfectly sharp at 0.0 and smoother with higher values."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:114
# 18cc4b80a19340cdb838c9c33cbbf153
msgid "Anisotropy input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:113
# 30977082209d4540ad886dde8b111f66
msgid "Amount of anisotropy in the reflection; 0.0 gives a round highlight. Higher values give elongated highlights orthogonal to the tangent direction; negative values give highlights shaped along the tangent direction."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:119
# 3d377661bef849978d511aabf3c4927b
msgid "Rotation input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:117
# dd31298664784407853b3e11f6fc0898
msgid "Rotation of the anisotropic tangent direction. Value 0.0 equals 0- rotation, 0.25 equals 90- and 1.0 equals 360- = 0- . This can be used to texture the tangent direction."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:123
# 3c37a27871144017bb434cd2dce235ef
msgid "Tangent input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:124
# 343807db2e674cb2adf147b06391fe57
msgid "Tangent used for shading; if nothing is connected the default shading tangent is used."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:126
# 58a5a4ff283d444aab2971f19bfa5a71
msgid "Anisotropic glossy :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:132
# 8f6ef4428b5241fea5a136483a8608b0
msgid "Anisotropic rotation on 0"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:136
# abe6447af3a7403ab5e66e579b53df50
msgid "Anisotropic rotation on 0.25 (90- )"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:142
# 1a6d6024c2da4073bfd74ae04fe0d570
msgid "Toon"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:144
# b7715b8051824c88bf0b92c851f21926
msgid "Diffuse and Glossy Toon :abbr:`BSDF (Bidirectional scattering distribution function)` for creating cartoon light effects."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:149
# 0994a0bdd902428d8a2a9baeb2d1d709
msgid "Size input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:150
# 6bb51f17874d48e292bb74bdf58238b6
msgid "Parameter between 0.0 and 1.0 that gives a angle of reflection between 0- and 90- ."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:151
# 2b1278f97dd9448080b931b85e4d0789
msgid "Smooth input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:152
# 57b7a956d6804893832cb15927027903
msgid "This value specifies an angle over which a smooth transition from full to no reflection happens."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:156
# a65e9526a55a4494aedc8046e456b33b
msgid "Toon :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:161
# 54a27644534d4207a3f4ad158a54ed34
msgid "Toon Shader"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:167
# 0380bd9c4ec54655ab822ca78552d379
msgid "Transparent"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:169
# 6f71753bf20a4cf7aa67c2de0a15d7e9
msgid "Transparent :abbr:`BSDF (Bidirectional scattering distribution function)` without refraction, passing straight through the surface, as if there were no geometry there. Useful with alpha maps, for example. This shader :ref:`affects light paths somewhat differently <render-cycles-light_paths-transparency>` than other :abbr:`BSDF (Bidirectional scattering distribution function)` s. Note that only pure white transparent shaders are completely transparent."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:176
# d0fc0b2f2f7e4e41ac2fb6e3151e4362
msgid "Color of the surface, or physically speaking, the probability for each wavelength that light is blocked or passes straight through the surface."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:179
# d2c250c04dcc46e6b21ace413c431a1d
msgid "Transparent :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:187
# a76017b4b3954db2948f8eb1e1d9c5e0
msgid "Transparent behaviour"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:193
# e6fc6edbd9644ad89541d2af2d2e4bce
msgid "Transparent Shader (pure white)"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:197
# 23bf309c9fbf426c9de7ac373dc8c31e
msgid "Transparent Shader (gray)"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:203
# 8dca369a26b44745bd64e08e3dc26447
msgid "Glass"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:205
# 383d32e828dd49d494ba2a7269c0a319
msgid "Glass-like shader mixing refraction and reflection at grazing angles. Like the transparent shader, only pure white will make it transparent. The glass shader tends to cause noise due to caustics. Since the Cycles path tracing integrator is not very good at rendering caustics, it helps to combine this with a transparent shader for shadows; for :ref:`more details see here <render-cycles-reducing_noise-glass_and_transp_shadows>`"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:212
# a619ac56a2564025a5a7b5c73d3df14e
msgid "Microfacet distribution to use. *Sharp* results in perfectly sharp refractions like clear glass, while *Beckmann* and *GGX* can use the *Roughness* input for rough glass."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:217
#: ../../../manual/render/cycles/nodes/shaders.rst:254
# aa177e69787e4779b90f5c0d7da69d10
# aa177e69787e4779b90f5c0d7da69d10
msgid "Influences sharpness of the refraction; perfectly sharp at 0.0 and smoother with higher values."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:219
# 345c7be014b2450fb0c70dc4ae6b42f5
msgid "IOR input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:219
# 2c5c88cb00c640a1923bccd10e2c2b06
msgid "Index of refraction defining how much the ray changes direction. At 1. 0 rays pass straight through like transparent; higher values give more refraction."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:224
# 0ac49d260fe64257a7111554d0d49348
msgid "Glass :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:229
# f046b2d03d5b4b76996cf4c9a1522ca0
msgid "Sharp Glass"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:230
# d219493c8f594b23a5d4080052e85e0f
msgid "Rough Glass"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:240
# b0111658fc264f758ec698a8cd529ac8
msgid "Refraction"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:242
# d387bdd00d994a97bfa5d5c314d68ac3
msgid "Glossy refraction with sharp or microfacet distribution, used for materials that transmit light. For best results this node should be considered as a building block and not be used on its own, but rather mixed with a glossy node using a fresnel factor. Otherwise it will give quite dark results at the edges for glossy refraction."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:249
# d3f70c13f2014a66a3a0533c5b77e530
msgid "Microfacet distribution to use. *Sharp* results in perfectly sharp refractions, while *Beckmann* and *GGX* can use the *Roughness* input for blurry refractions."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:252
# 0ceb278370e4448386d857f9f0135851
msgid "Color of the surface, or physically speaking, the probability that light is refracted for each wavelength."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:263
# eabfd5bfb3584d15837e0c05ac4f68fb
msgid "Refraction Shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:269
# 34355cec425e486e9078ef870ed4f821
msgid "Velvet"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:271
# e5d44549f8cb48f8be5a5c98dd31600e
msgid "Velvet reflection shader for materials such as cloth. It is meant to be used together with other shaders (such as a *Diffuse Shader*) and isn't particularly useful on it's own."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:278
# e29a9686c2474be19872c095a6465cd5
msgid "Sigma input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:278
# 4155e902f48e46768be7b87c6078bac5
msgid "Variance of the normal distribution, controlling the sharpness of the peak - can be thought of as a kind of *roughness*."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:283
# 328cbebdf0cd4faeab02b0dae1c77a5e
msgid "Velvet :abbr:`BSDF (Bidirectional scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:293
# 47c1205795fd439487d2d8b166ebf4a9
msgid "The Velvet Shader"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:299
# 9b068756890b4644b451058e8db0ecaf
msgid "Subsurface Scattering"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:301
# 09aa51a81f0846079875b6113cae2619
msgid "Simple subsurface multiple scattering, for materials such as skin, wax, marble, milk and others. For these materials, rather than light being reflect directly off the surface, it will penetrate the surface and bounce around internally before getting absorbed or leaving the surface at a nearby point."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:306
# 54df4cb5c03b4e6d80784933a766577a
msgid "How far the color scatters on average can be configured per RGB color channel. For example, for skin, red colors scatter further, which gives distinctive red-colored shadows, and a soft appearance."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:317
# a460e8c8745f4ab9b357b3d43afec97b
msgid "Falloff"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:311
# 3e40b6e8c7514fc9979a90abc34cd798
msgid "Lighting distance falloff function. **Cubic** is a sharp falloff useful for many simple materials. The function is (radius - x) :sup:`3` **Gaussian** gives a smoother falloff following a normal distribution, which is particularly useful for more advanced materials that use measured data that was fitted to one or more such Gaussian functions. The function is e :sup:`-8x`:sup:`2`:sup:`/radius`:sup:`2`, such that the radius roughly matches the maximum falloff distance. To match a given measured variance v, set radius = sqrt(16*v)."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:321
# 359578965faf4cc8a0e9f06369620cc7
msgid "Scale input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:322
# 074202595db8473fb681b4c9791d308c
msgid "Global scale factor for the scattering radius."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:323
# b017fe4e9e33454fa446979e533cd299
msgid "Radius input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:324
# 0d28b6120c454bb88bfdc6963822427e
msgid "Scattering radius for each RGB color channel, the maximum distance that light can scatter."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:335
# dff306c092934f359b242bd71395387c
msgid "Texture Blur input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:328
# f55bd631226a47828acc361967e940a8
msgid "How much of the texture will be blurred along with the lighting, mixing the texture at the incoming and outgoing points on the surface. Note that the right choice depends on the texture. Consider for example a texture created from a photograph of skin, in this cases the colors will already be pre-blurred and texture blur could be set to 0. Even for hand painted textures no or minimal blurring might be appropriate, as a texture artist would likely paint in softening already, one would usually not even know what an unblurred skin texture looks like, we always see it blurred. For a procedural texture on the other hand this option would likely have a higher value."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:339
# 0cb8c68d87e14b18b8829450c4cef75c
msgid "BSSRDF output"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:338
# fd409b0c588e4c46914f264b30da47dc
msgid ":abbr:`BSSRDF (Bidirectional subsurface scattering distribution function)` shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:343
# a5cb0338a133448ea9921ed962734b8c
msgid "A skin-toned SSS shader with color radius: 1.0, 0.8, 0.5."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:349
# 7ed852176e654592866ae5534fb6436a
msgid "Emission"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:351
# 708fa787f3604083b94e5476d2577fb3
msgid "Lambertian emission, to be used for material and lamp surface outputs."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:354
#: ../../../manual/render/cycles/nodes/shaders.rst:397
# 597638b85efd477cbaf29d11e6acbcb9
# 597638b85efd477cbaf29d11e6acbcb9
msgid "Color of the emitted light."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:357
#: ../../../manual/render/cycles/nodes/shaders.rst:398
# 17a8049e331443aaad2dcfe8605f28ab
# 17a8049e331443aaad2dcfe8605f28ab
msgid "Strength input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:356
# 8d4276a193324c268e3f47679ac9deb8
msgid "Strength of the emitted light. For point and area lamps, the unit is Watts. For materials, a value of 1.0 will ensure that the object in the image has the exact same color as the Color input, i.e. make it 'shadeless'."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:361
# 832497ad9de34e409b1f62223020c948
msgid "Emission output"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:360
# cba9d0b1fcd0425eb92096214d353577
msgid "Emission shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:367
# 85789eb10c164aa9baa0e18f8c9fa3f9
msgid "Emission shader, with strength at ``1.0``"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:371
# a0eb281fc5e8498bbe3a33afa3da33da
msgid "Emission shader, with strength at ``3.0``"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:374
# 49c50176b38f4f8db190b34aa4eda037
msgid "Cycles uses a physically correct light falloff by default, whereas Blender Internal uses a smoothed falloff with a Distance parameter. A similar effect can be found by using the Light Falloff node with the Smooth parameter."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:378
# 5078fd36490d46acbf63bcdfb468fd22
msgid "Lamp strength for point, spot and area lamps is specified in Watts. This means you typically need higher values than Blender Internal, as you couldn't use a 1W lamp to light a room; you need something stronger like a 100W lamp."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:382
# 6fa35fbf4b934cd29895147f3d3aab88
msgid "Sun lamps are specified in Watts/m^2, which require much smaller values like 1 W/m^2. This can be confusing, but specifying strength in Watts wouldn't have been convenient; the real sun for example has strength 384600000000000000000000000W. Emission shaders on meshes are also in Watts/m^2."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:391
# 8e532d02054f4f7ca057587db810d38f
msgid "Background"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:393
# ae6097c464954b36b39d7977744f3b9e
msgid "Background light emission. This node should only be used for the world surface output; it is ignored in other cases."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:399
# f7b674b03d524287bb8a2fbb42529e7e
msgid "Strength of the emitted light."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:402
# 379e48ce1a2e43749612e135d53f4dba
msgid "Background output"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:401
# 3f5e5b609904402dab1ca892eee1ba20
msgid "Background shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:407
# d5fd2589cb2c4adaa75c938253c4024a
msgid "Holdout"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:409
# a82c274018ff4e63b1a2458c46ca5ed8
msgid "A holdout shader is useful for compositing, to create a \"hole\" in the image with zero alpha transparency where the object with this shader is located."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:414
# 645abbeaffaa473cb8c71996ead1d4db
msgid "Holdout output"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:413
# 6ec652de5148420687baffd0013d3153
msgid "Holdout shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:418
# 1442b144edea428b890df962fab50fb5
msgid "The white area is a region with zero Alpha."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:424
# a2b2db076d79437eace817ef358020bf
msgid "Ambient Occlusion"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:426
# 816624bcb8cf47d7a57cf37a2cdc19ac
msgid "The ambient occlusion node gives per-material control for the amount of AO. When AO is enabled in the world, it affects all diffuse BSDFs in the scene. With this option it's possible to let only some materials be affected by AO, or to let it influence some materials more or less than others."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:432
# 547a1ba6922942e6b6e3ea9359424614
msgid "surface reflection color."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:435
# b4b7089f37694506b5b3a3eb23432932
msgid "AO output"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:434
# 226d6aa1bb70493fa031881a4e312a3b
msgid "Ambient Occlusion shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:439
# 220347fa9c3a43648a3f492f7f045307
msgid "White AO shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:445
# 26c6a3b854004d5493c94a2c083c00b7
msgid "Mix and Add"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:447
# f9947e7e0fde40e184afe4c41e53811a
msgid "Mix or add shaders together. Mixing can be used for material layering, where the *Fac* input may, for example, be connected to a Blend Weight node."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:450
# 4676f328cfe54c148d79987567e31725
msgid "Shader inputs"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:451
# 71a7e91b863049e485fa42171580d7d6
msgid "Shaders to mix, such that incoming rays hit either with the specified probability in the *Fac* socket."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:453
# 7e65b6d71bd04f8399befd4751958cd1
msgid "Fac input"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:453
# 356ed1d26b244608a4d1b1b09897bee0
msgid "Blend weight to use for mixing two shaders; at zero it uses the first shader entirely and at one the second shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:457
# 146df875bcf54e2294e28fe011ccabe6
msgid "Shader output"
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:456
# 99463173c1d54f7ab6fce302651e8979
msgid "Mixed shader."
msgstr ""

#: ../../../manual/render/cycles/nodes/shaders.rst:461
# 2f2325cc0fb7481e8493bad11f1c3563
msgid "A mix of a glossy and a diffuse shader makes a nice ceramic material."
msgstr ""

