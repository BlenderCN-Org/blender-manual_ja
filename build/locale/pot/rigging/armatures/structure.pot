# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/rigging/armatures/structure.rst:4
# 9aaae34a9f1e4a79aa592fb8adf399fd
msgid "Armature Structure"
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:9
# 657c80bab6654ab495aad43ef4ce6d55
msgid "The very basic armature of the :doc:`Gingerbread Man tutorial </your_first_animation/2.animating_the_gingerbread_man>`."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:12
# 237dcbaca72b45d3be74dbaff54130d6
msgid "Armatures mimic real skeletons. They are made out of bones, which are (by default) rigid elements. But you have more possibilities than with real skeletons: In addition to the \"natural\" rotation of bones, you can also translate and even scale them! And your bones do not have to be connected to each other; they can be completely free if you want. However, the most natural and useful setups imply that some bones are related to others, forming so-called \"chains of bones\", which create some sort of \"limbs\" in your armature, as detailed in `Chains of Bones`_."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:21
# 461e62ff491b4504b311185e1b23971e
msgid "Chains of Bones"
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:26
# 28b1689b77c842869854b069f7f74ac3
msgid "An armature with two chains of bones."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:29
# 1abc3963244c44f7b4a48ee7c14bce6d
msgid "The bones inside an armature can be completely independent from each other (i.e. the modification of one bone does not affect the others). But this is not often a useful set up: To create a leg, all bones \"after\" the thigh bone should move \"with\" it in a well-coordinated manner. This is exactly what happens in armatures - by parenting a bone to the next one in the limb, you create a \"chains of bones\". These chains can be ramified. For example, five fingers attached to a single \"hand\" bone."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:37
# 1cdd728e7f224411a29674470b6c028f
msgid "Bones are chained by linking the tip of the parent to the root of the child. Root and tip can be *connected*, i.e. they are always exactly at the same point; or they can be *free*, like in a standard parent-child object relationship."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:41
# 0ca8f53ed34b488094329e25e84c3123
msgid "A given bone can be the parent of several children, and hence be part of several chains at the same time."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:44
# 952fe80ec1f04e00a83ddc1e9ef8a39f
msgid "The bone at the beginning of a chain is called its *root bone*, and the last bone of a chain is the *tip bone* (don't confuse them with similar names of bones' ends!)."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:48
# d1614e4d202f417a8283a882d0072ad8
msgid "Chains of bones are a particularly important topic in :doc:`posing </rigging/posing>` (especially with the standard *forward kinematics* versus \"automatic\" *inverse kinematics* posing techniques). You create/edit them in *Edit* mode, but except in case of connected bones, their relationships have no effect on bone transformations in this mode (i.e. transforming a parent bone won't affect its children)."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:56
# eef43bc59f0a4d198abc5c332ff2a622
msgid "Editing Bones Relationships"
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:58
# 696171677b0c404bb8ffd8091a598d78
msgid "This is detailed in the :doc:`editing pages </rigging/armatures/editing/properties#chain_editing>`, but let us have a quick look at this important feature."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:65
# 2fd9a07c40754adcbf492259024344fb
msgid "The Armature Bones panel with two bones selected, and their Child of settings highlighted."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:68
# 3a614d84581c4dd283e31c53c5bb32cd
msgid "The easiest way to manage bones relationships is to use the *Relations* panel *Bone* context:"
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:71
# d1944fa1977c4d3bb2ad25be6b7575ed
msgid "First, :doc:`select </rigging/armatures/selecting>` the bones you want to edit (selection order does not matter here)."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:73
# 25fec8dcb4cd47b8945b4c97139bf322
msgid "To *parent* a bone to another one, select the name of this parent in its drop-down *Parent* list."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:74
# db2b18dc8bbb4fea9f986743ede535d2
msgid "To *unparent* a bone, just select the void entry in the same *Parent* list."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:75
# a07ab6900ffe4c3980d41c94a4fc28ae
msgid "To *connect* a bone to its parent, enable its small *Con* button."
msgstr ""

#: ../../../manual/rigging/armatures/structure.rst:76
# 33e76964cb3945909280e638c6566af9
msgid "To *unconnect* a bone, disable its *Con* button."
msgstr ""

