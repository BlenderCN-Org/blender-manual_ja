# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/rigging/constraints/common_interface.rst:7
# 354edd35ce294032a9f241e552befcbc
msgid "Constraints Common Interface"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:12
# d7baca80a80c4bd6839dcc085d572eb5
msgid "The three parts of a constraint interface"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:15
# e29ed919127c4cc6a590d6dcbcae5077
msgid "As with :doc:`modifiers </modifiers/index>`, an object (or bone, see the :doc:`rigging chapter </rigging/index>` for details) can use several constraints at once. Hence, these constraints are organized in a stack which controls their order of evaluation (from top to bottom)."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:20
# 7813559bd94244cea714d327ba2b77d1
msgid "All constraints share a common basic interface, packed up in a sort of sub-panel, that is split into three parts:"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:23
# 219ffadc073f410c88bb1aa90fac7872
msgid "The header, gathering most common settings."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:24
# 0869e607f52e49829734272e6d31f5bb
msgid "The constraint's specific settings."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:25
# 8d83278f4be14fd5bffa7773ed9915ed
msgid "The influence and animation controls (the *Rigid Body Joint* constraints have no influence setting)."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:29
# 9c2cbf5c78b14ea4a0f9ba492e5273b0
msgid "Constraints Header"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:34
# 5817ad2e111d4b7f976fb4cf5390415d
msgid "A constraint header"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:37
# 3d01e13ec32b418094cc7caf69eb1182
msgid "The header of a constraint \"sub-panel\" is the same for all. From left to right, you have:"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:40
# 0d38d240979b42708fa60ddfd92d98d7
msgid "A small arrow"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:40
# a9da2901c25749d4ada0ad32400edeaa
msgid "This control allows you to show/hide the constraint's settings."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:43
# 5b6e450a781047559d135e4032f4eaf1
msgid "The constraint type"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:43
# 779170e082e7427ea8fdb15fe71a8579
msgid "This is just static text showing you what this constraint is..."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:53
# 947312ee66434d6aa165778470dad4c6
msgid "The name field"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:46
# e7450ca1f70e443e8c04c35fdf0b5190
msgid "Here you can give your constraint a more meaningful name than the default one. This control has another *important* purpose: it turns red when the constraint is not functional (as in *A constraint header*). As most constraints need a second \"target\" object to work (see below), when just added, they are in \"red state\", as Blender cannot guess which object or bone to use as target. This can also happen when you choose an invalid set of settings, e.g. with a :doc:`Track To constraint </rigging/constraints/tracking/track_to>` of which the *To* and *Up* vectors are both set to the same axis. As noted above, constraints in \"red state\" are ignored during the stack evaluation."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:56
# 2a8a8672c8ed498588a1d9dde99a45ad
msgid "The \"up\"/\"down\" buttons"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:56
# 27bd6e96c86140c1950e80314f197148
msgid "As seen above, these allow you to move a constraint up/down in the stack."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:60
# 5a890f3a53124f2d82488f2a2062d1b3
msgid "The \"X\" control"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:59
# e8e94eb4bc434918a2f60a99457b6c05
msgid "As seen above, this will delete (remove from the stack) the constraint."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:63
# e8db57e1790b402297aecaa16265d455
msgid "Constraints Settings"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:68
# 5e0b658844d046efa2e6eaad8f9442e9
msgid "The central part of a constraint's subpanel contains the constraint's settings, the target, and constraint space"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:71
# 01c03979a56b44b78991a15207c84788
msgid "The constraints settings area is of course specific to each constraint type. However, there are two points that are common to many constraints, so we will detail them here."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:76
# fd70cac4c48c48c296fef738625e25ff
msgid "The target"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:78
# 7be514554dfe45b0b70755abae4dd06d
msgid "Most constraints need another \"target\" object or bone to \"guide\" them. You select which by selecting its name in the *Target* field. Except for a few cases, you can use any type of object (camera, mesh, empty...); its object origin will be the target point."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:83
# f9c543b9c5634d93a0b853ec01ce4e34
msgid "When you type in the *OB* field a mesh or lattice name, a second *Vertex Group* field appears just below. If you leave it empty, the mesh or lattice will be used as a standard object target. But if you enter in this *Vertex Group* field the name of one of the mesh's or lattice's vertex groups, then the constraint will use the median point of this vertex group as target."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:89
# 79f7c71013044e78aac3bf8fa2b913d8
msgid "Similarly, if you type in the *OB* field an armature name, a second *Bone* field appears just below. If you enter in it the name of one of the armature's bones, then the constraint will use this bone's *root* as target. In some constraints, when you use a bone as target, another *Head/Tail* numeric field will also appear, that allows you to select where along the bone the target point will lay, from root (**0.0**) to tip (**1.0**) (remember that currently, in Blender UI, bones' roots are called \"heads\", and bones' tips, \"tails\"...)."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:101
# 8df481f53d19468db720cbe753e23a28
msgid "The Constraint Space (Space)"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:103
# 852d882713f644028755472a0ae826ba
msgid "For many constraints you can choose in which space it is evaluated/applied. In the Space drop-down lists, the right side one is the space that the owner is evaluated in (Owner Space). When such a constraint uses a target, you can also choose in which space the target is evaluated (Target Space). The Target Space drop-down list is on the left side. Both lists have the same options, depending on whether the element (owner or target) is a regular object, or a bone:"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:113
# 5b4fa8cbf82846df82af440b60c3b2c4
msgid "Local Space"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:111
# 2863c1721b4e4d8591dd8b91f8fa4c4a
msgid "The object's properties are evaluated in its own local space, i.e. based on its rest position (without taking into account its parents transformations in its chain, or its armature object's transformation)."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:118
# 11b8f01c97a1454787aea2b55828cd4b
msgid "Local With Parent (bones only)"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:116
# adc56fccaa1b4200b0032cd4bd81858b
msgid "The bone properties are evaluated in its own local space, *including* the transformations due to a possible parent relationship (i.e. due to the chain's transformations above the bone)."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:124
# 5eedc1717a904b1d8096865e18d9d63a
msgid "Pose Space (bones only)"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:121
# 6bc4897abe544f5396137990d339d956
msgid "The bone properties are evaluated in the armature object local space (i.e. independently from the armature transformations in *Object* mode). Hence, if the armature object has null transformations, *Pose Space* will have the same effect as *World Space*."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:128
# aec75f0425754062bd2a24fc8e70bf23
msgid "Local (Without Parent) Space (objects only)"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:127
# ff46ea37f5094eecab0b34aa591ea533
msgid "The object properties are evaluated in its own local space, *without* the transformations due to a possible parent relationship."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:133
# 6aa1f91065074d4489bc2ab2c8ae63e3
msgid "World Space (default setting)"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:131
# b396814f7a084c718941fffca28d6565
msgid "Here the object's or bone's properties are evaluated in the global coordinate system. This is the easiest to understand and most natural behavior, as it always uses the \"visual\" transform properties (i.e. as you see them in the 3D views)."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:135
# c0768fe16ffc486b9f51e24159283a8b
msgid "Understanding the Constraint Space effects is not really easy (unless you are a geometry genius...). The best thing to do is to experiment with their different combinations, using e.g. two empties (as they materialize clearly their axes), and a *Copy Rotation* constraint (as rotations are the most demonstrative transformations, to visualize the various spaces specificities...)."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:145
#: ../../../manual/rigging/constraints/common_interface.rst:150
# 7802d379fbc34df09c154d71a4b5bfb7
# 3811494dfca0492899406dc8e15555dd
msgid "Influence"
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:153
# a69079e3c1de472d839be88b781e9959
msgid "At the bottom of nearly all constraints, you have the *Influence* slider, which controls the influence of the constraint on its owner. As you might expect, **0.0** means that the constraint has no effect, and **1. 0** means that the constraint has full effect. Using in-between values, you can have several constraints all working together on the same owner's properties. Note that if a constraint has a full influence on a given property, all other constraints above in the stack working on that same property will have no effect at all."
msgstr ""

#: ../../../manual/rigging/constraints/common_interface.rst:161
# 6cae8010194647b99fcc086ab69c357c
msgid "But the best thing with influence is that you can animate it with an Fcurve - see :doc:`the constraints page of the animation chapter </animation/techs/object/constraint>` for more details about this."
msgstr ""

