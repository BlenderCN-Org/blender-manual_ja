# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/composite_nodes/types/input/render_layers.rst:4
#: ../../../manual/composite_nodes/types/input/render_layers.rst:16
# 8fef8b05e1a448d79576d5f9d1476c63
# b908dbc9c07d4726b6b44f75ef7e23fa
msgid "Render Layers Node"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:6
# cfda4e041698405694e01c9b1c2bef3d
msgid "Reference"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:19
# 0455cbe3a92d4b96a42a5eb1f2aeaf4a
msgid "This node is the starting place to getting a picture of your scene into the compositing node map."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:22
# 71f83bbb778042c5abf00984b38e761e
msgid "This node inputs an image from a scene within your blend file. Select the scene and the active render layer from the yellow selection list at the bottom of the node. Blender uses the active camera for that scene to create an image of the objects specified in the :doc:`RenderLayer </render/post_process/layers>`."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:27
# e22b5ba16c9d4d45bb2a80d7c79ad2ac
msgid "The *Image* is input into the map, along with the following data:"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:29
# fda165dab1ce45459c65a664fe2528ca
msgid "*Alpha* (transparency) mask"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:31
# 6b60a2c0d2a4407cbb110702bdbadf92
msgid "Depending on the Renderlayer passes that are enabled, other sockets are available. By default the Z is enabled:"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:34
# 2ffd21f257e946a1ab540a48c77716f7
msgid "*Z* depth map (how far away each pixel is from the camera)"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:36
# dc70bc9943d34b8db7aff38bab833c33
msgid "The example shows that two other passes are enabled:"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:38
# 17b6a16bc76742d495afaffa7b5a0695
msgid "*Normal* vector set (how light bounces off the surface)"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:39
# bd8372ffb060417683fecfdf0b551e31
msgid "*Speed* vector set (how fast an object is moving from one frame to the next)"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:41
# 4f37f295321d4345a6facf65a823c66f
msgid "Use the re-render button (Small landscape icon - to the right of the Renderlayer name) to re-render the scene and refresh the image and map."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:44
# 8642325c12e64912ac9877894610f406
msgid "You may recall that a .blend file may contain many scenes. The Renderlayer node can pick up the scene info from any available scene by selecting the scene from the left-hand selector. If that *other* scene also uses the compositor and/or sequencer, you should note that the scene information taken is the raw information (pre-compositing and pre-sequencing). If you wish to use composited information from another scene, you will have to render that scene to a multilayer OpenEXR frameset as an intermediate file store, and then use the Image input node instead."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:55
# 2e0a5590147443f2a500db9a6d605d4f
msgid "Using the Alpha Socket"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:57
# 86cb8bcbc94f46b78980216775fba394
msgid "Using the *Alpha* output socket is crucial in overlaying images on top of one another and letting a background image \"show through\" the image in front of it."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:60
# 43127ce5ad0847578e71d3c2890534ad
msgid "In a Blender scene, your objects are floating out there in virtual space. While some objects are in front of one another (Z depth), there is no ultimate background. Your world settings can give you the illusion of a horizon, but it's just that: an illusion. Further, some objects are semi-transparent; this is called having an Alpha value. A semi-transparent object allows light (and any background image) to pass through it to the camera. When you render an image, Blender puts out, in addition to a pretty image, a map of what solid objects actually are there, and where infinity is, and a map of the alpha values for semi-transparent objects. You can see this map by mapping it to a blue screen:"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:73
# 5af489dd20434ac388c575126b2da1a9
msgid "Viewing the Alpha values"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:76
# 0df068c836cc4d70be0039af8320aef5
msgid "In the little node map above, we have connected the Alpha output socket of the RenderLayer node to a Map Value node (explained later, but basically this node takes a set of values and maps them to something we can use). The Color Ramp node (also explained later in detail) takes each value and maps it to a color that we can see with our eyes. Finally, the output of the Color Ramp is output to a Composite viewer to show you, our dear reader, a picture of the Alpha values. Notice that we have set up the map so that things that are perfectly solid (opaque) are white, and things that are perfectly transparent (or where there is nothing) are blue."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:89
# 9c471aa429594f5ebe26d71750d42556
msgid "Optional Sockets"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:91
# 2c0da31cfb0644b79fc39d7785130995
msgid "For any of the optional sockets to appear on the node, you MUST have the corresponding pass enabled. In order for the output socket on the RenderLayer node to show, that pass must be enabled in the RenderLayer panel in the Buttons window. For example, in order to be able to have the Shadow socket show up on the RenderLayer input node, you must have the \"Shad\" button enabled in the Buttons window, Scene Render buttons, Renderlayer panel. See the RenderLayer tab (Buttons window, Output frame, Render Layers tab, Passes selector buttons) for Blender to put out the values corresponding to the socket."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:100
# 6931978a33634a69acc4d2a8b1e589a4
msgid "For a simple scene, a monkey and her bouncy ball, the following picture expertly provides a great example of what each pass looks like:"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:108
# a52f3906d8bb4b6581180f8bd28d728b
msgid "The available sockets are:"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:110
# ec4ea3dc12974571bcec31886294fd81
msgid "Z: distance away from the camera, in Blender Units"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:111
# 04694c250b64454487935afe19a614f3
msgid "Normal (Nor): How the color is affected by light coming from the side"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:112
# a4be722e569a40eb9b41dfca1f66fd0e
msgid "UV: how the image is distorted by the UV mapping"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:113
# 71ec36711b2246f287cc69f63f324b75
msgid "Speed (Vec): How fast the object is moving, and in what direction"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:114
# 962bbad1edff4bea984f2673c088218f
msgid "Color (Col): the RGB values that color the image that you see"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:115
# 5cf74f1925bc40e48624f6d035d0cfd0
msgid "Diffuse: the softening of colors as they diffuse through the materials"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:116
# afda0e5491134d469984290bc4d83735
msgid "Specular: the degree of shininess added to colors as they shine in the light"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:117
# 3bf4a3fd93894c10812d3ad6b3b915f2
msgid "Shadow: shadows cast by objects onto other objects"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:118
# 78cabb5fe7014f3b81300ce98fd17b58
msgid "AO: how the colors are affected by Ambient Occlusion in the world"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:119
# 516666def06c4fa4bb2d0ff82aae7572
msgid "Reflect (Ref): for mirror type objects, the colors they reflect and are thus not part of their basic material"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:120
# fdbbc5e5966742b695306cd5e41fe011
msgid "Refract: how colors are bent by passing through transparent objects"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:121
# 84f4f4d6d73f4865a253e901e36b7b5a
msgid "Radio (Radiosity): colors that are emitted by other objects and cast onto the scene"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:122
# 21609f58a98749b8acf5b52a864f8665
msgid "IndexOB: a numeric ordinal (index) of each object in the scene, as seen by the camera."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:127
# 1bd9af58976349d6b507047d7dad7648
msgid "Using the Z value Socket"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:129
# 1c8c3594488844a38078516ad480731e
msgid "Using the *Z* output socket is crucial in producing realistic images, since items farther away are blurrier (but more on that later)."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:132
# 2d2803d378d54d63b0c3d96ef3a46b7f
msgid "Imagine a camera hovering over an X-Y plane. When looking through the camera at the plane, Y is up/down and X is left/right, just like when you are looking at a graph. The camera is up in the air though, so it has a Z value from the X-Y plane, and, from the perspective of the camera, the plane, in fact all the objects that the camera can see, have a Z value as a distance that they are away from it. In addition to the pretty colors of an image, a RenderLayer input node also generates a Z value map. This map is a whole bunch of numbers that specify how far away each pixel in the image is away from the camera. You can see this map by translating it into colors, or shades of gray:"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:146
# a9eb8b8cd0c4475c868af4674b46aca3
msgid "Viewing the Z values"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:149
# f2005632cf574651b12c0d783bc424f9
msgid "In the little node map above, we have connected the Z output socket of the RenderLayer node to a Map Value node (explained later). This node takes a set of values and maps them to something we can use. The Color Ramp node (also explained later in detail) takes each value and maps it to a shade of gray that we can see with our eyes. Finally, the output of the colorramp is output to a Composite viewer to show you, our dear reader, a picture of the Z values. Notice that we have set up the Map Value node so that things closer to the camera appear blacker (think: black is 0, less Z means a smaller number) and pixels/items farther away have an increasing Z distance and therefore get whiter. We chose a Size value of 0.05 to see Z values ranging from 0 to 20 (20 is 1/0.05)."
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:162
# d3dfc1f50a454049808fd48cbca4f6f5
msgid "Using the Speed Socket"
msgstr ""

#: ../../../manual/composite_nodes/types/input/render_layers.rst:164
# 5b2a1d5509574255b545b2dac4c3be3e
msgid "Even though things may be animated in our scene, a single image or frame from the animation does not portray any motion; the image from the frame is simply where things are at that particular time. However, from the *Render Layers* node, Blender puts out a vector set that says how particular pixels are moving, or will move, to the next frame. You use this socket to create a :doc:`blurring effect. </composite_nodes/types/filter/vector_blur>`."
msgstr ""

