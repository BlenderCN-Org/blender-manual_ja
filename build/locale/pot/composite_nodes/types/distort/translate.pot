# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/composite_nodes/types/distort/translate.rst:4
# 718ca3bd674b4e9dbd32e2922f1a2d1b
msgid "Translate Node"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:8
# 71842bc231aa4d8db1cb09669eb3f41f
msgid "Translate node"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:11
# 61d72f9ef8d9451aa86a5d78f79402ba
msgid "The translate node translates (moves) an image by the specified amounts in the X and Y directions. X and Y are in pixels, and can be positive or negative. To shift an image up and to the left, for example, you would specify a negative X offset and a positive Y."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:16
# 429bd8ac0ea24b76a470d4c403507198
msgid "Use this node to position an image into the final composite image. Usually, the output of this node is routed to an AlphaOver or Mix node to mix it with a base image. In the example below, the RenderLayer input from one scene (box) is translated over to the left (a negative X translation) and alphaovered with a Hello scene RenderLayer input"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:26
# 7828f328e4a24489bb79f518aec16ba6
msgid "Example: Using the Translate Node to Roll Credits"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:28
# cb962a82d6f04261998ce02d28457ae3
msgid "At the end of your fantastic animation, you'll want to give credit where credit is due. This is called rolling the credits and you see the names of everyone involved scroll up over a background image or sequence. The mini-map below shows an example of how to roll credits using the Translate node."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:37
# 5a30ff89bdbe4ebc81a22b53fd698f7b
msgid "Using the Translate Node to Roll Credits"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:40
# 08a3787c5b804a299d2e06d1d60f4b55
msgid "In this node map, the RenderLayer input has a list of the people involved and is 150 pixels high; it is the image input into the Translate Node. The Y value (vertical) offset of the Translate node comes from a scaled time factor that varies from -150 to 150 over 30 frames. The Translated image is overlaid on top of a background swirl image. So, over the course of 30 frames, the Translate node shifts the image from down by 150 pixels (off the bottom of the screen), up through and overlaid on top of the swirl, and finally off the screen to the top. These frames are generated when the Render Animation buttons are set and Anim is pressed. Right now, frame 21 is showing Moe and Curly, and Larry has scrolled off the screen."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:51
# b9e595f887be40cfb4c1ff7c1fc2b956
msgid "Alpha channel"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:53
# f6aeb04483db4c41a82f84fe4e932474
msgid "Be sure to save your credits image in a format that supports an alpha channel, such as PNG, so that the AlphaOver node can overlay it on the background and let the background show through."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:57
# d5b576e3877641ed93b0e9b25e8c6ba4
msgid "You *could* have parented and animated all of the text to roll up past your camera, but rendering would have taken forever. Using the translate node is much faster to composite, and more flexible. To add someone to the list, simply change the credits image and re-animate. Since it is simple image manipulation, Blender is blazingly fast at regenerating your credits. Similarly, changing the background is rock simple as well; simply load up a different background image and re-Animate."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:66
# 20b32931b2334c889e1f71cb183687fa
msgid "Example: Moving a Matte"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:68
# 58a773937f1444619f9171fa6508c705
msgid "In some 2D and 3D animations and movies, a matte painting is used as the background. In most scenes it is still, however you can easily move it using the Translate node. Mattes are huge; the example used below is actually 1440x600 pixels, even though the scene being rendered is for TV. This oversizing gives us room to move the matte around. The example noodle below introduces a dancing \"Hello!\" from stage right in frames 1-30. As the \"Hello\" reaches center stage, we fake a camera move by moving the matte to the left, which makes it look like the \"Hello!\" is still moving as the camera moves with it."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:80
# 8615b11dfe4c441d8bd27619d7d0bb81
msgid "Moving a Matte in back of a moving Animation (frame 60)"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:83
# 1cb63189c80f4da2a9c745b5b30e107f
msgid "Use the Map Value node to scale the X (left to right) offsets that feed the Translate node. Note that *offsets* are used to position the dancing \"Hello!\" down to look like it is walking along the street (in the render scene, it is centered on camera and just dances in place). The matte is adjusted up to fake a camera height of an observer, bringing the horizon up."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:91
# b660c9901e674a43867ea1a33de077fe
msgid "Example: Shake, Rattle and Roll"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:93
# 89a598217a7a460da5281e337fc18f53
msgid "A real world effect is the shaking of the camera. BOOM! We expect to feel the impact and see it rock our world. In our virtual CG world, though, we are in the vaccuum of space. So, we have to fake a camera being shook. There are two points in the development cycle to do this: at *Render-Scene* time, and at *Composite* time."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:99
# a26d3b24d43d401e9328d16c123a0cd3
msgid "At *Render-Scene* time, the modeler would introduce an Ipo curve and keyframes that rotate and/or move the camera for a short amount of time. The advantage to render-scene shake is that the artist handles it and the editor does not have to worry about it; one less thing to do thank goodness. The disadvantage is that the artist may only be modeling the actors, and not the background scenery, props, or matte, so any shake they introduce does not transfer to the set, props, or backdrop. Therefore, it is best to introduce camera shake after all scenes have been rendered and assembled and when they are being composited."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:109
# 0a318caaf19b418ea86369bcf7a5c75f
msgid "There are two aspects to being bumped, or tripping over the tripod, or having an explosion go off next to you, or an airplane have a near miss as it flies by, or throwing up on a long sea voyage, or surviving an earthquake: *camera motion* and *image blur* (I know you were thinking expletives and changing your underpants, but this is about compositing)."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:116
# cf2b2ae0d04947339c614f71629c6cce
msgid "**Camera Motion** happens because the camera physically gets moved; but its mass and its tripod also acts as a dampening device, softening out and absorbing the initial bump. The cameraman also acts as a dampener, and also as a corrector, trying to get the camera back to where it was pointed originally."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:121
# bab3bf64df9f4e888d33dd050fa5044d
msgid "There can be quite a delay between the shock and the correction; for example, a lone actor/cameraman may trip on the tripod coming out from behind the camera, come into frame, realize the camera is off, and then come back to correct it. It all depends on the artistic effect and story you want to convey."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:126
# a2f7e5f5b1464c19b0141e8cd0c496b0
msgid "The *image blur* comes into play because the shake happens so rapidly that the image is blurred in the direction of the shake. However, the blur is more when the camera is being pushed back into position, and less when the camera is at the extreme of its deflection, since it is decelerating at the apex of its movement. Like motion, blur is the most during the initial shock, and less as things slow down and get under control. Also, the camera may go out of focus and come back into focus at the end of the shake."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:134
# 3b4c2c8e6f1e416d980db16706423477
msgid "To use Blender nodes to mimic Camera Motion, use the noodle shown below. The noodle has a Blur group on top that feeds a Translate group below it."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:140
# 22b3415157944c69863c91d0ada8e600
msgid "SFX: Camera Shake"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:143
# 22350526f88e4344a5de52cbafbe9b25
msgid "In the above example, we use a Time curve that mimics the intensity and duration of a typical BOOM!. In this case, both curves have four peaks within a 16-frame period to mimic a BOOM! (in fact one curve was constructed and then duplicated to make the other, to ensure that the bulk of both curves was exactly the same). Notice how the curve dampens (decreases in magnitude as time progresses) as discussed above. Notice how the curve slows down (increasing period) to mimic the cameraman getting it back under control. Notice that the curve is sinusoidal to mimic over-correction and vibration."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:153
# 7e9bfe2c8f2f4fdaae2d01880257ebfa
msgid "BOOM! to the Left: The translate curve starts at 0.5. Maximum deflection up is fully a half, yet down is only a quarter. This offset mimics a BOOM! off to our left, since the camera shakes more to the right, away from the BOOM!"
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:157
# cbd11bdcddd14acdb5d6768cb6428dec
msgid "Motion and Blur are the same but different: Notice that the two curves are identical except for the highlighted start and end dots; we want zero blur and zero offsets before and after the shake, but minimum blur when there is maximum translate. The two Map Value node settings are different to achieve this; the math is left to the reader."
msgstr ""

#: ../../../manual/composite_nodes/types/distort/translate.rst:163
# 66c987f0e8dd40018052569d7a3e4373
msgid "Use this Blender noodle to mimic camera shake. The amount of shake is set by the *Size* values, and the blur should be proportional to the amount and direction of motion (predominantly X in this example). Use the Time start and end to vary the duration of the shake; ten seconds for an earthquake, one minute for a ship rolling in the seas, a half second as an F-14 flies by and takes your ear off. *Author's note: I noticed cool camera shakes while watching the Halo 3 previews.*"
msgstr ""

