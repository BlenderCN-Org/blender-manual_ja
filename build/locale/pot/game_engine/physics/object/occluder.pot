# SOME DESCRIPTIVE TITLE.
# Copyright (C) Creative Commons Zero
# This file is distributed under the same license as the Blender Reference Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Blender Reference Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 15:40+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/game_engine/physics/object/occluder.rst:4
# 763527b23d4f45859a5a68cfe9badfb4
msgid "Occlude Object Type"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:6
# c750c4fc1f004c23b4326a6f66f6f036
msgid "If an Occlude type object is between the camera and another object, that other object will not be rasterized (calculated for rendering). It is culled because it is occluded."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:10
# b50f029cae5343aba5612e5c29595e56
msgid "There is a demo .blend file to examplify some concepts: `BGE-Physics-Objects-Occluder.blend <http://wiki.blender.org/index.php/Media:BGE-Physics-Objects-Occluder.blend>`__"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:14
# 8df97851082d4d8f9d5848b28a80189d
msgid "A messed-up, subdivided Cube named \"Cube\"."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:15
# 7b39dbff03a54ce68fa838af8909dc34
msgid "Another one behind a \"Physics Type: Occlude\" plane, named \"Cube.BG\"."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:16
# 08f4658763ac480f85cb2e66e69f1080
msgid "Another one outside the view Frustum, named \"Cube.OffCamera\"."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:18
# da6fcb946d784c338ade590748c839fd
msgid "Now observe what happens to the profiling stats for each of the following (in order):"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:20
# 0b348d30a24143c8ade935253711ba53
msgid "Hit :kbd:`P` as the scene is. It hums along at a fairly slow rate. On my system the Rasterizer step takes 130ms. The framerate will finally jump up once the \"Cube\" object has completely moved out of the view frustum. It's as if the Occluder doesn't do anything while the Cube is behind it."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:23
# be435a9188164aa69487b8e0b45ec252
msgid "Delete the \"Cube.OffCamera\" object above, and notice that there is no improvement in speed. This is the view frustum culling working for you - it does not matter if that object exists or not."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:26
# 2d78119f35ad43aebc0ef286e9e3592b
msgid "Hit :kbd:`Z` to view wireframe. Notice that in the 3D Viewport you can see \"Cube.BG\", but once you hit :kbd:`P`, it is not there."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:28
# 910dbd5ca695499baffc1460ee733979
msgid "Make the \"Occluder\" object take up the whole camera's view with :kbd:`S-X-5`. You will see a huge leap in framerate, since almost nothing is being Rasterized. On my system the Rasterizer step drops to 5ms."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:31
# 0466642776f341958b2f495235beecac
msgid "Try a run with :menuselection:`World properties --> Physics --> Occlusion Culling` disabled. It will be slow again."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:32
# 4b0c6ce9bc6a4dcdad706c42a5325732
msgid "Reenable :menuselection:`World properties --> Physics --> Occlusion Culling` and run it one more time to prove to yourself that your speed is back."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:34
# 54bfdc45bbf74cf9b07f97dadda77a4f
msgid "Change the Occluder to \"Physics Type: Static\". Notice that it is back to the original slowness."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:35
# ccf295b25c794a4b83cac1ba57c119cb
msgid "Change it back to \"Physics Type: Occlude\"."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:36
# bb7f2ff39e2649b3b0f6c23e78b5abab
msgid "Now make the \"Occluder\" invisible. The framerate is back down to its original, slow rate."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:45
# 4d7e55a917224cb8b580e5672b439c24
msgid "Details"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:47
# 2b473822d77a4ddcaf116cbd488d74eb
msgid "As far as Physics is concerned, this type is equivalent to Rigid Object \"No collision\". The reason why the Occluder mode is mutually exclusive with other physics mode is to emphasize the fact that occluders should be specifically designed for that purpose and not every mesh should be an occluder. However, you can enable the Occlusion capability on physics objects using Python and Logic bricks - see (Link- TODO)"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:54
# b2f114b736a34fc3b2cfd89fb76aaec4
msgid "When an occluder object enters the view frustrum, the BGE builds a ZDepth buffer from the faces of that object. Whether the faces are one-side or two-side is important: only the front faces and two-side faces are used to build the ZDepth buffer. If multiple occluders are in the view frustrum, the BGE combines them and keeps the most foreground faces."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:61
# b157df1634694d599b31d48c83780ac1
msgid "The resolution of the ZDepth buffer is controllable in the World settings with the \"Occlu Res\" button:"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:64
# 794656dbb20e42f98c8ab58e7f102515
msgid "By default the resolution is 128 pixels for the largest dimension of the viewport while the resolution of the other dimension is set proportionally. Although 128 is a very low resolution, it is sufficient for the purpose of culling. The resolution can be increased to maximum 1024 but at great CPU expense."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:69
# aa02d44b94d34d28b9dcbbf977d0289b
msgid "The BGE traverses the DBVT (Dynamic Bounding Volume Tree) and for each node checks if it is entirely hidden by the occluders and if so, culls the node (and all the objects it contains)."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:73
# d2f46d1520af44d3a5af95d4970447ff
msgid "To further optimize the feature, the BGE builds and uses the ZDepth buffer only when at least one occluder is in the view frustrum. Until then, there is no performance decrease compared to regular view frustrum culling."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:79
# 3866c48451db44d5b247f68e531e2e86
msgid "Recommendations"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:81
# 96cdeddaa1c942b7a58258ad7e89c2a1
msgid "Occlusion culling is most useful when the occluders are large objects (buildings, mountains, ...) that hide many complex objects in an unpredictable way. However, don't be too concerned about performance: even if you use it inappropriately, the performance decrease will be limited due to the structure of the algorithm."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:86
# 259efca81b6649f0932d892d0e3c16b0
msgid "There are situations where occlusion culling will not bring any benefit:"
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:89
# 41a17b132f604c1399c3242ef6deb368
msgid "If the occluders are small and don't hide many objects. - In that case, occlusion culling is just dragging your CPU down)."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:93
# c0a1efa154d2452faf64bc6a38ca5dd7
msgid "If the occluders are large but hides simple objects. - In that case you're better off sending the objects to the GPU)."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:97
# 7382b73b25a8493eabaf18662875a343
msgid "If the occluders are large and hides many complex objects but in a very predictable way."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:99
# 71be13cf8943441cbb27dd57b13e0100
msgid "Example: a house full of complex objects. Although occlusion culling will perform well in this case, you will get better performance by implementing a specific logic that hides/unhides the objects; for instance making the objects visible only when the camera enters the house)."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:104
# 7118d1b54f8f4e2e901859df1e64e5cc
msgid "Occluders can be visible graphic objects but beware that too many faces will make the ZDepth buffer creation slow."
msgstr ""

#: ../../../manual/game_engine/physics/object/occluder.rst:106
# 76c3a4b7f6b94925a9e9d666dd943fad
msgid "For example, a terrain is not a good candidate for occlusion: too many faces and too many overlap. Occluder can be invisible objects placed inside more complex objects (ex: \"in the walls\" of a building with complex architecture). Occluders can have \"holes\" through which you will see objects."
msgstr ""

