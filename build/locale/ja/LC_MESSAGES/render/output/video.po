# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/render/output/video.rst:4
msgid "Video Output"
msgstr ""

#: ../../../manual/render/output/video.rst:7
msgid "Preparing your work for video"
msgstr ""

#: ../../../manual/render/output/video.rst:9
msgid ""
"Once you have mastered the trick of animation you will surely start to "
"produce wonderful animations, encoded with your favorite codecs, and "
"possibly you'll share them on the Internet with the rest of the community."
msgstr ""

#: ../../../manual/render/output/video.rst:13
msgid ""
"Sooner or later you will be struck with the desire to build an animation for"
" television, or maybe burn your own DVDs. To spare you some disappointment, "
"here are some tips specifically targeted at Video preparation. The first and"
" principal one is to remember the double-dashed white lines in the camera "
"view!"
msgstr ""

#: ../../../manual/render/output/video.rst:18
msgid ""
"If you render for PC then the whole rendered image which lies within the "
"*outer* dashed rectangle will be shown. For television, some lines and some "
"part of the lines will be lost due to the mechanics of the electron beam "
"scanning in your TV's cathode ray tube. You are guaranteed that what is "
"within the *inner* dashed rectangle in camera view will be visible on the "
"screen. Everything within the two rectangles may or may not be visible, "
"depending on the given TV set that your audience watches the video on."
msgstr ""

#: ../../../manual/render/output/video.rst:28
msgid "Dimensions Presets"
msgstr ""

#: ../../../manual/render/output/video.rst:45
msgid "Pixel Aspect Ratio"
msgstr ""

#: ../../../manual/render/output/video.rst:57
msgid ""
"Most video tapes and video signals are not based on the RGB model but on the"
" YCrCb model: more precisely, the YUV in Europe (PAL), and the YIQ in the "
"USA (NTSC), the latter being quite similar to the former. Hence some "
"knowledge of this is necessary too."
msgstr ""

#: ../../../manual/render/output/video.rst:61
msgid ""
"The YCrCb model sends information as 'Luminance', or intensity (Y) and two "
"'Crominance' signals, red and blue (Cr and Cb). Actually a Black and White "
"TV set shows only luminance, while color TV sets reconstruct color from "
"Crominances (and from luminance). Construction of the YCrCb values from the "
"RGB ones takes two steps (the constants *in italics* depend on the system: "
"PAL or NTSC):"
msgstr ""

#: ../../../manual/render/output/video.rst:68
msgid "First, the Gamma correction (*g* varies: 2.2 for NTSC, 2.8 for PAL):"
msgstr ""

#: ../../../manual/render/output/video.rst:70
msgid "R' = R :sup:`1/g` :\\*G' = G :sup:`1/g`"
msgstr ""

#: ../../../manual/render/output/video.rst:71
msgid "B' = B :sup:`1/g`"
msgstr ""

#: ../../../manual/render/output/video.rst:73
msgid "Then, the conversion itself:"
msgstr ""

#: ../../../manual/render/output/video.rst:75
msgid "Y = 0.299R' + 0.587G' + 0.114B'"
msgstr ""

#: ../../../manual/render/output/video.rst:76
msgid "Cr = *a* :sub:`1` (R' - Y) + *b* :sub:`1` (B' - Y)"
msgstr ""

#: ../../../manual/render/output/video.rst:77
msgid "Cb = *a* :sub:`2` (R' - Y) + *b* :sub:`2` (B' - Y)"
msgstr ""

#: ../../../manual/render/output/video.rst:79
msgid ""
"Whereas a standard 24 bit RGB picture has 8 bits for each channel, to keep "
"bandwidth down, and considering that the human eye is more sensitive to "
"luminance than to chrominance, the luminance signal is sent with more bits "
"than the two chrominance signals. This bit expansion results in a smaller "
"dynamic of colors in video, than what you are used to on monitors. You hence"
" have to keep in mind that not all colors can be correctly displayed."
msgstr ""

#: ../../../manual/render/output/video.rst:86
msgid ""
"A rule of thumb is to keep the colors as 'grayish' or 'unsaturated' as "
"possible; this roughly means keeping the dynamics of your colors within 80% "
"of one another. In other words, the difference between the highest RGB value"
" and the lowest RGB value should not exceed 0.8 ([0-1] range) or 200 "
"([0-255] range)."
msgstr ""

#: ../../../manual/render/output/video.rst:98
msgid "Rendering to fields"
msgstr ""

#: ../../../manual/render/output/video.rst:102
msgid "Field Rendering result."
msgstr ""

#: ../../../manual/render/output/video.rst:105
msgid ""
"The TV standards prescribe that there should be 25 frames per second (PAL) "
"or 30 frames per second (NTSC). Since the phosphors of the screen do not "
"maintain luminosity for very long, this could produce a noticeable "
"flickering."
msgstr ""

#: ../../../manual/render/output/video.rst:115
msgid ""
"In particular, fields are \"interlaced\" in the sense that one field "
"presents all the even lines of the complete frame and the subsequent field "
"the odd ones."
msgstr ""

#: ../../../manual/render/output/video.rst:118
msgid ""
"Since there is a non-negligible time difference between each field (1/50 or "
"1/60 of a second) merely rendering a frame the usual way and splitting it "
"into two half frames does not work. A noticeable jitter of the edges of "
"moving objects would be present."
msgstr ""

#: ../../../manual/render/output/video.rst:124
msgid "Options"
msgstr "オプション"

#: ../../../manual/render/output/video.rst:128
msgid "Field Rendering setup."
msgstr ""

#: ../../../manual/render/output/video.rst:137
msgid "Fields"
msgstr ""

#: ../../../manual/render/output/video.rst:139
msgid "Upper First / Lower First"
msgstr ""

#: ../../../manual/render/output/video.rst:140
msgid "Toggles between rendering the even and odd frames first."
msgstr ""

#: ../../../manual/render/output/video.rst:143
msgid "Still"
msgstr ""

#: ../../../manual/render/output/video.rst:145
msgid "Setting up the correct field order"
msgstr ""

#: ../../../manual/render/output/video.rst:147
msgid ""
"Blender's default setting is to produce Even fields *before* Odd fields; "
"this complies with European PAL standards. Odd fields are scanned first on "
"NTSC."
msgstr ""

#: ../../../manual/render/output/video.rst:151
msgid ""
"Of course, if you make the wrong selection things are even worse than if no "
"Field rendering at all was used!"
msgstr ""

#: ../../../manual/render/output/video.rst:154
msgid ""
"If you are really confused, a simple trick to determine the correct field "
"order is to render a short test animation of a white square moving from left"
" to right on a black background. Prepare one version with odd field order "
"and another with even field order, and look at them on a television screen. "
"The one with the right field order will look smooth and the other one "
"horrible. Doing this simple test will save you *hours* of wasted rendering "
"time..."
msgstr ""

#: ../../../manual/render/output/video.rst:162
msgid "Fields and Composite Nodes"
msgstr ""

#: ../../../manual/render/output/video.rst:164
msgid ""
"Nodes are currently not field-aware. This is partly due to the fact that in "
"fields, too much information is missing to do good neighborhood operations "
"(blur, vector blur etc.). The solution is to render your animation at double"
" the frame rate without fields and do the interlacing of the footage "
"afterwards."
msgstr ""

#: ../../../manual/render/output/video.rst:171
msgid "Home-made Render Farm"
msgstr ""

#: ../../../manual/render/output/video.rst:175
msgid ""
"An easy way to get multiple machines to share the rendering workload is to:"
msgstr ""

#: ../../../manual/render/output/video.rst:177
msgid "Set up a shared directory (such as a Windows Share or an NFS mount)"
msgstr ""

#: ../../../manual/render/output/video.rst:178
msgid "Un-check \"Overwrite\" and check \"Placeholders\""
msgstr ""

#: ../../../manual/render/output/video.rst:179
msgid ""
"Start as many machines as you wish rendering to that directory -- they will "
"not step on each other's toes."
msgstr ""

#: ../../../manual/render/output/video.rst:132
msgid ""
"Enable field rendering. When the *Fields* button in the *Render* Panel is "
"pressed (*Post Processing* section), Blender prepares each frame in two "
"passes. On the first it renders only the even lines, then it *advances in "
"time by half a time step* and renders all the odd lines. This produces odd "
"results on a PC screen *(Field Rendering result)*. but will show correctly "
"on a TV set."
msgstr ""

#: ../../../manual/render/output/video.rst:142
msgid "Disables the half-frame time step between fields (*x*)."
msgstr ""

#: ../../../manual/render/output/video.rst:55
msgid "Color Saturation"
msgstr ""

#: ../../../manual/render/output/video.rst:92
msgid ""
"This is not strict - something more than 0.8 is acceptable - but an RGB "
"display with color contrast that ranges from 0.0 to 1.0 will appear to be "
"very ugly (over-saturated) on video, while appearing bright and dynamic on a"
" computer monitor."
msgstr ""

#: ../../../manual/render/output/video.rst:32
msgid ""
"The rendering size is strictly dictated by the TV standard. There are "
"various popular presets included, more can be added for your convenience."
msgstr ""

#: ../../../manual/render/output/video.rst:35
msgid "Saved information is:"
msgstr ""

#: ../../../manual/render/output/video.rst:37
msgid "X, Y & percentage scale"
msgstr ""

#: ../../../manual/render/output/video.rst:38
msgid "pixel aspect ratio"
msgstr ""

#: ../../../manual/render/output/video.rst:39
msgid "frames per second, for animation"
msgstr ""

#: ../../../manual/render/output/video.rst:41
msgid "See also :ref:`render_output_dimensions`"
msgstr ""

#: ../../../manual/render/output/video.rst:47
msgid ""
"Unlike regular computer monitors, some screens (typically older TV sets) do "
"*not* have the square pixels making it it necessary to generate *pre-"
"distorted* images which will look stretched on a computer but which will "
"display correctly on a TV set. It is important that you use the correct "
"pixel aspect ratio when rendering to prevent re-scaling, resulting in "
"lowered image quality."
msgstr ""

#: ../../../manual/render/output/video.rst:110
msgid ""
"To minimize this, a TV does not represent frames as a computer does "
"('progressive' mode), but rather represents half-frames, or *fields* at a "
"double refresh rate, hence 50 half frames per second on PAL and 60 half "
"frames per second on NTSC. This was originally bound to the frequency of "
"power lines in Europe (50Hz) and the US (60Hz)."
msgstr ""

#~ msgid ""
#~ "The rendering size is strictly dictated by the TV standard. Blender has 11 "
#~ "pre-set settings for your convenience:"
#~ msgstr ""

#~ msgid ""
#~ "Note that if you render your animation at 1600x1200 resolution, and then "
#~ "burn a DVD, your image will not be clearer or crisper on the TV; in fact the"
#~ " DVD burning software will have had to downsize your images to fit the "
#~ "resolutions shown above, and you will have wasted about 4x disk space and "
#~ "render time."
#~ msgstr ""

#~ msgid ""
#~ "Older TV screens do *not* have the square pixels which Computer monitors "
#~ "have; their pixels are somewhat rectangular, so it is necessary to generate "
#~ "*pre-distorted* images which will look bad on a computer but which will "
#~ "display nicely on a TV set. It is important that you use the correct pixel "
#~ "aspect ratio when rendering to prevent re-sampling, resulting in lowered "
#~ "image quality."
#~ msgstr ""

#~ msgid ""
#~ "To minimize this, a TV does not represent frames as a Computer does "
#~ "('progressive' mode), but rather represents half-frames, or *fields* at a "
#~ "double refresh rate, hence 50 half frames per second on PAL and 60 half "
#~ "frames per second on NTSC. This was originally bound to the frequency of "
#~ "power lines in Europe (50Hz) and the US (60Hz)."
#~ msgstr ""

#~ msgid "Video Files"
#~ msgstr ""

#~ msgid ""
#~ "These formats are primarily used for compressing rendered sequences into a "
#~ "playable movie (they can also be used to make plain audio files)."
#~ msgstr ""

#~ msgid ""
#~ "A codec is a little routine that compresses the video so that it will fit on"
#~ " a DVD, or be able to be streamed out over the Internet, over a cable, or "
#~ "just be a reasonable file size. Codecs compress the channels of a video down"
#~ " to save space and enable continuous playback. *Lossy* codecs make smaller "
#~ "files at the expense of image quality. Some codecs, like H.264, are great "
#~ "for larger images. Codecs are used to encode and decode the movie, and so "
#~ "must be present on both the encoding machine (Blender) and the target "
#~ "machine. The results of the encoding are stored in a container file."
#~ msgstr ""

#~ msgid ""
#~ "There are dozens, if not hundreds, of codecs, including XviD, H.264, DivX, "
#~ "Microsoft, and so on. Each has advantages and disadvantages and "
#~ "compatibility with different players on different operating systems."
#~ msgstr ""

#~ msgid ""
#~ "Most codecs can only compress the RGB or YUV color space, but some support "
#~ "the Alpha channel as well. Codecs that support RGBA include:"
#~ msgstr ""

#~ msgid "animation (quicktime)"
#~ msgstr ""

#~ msgid ""
#~ "PNG TIFF Pixlet - not loss-less, and may be only available on Apple Mac."
#~ msgstr ""

#~ msgid ""
#~ "`Lagarith Loss-less Video Codec <http://lags.leetcode.net/codec.html>`__"
#~ msgstr ""

#~ msgid "AVI Codec"
#~ msgstr ""

#~ msgid "AVI Jpeg"
#~ msgstr ""

#~ msgid ""
#~ "AVI but with Jpeg compression. Lossy, smaller files but not as small as you "
#~ "can get with a Codec compression algorithm. Jpeg compression is also the one"
#~ " used in the DV format used in digital camcorders."
#~ msgstr ""

#~ msgid "AVI Raw"
#~ msgstr ""

#~ msgid "Audio-Video Interlaced (AVI) uncompressed frames."
#~ msgstr ""

#~ msgid "Frameserver"
#~ msgstr ""

#~ msgid "H.264"
#~ msgstr ""

#~ msgid "MPEG"
#~ msgstr ""

#~ msgid "Ogg Theora"
#~ msgstr ""

#~ msgid "QuickTime"
#~ msgstr ""

#~ msgid "Reads GIF if QuickTime is Installed"
#~ msgstr ""

#~ msgid "Xvid"
#~ msgstr ""

#~ msgid "Advanced Encoding"
#~ msgstr ""

#~ msgid ""
#~ "`FFmpeg <http://ffmpeg.org>`__, short for Fast Forward Moving Pictures "
#~ "Expert Group, is a collection of free and open source software libraries "
#~ "that can record, convert and stream digital audio and video in numerous "
#~ "formats. It includes libavcodec, an audio/video codec library used by "
#~ "several other projects, and libavformat, an audio/video container mux and "
#~ "demux library."
#~ msgstr ""

#~ msgid "Video Settings"
#~ msgstr ""

#~ msgid ""
#~ "Here you choose which video codec you want to use, and compression settings."
#~ " With all of these compression choices, there is a tradeoff between file "
#~ "size, compatibility across platforms, and playback quality."
#~ msgstr ""

#~ msgid ""
#~ "You can use the presets, DV, SVCD, DVD, etc. which choose optimum settings "
#~ "for you for that type of output, or you can manually select the format "
#~ "(MPEG-1, MPEG-2, MPEG-4, AVI, Quicktime (if installed), DV, H.264, or Xvid "
#~ "(if installed). You must have the proper codec installed on your computer "
#~ "for Blender to be able to call it and use it to compress the video stream."
#~ msgstr ""

#~ msgid "Video Formats"
#~ msgstr ""

#~ msgid "`MPEG-1 <http://en.wikipedia.org/wiki/MPEG-1>`__: ``.mpg``, ``.mpeg``"
#~ msgstr ""

#~ msgid ""
#~ "A standard for lossy compression of video and audio. It is designed to "
#~ "compress VHS-quality raw digital video and CD audio down to 1.5 Mbit/s."
#~ msgstr ""

#~ msgid ""
#~ "`MPEG-2 <http://en.wikipedia.org/wiki/MPEG-2>`__: ``.dvd``, ``.vob``, "
#~ "``.mpg``, ``.mpeg``"
#~ msgstr ""

#~ msgid ""
#~ "A standard for \"the generic coding of moving pictures and associated audio "
#~ "information\". It describes a combination of lossy video compression and "
#~ "lossy audio data compression methods which permit storage and transmission "
#~ "of movies using currently available storage media and transmission "
#~ "bandwidth."
#~ msgstr ""

#~ msgid ""
#~ "`MPEG-4(DivX) <http://en.wikipedia.org/wiki/MPEG-4>`__: ``.mp4``, ``.mpg``, "
#~ "``.mpeg``"
#~ msgstr ""

#~ msgid ""
#~ "Absorbs many of the features of MPEG-1 and MPEG-2 and other related "
#~ "standards, and adds new features."
#~ msgstr ""

#~ msgid ""
#~ "`AVI <http://en.wikipedia.org/wiki/Audio_Video_Interleave>`__: ``.avi``"
#~ msgstr ""

#~ msgid ""
#~ "A derivative of the Resource Interchange File Format (RIFF), which divides a"
#~ " file's data into blocks, or \"chunks.\""
#~ msgstr ""

#~ msgid "`Quicktime <http://en.wikipedia.org/wiki/.mov>`__: ``.mov``"
#~ msgstr ""

#~ msgid ""
#~ "A multi-tracked format. QuickTime and MP4 container formats can use the same"
#~ " MPEG-4 formats; they are mostly interchangeable in a QuickTime-only "
#~ "environment. MP4, being an international standard, has more support."
#~ msgstr ""

#~ msgid "`DV <http://en.wikipedia.org/wiki/DV>`__: ``.dv``"
#~ msgstr ""

#~ msgid ""
#~ "An intraframe video compression scheme, which uses the discrete cosine "
#~ "transform (DCT) to compress video on a frame-by-frame basis. Audio is stored"
#~ " uncompressed."
#~ msgstr ""

#~ msgid "`H.264 <http://en.wikipedia.org/wiki/H.264>`__: ``.avi`` *for now*."
#~ msgstr ""

#~ msgid ""
#~ "A standard for video compression, and is currently one of the most commonly "
#~ "used formats for the recording, compression, and distribution of high "
#~ "definition video."
#~ msgstr ""

#~ msgid "`Xvid <http://en.wikipedia.org/wiki/Xvid>`__: ``.avi`` *for now*"
#~ msgstr ""

#~ msgid ""
#~ "A video codec library following the MPEG-4 standard. It uses ASP features "
#~ "such as b-frames, global and quarter pixel motion compensation, lumi "
#~ "masking, trellis quantization, and H.263, MPEG and custom quantization "
#~ "matrices. Xvid is a primary competitor of the DivX Pro Codec."
#~ msgstr ""

#~ msgid "`Ogg <http://en.wikipedia.org/wiki/Theora>`__: ``.ogg``, ``.ogv``"
#~ msgstr ""

#~ msgid ""
#~ "A free lossy video compression format. It is developed by the Xiph.Org "
#~ "Foundation and distributed without licensing fees."
#~ msgstr ""

#~ msgid "`Matroska <http://en.wikipedia.org/wiki/Matroska>`__: ``.mkv``"
#~ msgstr ""

#~ msgid ""
#~ "An open standard free container format, a file format that can hold an "
#~ "unlimited number of video, audio, picture or subtitle tracks in one file."
#~ msgstr ""

#~ msgid "`Flash <http://en.wikipedia.org/wiki/Flash_Video>`__: ``.flv``"
#~ msgstr ""

#~ msgid ""
#~ "A container file format used to deliver video over the Internet using Adobe "
#~ "Flash Player."
#~ msgstr ""

#~ msgid "`Wav <http://en.wikipedia.org/wiki/Wav>`__: ``.wav``"
#~ msgstr ""

#~ msgid ""
#~ "An uncompressed (or lightly compressed) Microsoft and IBM audio file format."
#~ msgstr ""

#~ msgid "`Mp3 <http://en.wikipedia.org/wiki/MP3>`__: ``.mp3``"
#~ msgstr ""

#~ msgid ""
#~ "A highly-compressed, patented digital audio encoding format using a form of "
#~ "lossy data compression. It is a common audio format for consumer audio "
#~ "storage, as well as a de facto standard of digital audio compression for the"
#~ " transfer and playback of music on digital audio players."
#~ msgstr ""

#~ msgid "Video Codecs"
#~ msgstr ""

#~ msgid "None"
#~ msgstr ""

#~ msgid "*For audio-only encoding.*"
#~ msgstr ""

#~ msgid "`MPEG-1 <http://en.wikipedia.org/wiki/MPEG-1>`__"
#~ msgstr ""

#~ msgid "See `Video Formats`_."
#~ msgstr ""

#~ msgid "`MPEG-2 <http://en.wikipedia.org/wiki/MPEG-2>`__"
#~ msgstr ""

#~ msgid "`MPEG-4(DivX) <http://en.wikipedia.org/wiki/MPEG-4>`__"
#~ msgstr ""

#~ msgid "`HuffYUV <http://en.wikipedia.org/wiki/HuffYUV>`__"
#~ msgstr ""

#~ msgid ""
#~ "Loss-less video codec created by Ben Rudiak-Gould which is meant to replace "
#~ "uncompressed YCbCr as a video capture format."
#~ msgstr ""

#~ msgid "`DV <http://en.wikipedia.org/wiki/DV>`__"
#~ msgstr ""

#~ msgid "`H.264 <http://en.wikipedia.org/wiki/H.264>`__"
#~ msgstr ""

#~ msgid "`Xvid <http://en.wikipedia.org/wiki/Xvid>`__"
#~ msgstr ""

#~ msgid "`Theora <http://en.wikipedia.org/wiki/Theora>`__"
#~ msgstr ""

#~ msgid "See Ogg in `Video Formats`_."
#~ msgstr ""

#~ msgid "`Flash Video <http://en.wikipedia.org/wiki/Flash_Video>`__"
#~ msgstr ""

#~ msgid "`FFmpeg video codec #1 <http://en.wikipedia.org/wiki/FFV1>`__"
#~ msgstr ""

#~ msgid ""
#~ "A.K.A. FFV1, a loss-less intra-frame video codec. It can use either variable"
#~ " length coding or arithmetic coding for entropy coding. The encoder and "
#~ "decoder are part of the free, open-source library libavcodec in FFmpeg."
#~ msgstr ""

#~ msgid "Bitrate"
#~ msgstr ""

#~ msgid ""
#~ "Set the average `bitrate <http://en.wikipedia.org/wiki/Bit_rate>`__ "
#~ "(quality), which is the count of binary digits per frame. See also: `ffmpeg "
#~ "-b:v <http://ffmpeg.org/ffmpeg.html#Description>`__"
#~ msgstr ""

#~ msgid "Rate"
#~ msgstr ""

#~ msgid "Buffer"
#~ msgstr ""

#~ msgid ""
#~ "The `decoder bitstream buffer "
#~ "<http://en.wikipedia.org/wiki/Video_buffering_verifier>`__ size."
#~ msgstr ""

#~ msgid "GOP Size"
#~ msgstr ""

#~ msgid ""
#~ "The number of pictures per `Group of Pictures "
#~ "<http://en.wikipedia.org/wiki/Group_of_pictures>`__. Set to 0 for "
#~ "\"intra_only\", which disables `inter-frame <http://en.wikipedia.org/wiki"
#~ "/Inter-frame>`__ video. From ffmpeg docs: \"For streaming at very low "
#~ "bitrate application, use a low frame rate and a small GOP size. This is "
#~ "especially true for RealVideo where the Linux player does not seem to be "
#~ "very fast, so it can miss frames\""
#~ msgstr ""

#~ msgid "Autosplit Output"
#~ msgstr ""

#~ msgid ""
#~ "If your video is HUGE and exceeds 2Gig, enable Autosplit Output. The main "
#~ "control over output filesize is the GOP, or keyframe interlace. A higher "
#~ "number generally leads to a smaller file, but needs a higher-powered device "
#~ "to replay it."
#~ msgstr ""

#~ msgid "Mux"
#~ msgstr ""

#~ msgid ""
#~ "`Multiplexing <http://www.afterdawn.com/glossary/term.cfm/multiplexing>`__ "
#~ "settings."
#~ msgstr ""

#~ msgid "Maximum bit rate of the multiplexed stream."
#~ msgstr ""

#~ msgid "Packet Size"
#~ msgstr ""

#~ msgid "(Undocumented in ffmpeg)"
#~ msgstr ""

#~ msgid "Standards"
#~ msgstr ""

#~ msgid ""
#~ "Codecs cannot encode off-the-wall video sizes, so stick to the XY sizes used"
#~ " in the presets for standard TV sizes."
#~ msgstr ""

#~ msgid "Audio Settings"
#~ msgstr ""

#~ msgid "Audio is encoded using the codec you choose."
#~ msgstr ""

#~ msgid "Audio Codecs"
#~ msgstr ""

#~ msgid "`MP2 <http://en.wikipedia.org/wiki/MPEG-1_Audio_Layer_II>`__"
#~ msgstr ""

#~ msgid "A lossy audio compression format defined by ISO/IEC 11172-3."
#~ msgstr ""

#~ msgid "`MP3 <http://en.wikipedia.org/wiki/MP3>`__"
#~ msgstr ""

#~ msgid "`AC3 <http://en.wikipedia.org/wiki/Dolby_Digital>`__"
#~ msgstr ""

#~ msgid ""
#~ "Audio Codec 3, an audio compression technology developed by Dolby "
#~ "Laboratories."
#~ msgstr ""

#~ msgid "`AAC <http://en.wikipedia.org/wiki/Advanced_Audio_Coding>`__"
#~ msgstr ""

#~ msgid ""
#~ "Advanced Audio Codec,\" a standardized, lossy compression and encoding "
#~ "scheme for digital audio. Designed to be the successor of the MP3 format, "
#~ "AAC generally achieves better sound quality than MP3 at similar bit rates."
#~ msgstr ""

#~ msgid "`Vorbis <http://en.wikipedia.org/wiki/Vorbis>`__"
#~ msgstr ""

#~ msgid ""
#~ "An open-standard, highly-compressed format comparable to MP3 or AAC. Had "
#~ "been shown to perform significantly better than many other lossy audio "
#~ "formats in the past in that it produced smaller files at equivalent or "
#~ "higher quality while retaining computational complexity comparable to other "
#~ "MDCT formats such as AAC or Windows Media Audio."
#~ msgstr ""

#~ msgid "`FLAC <http://en.wikipedia.org/wiki/FLAC>`__"
#~ msgstr ""

#~ msgid ""
#~ "Free Loss-less Audio Codec. Digital audio compressed by FLAC's algorithm can"
#~ " typically be reduced to 50-60% of its original size, and decompressed into "
#~ "an identical copy of the original audio data."
#~ msgstr ""

#~ msgid "`PCM <http://en.wikipedia.org/wiki/PCM>`__"
#~ msgstr ""

#~ msgid ""
#~ "Pulse Code Modulation, a method used to digitally represent sampled analog "
#~ "signals. It is the standard form for digital audio in computers and various "
#~ "Blu-ray, Compact Disc and DVD formats, as well as other uses such as digital"
#~ " telephone systems"
#~ msgstr ""

#~ msgid ""
#~ "For each codec, you can to control the bitrate (quality) of the sound in the"
#~ " movie. This example shows MP3 encoding at 128kbps. Higher bitrates are "
#~ "bigger files that stream worse but sound better. Stick to powers of 2 for "
#~ "compatibility."
#~ msgstr ""

#~ msgid "Samplerate"
#~ msgstr ""

#~ msgid ""
#~ "Samplerate controls the number of samples per second of the audio. The "
#~ "default, 44100, is standard for many file types, including CD audio, and "
#~ "produces a high quality sound."
#~ msgstr ""

#~ msgid "Volume"
#~ msgstr ""

#~ msgid "Set the output volume of the audio."
#~ msgstr ""

#~ msgid "Tips"
#~ msgstr ""

#~ msgid ""
#~ "Choosing which format to use depends on what you are going to do with the "
#~ "image."
#~ msgstr ""

#~ msgid ""
#~ "If you are animating a movie and are not going to do any post-processing or "
#~ "special effects on it, use either **AVI-JPEG** or **AVI Codec** and choose "
#~ "the XviD open codec. If you want to output your movie with sound that you "
#~ "have loaded into the VSE, use **FFMPEG**."
#~ msgstr ""

#~ msgid ""
#~ "If you are going to do post-processing on your movie, it is best to use a "
#~ "frame set rendered as **OpenEXR** images; if you only want one file, then "
#~ "choose **AVI Raw**. While AVI Raw is huge, it preserves the exact quality of"
#~ " output for post-processing. After post-processing (compositing and/or "
#~ "sequencing), you can compress it down. You don't want to post-process a "
#~ "compressed file, because the compression artifacts might throw off what you "
#~ "are trying to accomplish with the post-processing."
#~ msgstr ""

#~ msgid ""
#~ "Restart the rendering from the place (the frame) where the problem occurred."
#~ msgstr ""

#~ msgid ""
#~ "Try out different video options in seconds, rather than minutes or hours."
#~ msgstr ""

#~ msgid ""
#~ "Enjoy the rest of the features of the VSE, such as adding Image Strips from "
#~ "previous renders, audio, video clips, etc."
#~ msgstr ""

#~ msgid "See: :term:`Video Presets`"
#~ msgstr ""

#~ msgid ""
#~ "AVI codec compression. Available codecs are operating-system dependent. When"
#~ " an AVI codec is initially chosen, the codec dialog is automatically "
#~ "launched. The codec can be changed directly using the *Set Codec* button "
#~ "which appears (*AVI Codec settings.*)."
#~ msgstr ""

#~ msgid ""
#~ "Blender puts out `frames upon request "
#~ "<http://wiki.blender.org/index.php/Dev:Source/Render/Frameserver>`__ as part"
#~ " of a render farm. The port number is specified in the OpenGL User "
#~ "Preferences panel."
#~ msgstr ""

#~ msgid ""
#~ "Blender can read GIF files on Windows and Mac platforms with `QuickTime "
#~ "<http://www.apple.com/quicktime/download>`__ installed. The GIF capabilities"
#~ " (as well as flattened PSD, flattened PDF on Mac, and others) come along "
#~ "with QuickTime."
#~ msgstr ""

#~ msgid "The bitrate control also includes a *Minimum* and a *Maximum*."
#~ msgstr ""

#~ msgid ""
#~ "If the *H.264*, *MPEG*, *Ogg Theora*, or *Xvid* codecs are chosen, an "
#~ "*Encoding* panel becomes available. This has settings for encoding these "
#~ "file types, and other formats using FFmpeg."
#~ msgstr ""

#~ msgid ""
#~ "When you view the :doc:`System Console "
#~ "</getting_started/basics/interface/window_system/console_window>`, you can "
#~ "see some of the output of the encoding process. You will see even more "
#~ "output if you execute Blender as ``blender -d``."
#~ msgstr ""

#~ msgid "See MP3 in `Video Formats`_ above.)"
#~ msgstr ""

#~ msgid ""
#~ "Note that you might not want to render directly to a video format. If a "
#~ "problem occurs while rendering, you have to re-render all frames from the "
#~ "beginning. If you first render out a set of static images (such as the "
#~ "default PNG, or the higher-quality OpenEXR), you can stitch them together "
#~ "with an Image Strip in the :doc:`Video Sequence Editor (VSE) "
#~ "</editors/sequencer/usage>`. This way, you can easily:"
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the H.264 codec. See :doc:`Advanced Encoding "
#~ "</render/output/video#advanced_encoding>`."
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the MPEG codec. See :doc:`Advanced Encoding "
#~ "</render/output/video#advanced_encoding>`."
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the Theora codec as Ogg files. See :doc:`Advanced "
#~ "Encoding </render/output/video#advanced_encoding>`."
#~ msgstr ""

#~ msgid ""
#~ "Apple's Quicktime .mov file. The Quicktime codec dialog is available when "
#~ "this codec is installed and this format is initially chosen. See "
#~ ":doc:`Quicktime Encoding </render/output/video#quicktime>`."
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the Xvid codec. See :doc:`Advanced Encoding "
#~ "</render/output/video#advanced_encoding>`."
#~ msgstr ""

#~ msgid ""
#~ "This is not strict—something more than 0.8 is acceptable—but an RGB display "
#~ "with color contrast that ranges from 0.0 to 1.0 will appear to be very ugly "
#~ "(over-saturated) on video, while appearing bright and dynamic on a computer "
#~ "monitor."
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the H.264 codec. See :doc:`Advanced Encoding "
#~ "</render/output_options#advanced_encoding>`."
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the MPEG codec. See :doc:`Advanced Encoding "
#~ "</render/output_options#advanced_encoding>`."
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the Theora codec as Ogg files. See :doc:`Advanced "
#~ "Encoding </render/output_options#advanced_encoding>`."
#~ msgstr ""

#~ msgid ""
#~ "Apple's Quicktime .mov file. The Quicktime codec dialog is available when "
#~ "this codec is installed and this format is initially chosen. See "
#~ ":doc:`Quicktime Encoding </render/output_options#quicktime>`."
#~ msgstr ""

#~ msgid ""
#~ "Encodes movies with the Xvid codec. See :doc:`Advanced Encoding "
#~ "</render/output_options#advanced_encoding>`."
#~ msgstr ""

#~ msgid "Colour Saturation"
#~ msgstr ""

#~ msgid ""
#~ "When you view the :doc:`System Console "
#~ "</interface/window_system/console_window>`, you can see some of the output "
#~ "of the encoding process. You will see even more output if you execute "
#~ "Blender as ``blender -d``."
#~ msgstr ""

#~ msgid ""
#~ "See MP3 in FIXME(TODO: Internal Link; Video Formats|Video Formats]] above.)"
#~ msgstr ""

#~ msgid ""
#~ "Note that you might not want to render directly to a video format. If a "
#~ "problem occurs while rendering, you have to re-render all frames from the "
#~ "beginning. If you first render out a set of static images (such as the "
#~ "default PNG, or the higher-quality OpenEXR), you can stitch them together "
#~ "with an Image Strip in the :doc:`Video Sequence Editor (VSE) "
#~ "</sequencer/usage>`. This way, you can easily:"
#~ msgstr ""

#~ msgid ""
#~ "If the  *H.264*, *MPEG*, *Ogg Theora*, or *Xvid* codecs are chosen, an "
#~ "*Encoding* panel becomes available. This has settings for encoding these "
#~ "file types, and other formats using FFmpeg."
#~ msgstr ""

#~ msgid "Preset"
#~ msgstr ""

#~ msgid "Resolution (X x Y)"
#~ msgstr ""

#~ msgid "Aspect Ratio (X x Y)"
#~ msgstr ""

#~ msgid "Frame Rate"
#~ msgstr ""

#~ msgid ":guilabel:`DVCPRO HD 1080p`"
#~ msgstr ""

#~ msgid "1280x1080"
#~ msgstr ""

#~ msgid "3:2"
#~ msgstr ""

#~ msgid "24 fps"
#~ msgstr ""

#~ msgid ":guilabel:`DVCPRO HD 720p`"
#~ msgstr ""

#~ msgid "960x720"
#~ msgstr ""

#~ msgid "4:3"
#~ msgstr ""

#~ msgid ":guilabel:`HDTV 1080p`"
#~ msgstr ""

#~ msgid "1920x1080"
#~ msgstr ""

#~ msgid "1:1"
#~ msgstr ""

#~ msgid ":guilabel:`HDTV 720p`"
#~ msgstr ""

#~ msgid "1280x720"
#~ msgstr ""

#~ msgid ":guilabel:`HDV 1080p`"
#~ msgstr ""

#~ msgid "1440x1080"
#~ msgstr ""

#~ msgid "23.98 fps"
#~ msgstr ""

#~ msgid ":guilabel:`HDV NTSC 1080p`"
#~ msgstr ""

#~ msgid "29.97 fps"
#~ msgstr ""

#~ msgid ":guilabel:`HDV PAL 1080p`"
#~ msgstr ""

#~ msgid "25 fps"
#~ msgstr ""

#~ msgid ":guilabel:`TV NTSC 16:9`"
#~ msgstr ""

#~ msgid "720x480"
#~ msgstr ""

#~ msgid "40:33"
#~ msgstr ""

#~ msgid ":guilabel:`TV NTSC 4:3`"
#~ msgstr ""

#~ msgid "720x486"
#~ msgstr ""

#~ msgid "10:11"
#~ msgstr ""

#~ msgid ":guilabel:`TV PAL 16:9`"
#~ msgstr ""

#~ msgid "720x576"
#~ msgstr ""

#~ msgid "16:11"
#~ msgstr ""

#~ msgid ":guilabel:`TV PAL 4:3`"
#~ msgstr ""

#~ msgid "12:11"
#~ msgstr ""

#~ msgid ""
#~ "Enable field rendering. When the :guilabel:`Fields` button in the "
#~ ":guilabel:`Render` Panel is pressed (*Post Processing* section), Blender "
#~ "prepares each frame in two passes. On the first it renders only the even "
#~ "lines, then it *advances in time by half a time step* and renders all the "
#~ "odd lines. This produces odd results on a PC screen *(Field Rendering "
#~ "result)*. but will show correctly on a TV set."
#~ msgstr ""

#~ msgid "Disables the half-frame time step between fields (:guilabel:`x`)."
#~ msgstr ""

#~ msgid ""
#~ "AVI codec compression. Available codecs are operating-system dependent. When"
#~ " an AVI codec is initially chosen, the codec dialog is automatically "
#~ "launched. The codec can be changed directly using the :guilabel:`Set Codec` "
#~ "button which appears (*AVI Codec settings.*)."
#~ msgstr ""

#~ msgid ""
#~ "If the  :guilabel:`H.264`, :guilabel:`MPEG`, :guilabel:`Ogg Theora`, or "
#~ ":guilabel:`Xvid` codecs are chosen, an :guilabel:`Encoding` panel becomes "
#~ "available. This has settings for encoding these file types, and other "
#~ "formats using FFmpeg."
#~ msgstr ""

#~ msgid ""
#~ "The bitrate control also includes a :guilabel:`Minimum` and a "
#~ ":guilabel:`Maximum`."
#~ msgstr ""

#~ msgid ""
#~ "Blender puts out `frames upon request "
#~ "<http://wiki.blender.org/index.php/Dev:Source/Render/Frameserver>`_ as part "
#~ "of a render farm. The port number is specified in the OpenGL User "
#~ "Preferences panel."
#~ msgstr ""

#~ msgid ""
#~ "Blender can read GIF files on Windows and Mac platforms with `QuickTime "
#~ "<http://www.apple.com/quicktime/download>`_ installed. The GIF capabilities "
#~ "(as well as flattened PSD, flattened PDF on Mac, and others) come along with"
#~ " QuickTime."
#~ msgstr ""

#~ msgid ""
#~ "Blender puts out FIXME(Link Type Unsupported: dev; "
#~ "[[Dev:Source/Render/Frameserver|frames upon request]]) as part of a render "
#~ "farm. The port number is specified in the OpenGL User Preferences panel."
#~ msgstr ""

#~ msgid ""
#~ "Blender can read GIF files on Windows and Mac platforms with FIXME(Link Type"
#~ " Unsupported: http; [[http://www.apple.com/quicktime/download QuickTime]]) "
#~ "installed. The GIF capabilities (as well as flattened PSD, flattened PDF on "
#~ "Mac, and others) come along with QuickTime."
#~ msgstr ""
