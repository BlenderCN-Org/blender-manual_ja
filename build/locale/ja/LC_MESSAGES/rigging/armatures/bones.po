# 
msgid ""
msgstr ""
"Project-Id-Version: Blender Manual 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-11-03 14:26+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../manual/rigging/armatures/bones.rst:6
msgid "Bones"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:11
msgid "The elements of a bone."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:14
msgid "Bones are the base elements of armatures."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:16
msgid "They have three elements:"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:18
msgid "the \"start point\" named **root** or **head**,"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:19
msgid "the \"body\" itself,"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:20
msgid "and the \"end point\" named **tip** or **tail**."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:27
msgid ""
"Both root and tip (the \"ends\") define the bone by their respective "
"position."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:29
msgid ""
"They also have a radius property, only useful for the envelope deformation "
"method (see below)."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:33
msgid "Bones Visualization"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:42
msgid "Octahedral bone display."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:48
msgid "Stick bone display."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:54
msgid "B-Bone bone display."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:60
msgid "Envelope bone display."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:63
msgid ""
"Since armatures are made of bones, you'll find more about this when we'll "
"talk about :doc:`Armatures Visualization "
"</rigging/armatures/visualization>`."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:74
msgid "The Bone context."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:78
msgid "Bones properties"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:84
msgid ""
"This shows different panels used to control features of each selected bone; "
"the panels change depending on which mode you're working in."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:89
msgid "Bones Rigidity"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:107
msgid "An armature of B-Bones, in Edit mode"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:113
msgid ""
"The BÃ©zier curve superposed to the chain, with its handles placed at bones' "
"ends."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:119
msgid "The same armature in Object mode"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:122
msgid ""
"When you connect bones to form a :doc:`chain "
"</rigging/armatures/structure#chains_of_bones>`, Blender calculates a Bezier"
" curve passing through all the bones' ends, and bones' segments in the chain"
" will bend and roll to follow this invisible curve."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:126
msgid ""
"*You have no direct access to this curve*; you can only control it to some "
"extent using bone properties, as explained in the :doc:`editing pages "
"</rigging/armatures/editing/properties#bone_rigidity_settings>`."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:136
msgid ""
"Of course, a geometry influenced by the chain is smoothly deformed according"
" to the Bezier curve! In fact, smooth bones are an easy way to replace long "
"chains of many small rigid bones posed using IK..."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:141
msgid ""
"However, if the chain has an influence on objects rather than geometry, the "
"segments' orientation is not taken in account (details are explained in the "
":doc:`skinning part </rigging/skinning>`)."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:155
msgid "Bones influence"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:157
msgid ""
"Basically, a bone controls a geometry when vertices \"follow\" the bone. "
"This is like how the muscles and skin of your finger follow your finger-bone"
" when you move a finger."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:160
msgid ""
"To do this, you have to define **how much** a bone influences a certain "
"vertex."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:162
msgid ""
"The simplest way is to have each bone affecting those parts of the geometry "
"that are within a given range from it. This is called the *envelope "
"technique*, because each bone can control only the geometry \"enveloped\" by"
" its own influence area."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:170
msgid "A bone in Envelope visualization, in Edit mode."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:178
msgid "the root's radius and the tip's radius."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:184
msgid "Our armature in Envelope visualization, in Pose mode."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:187
msgid ""
"All these influence parameters are further detailed in the :doc:`skinning "
"pages </rigging/skinning>`."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:22
msgid ""
"Select the :doc:`default armature "
"</rigging/armatures/object_mode#your_first_armature>` and press :kbd:`Tab` "
"to enter *Edit mode*. As you can see, in this mode you can select the root "
"and the tip, and move them as you do with mesh vertices (don't lose too much"
" time here though, specific pages about selecting and editing will come "
"later)."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:35
msgid ""
"Bones can be visualized in various ways: *Octahedron*, *Stick*, *B-Bone*, "
"*Envelope* and *Wire*. Custom shapes can be used, too!"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:66
msgid ""
"Activating *Axes* checkmark on the *Armature* / *Display* panel, will show "
"local axes for each bone's tip. The Y axis is always aligned along the bone,"
" oriented from root to tip. So, this is the \"roll\" axis of the bones."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:80
msgid ""
"When bones are selected (hence in *Edit mode* and *Pose mode*), their "
"properties are shown in the *Bone* button context of the *Properties* "
"window."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:91
msgid ""
"Even though bones are rigid (i.e. behave as rigid sticks), they are made out"
" of *segments*. *Segments* are small, rigid linked elements that can rotate "
"between each other. By default, each new bone has only one segment and as "
"such it cannot \"bend\" along its length. It is a rigid bone."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:97
msgid ""
"You can see these segments in *Object mode* and in *Pose mode*, and only if "
"bones are visualized as *B-bones*; while in *Edit mode* bones are always "
"drawn as rigid sticks. Note that in the special case of a single bone, you "
"can't see these segments in *Object mode*, because they're aligned."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:130
msgid ""
"In *An armature of B-Bones in Edit mode* we connected 3 bones, each one made"
" of 5 segments. These are *B-bones* but as you see, in *Edit mode* they are "
"shown as rigid elements. Look at *The same armature in Object mode*: now, in"
" *Object mode*, we can see how the bones' segments smoothly \"blend\" into "
"each other, even for roll."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:145
msgid ""
"When not visualized as *B-Bone* s, bones are always shown as rigid sticks, "
"*even though the bone segments are still present and effective* (see "
":doc:`skinning to ObData </rigging/skinning/obdata>`)."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:149
msgid ""
"This means that even in e.g. *Octahedron* visualization, if some bones in a "
"chain have several segments, they will nonetheless smoothly deform their "
"geometry..."
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:173
msgid ""
"If a bone is visualized as *Envelope*, in *Edit mode* and in *Pose mode* you"
" can see the area of influence, which depends on:"
msgstr ""

#: ../../../manual/rigging/armatures/bones.rst:177
msgid "the *distance* property"
msgstr ""

#~ msgid "Armature"
#~ msgstr ""

#~ msgid "Bone"
#~ msgstr ""

#~ msgid ""
#~ "Select the :doc:`default armature "
#~ "</rigging/armatures/object_mode#your_first_armature>` and press :kbd:`tab` "
#~ "to enter :guilabel:`Edit mode`. As you can see, in this mode you can select "
#~ "the root and the tip, and move them as you do with mesh vertices (don't lose"
#~ " too much time here though, specific pages about selecting and editing will "
#~ "come later)."
#~ msgstr ""

#~ msgid ""
#~ "Bones can be visualized in various ways: :guilabel:`Octahedron`, "
#~ ":guilabel:`Stick`, :guilabel:`B-Bone`, :guilabel:`Envelope` and "
#~ ":guilabel:`Wire`. Custom shapes can be used, too!"
#~ msgstr ""

#~ msgid ""
#~ "Activating :guilabel:`Axes` checkmark on the :guilabel:`Armature` / "
#~ ":guilabel:`Display` panel, will show local axes for each bone's tip. The Y "
#~ "axis is always aligned along the bone, oriented from root to tip. So, this "
#~ "is the \"roll\" axis of the bones."
#~ msgstr ""

#~ msgid ""
#~ "When bones are selected (hence in :guilabel:`Edit mode` and :guilabel:`Pose "
#~ "mode`), their properties are shown in the :guilabel:`Bone` button context of"
#~ " the :guilabel:`Properties` window."
#~ msgstr ""

#~ msgid ""
#~ "Even though bones are rigid (i.e. behave as rigid sticks), they are made out"
#~ " of :guilabel:`segments`. :guilabel:`Segments` are small, rigid linked "
#~ "elements that can rotate between each other. By default, each new bone has "
#~ "only one segment and as such it cannot \"bend\" along its length. It is a "
#~ "rigid bone."
#~ msgstr ""

#~ msgid ""
#~ "You can see these segments in :guilabel:`Object mode` and in :guilabel:`Pose"
#~ " mode`, and only if bones are visualized as :guilabel:`B-bones`; while in "
#~ ":guilabel:`Edit mode` bones are always drawn as rigid sticks. Note that in "
#~ "the special case of a single bone, you can't see these segments in "
#~ ":guilabel:`Object mode`, because they're aligned."
#~ msgstr ""

#~ msgid ""
#~ "In :guilabel:`An armature of B-Bones in Edit mode` we connected 3 bones, "
#~ "each one made of 5 segments. These are :guilabel:`B-bones` but as you see, "
#~ "in :guilabel:`Edit mode` they are shown as rigid elements. Look at "
#~ ":guilabel:`The same armature in Object mode`: now, in :guilabel:`Object "
#~ "mode`, we can see how the bones' segments smoothly \"blend\" into each "
#~ "other, even for roll."
#~ msgstr ""

#~ msgid ""
#~ "When not visualized as :guilabel:`B-Bone` s, bones are always shown as rigid"
#~ " sticks, *even though the bone segments are still present and effective* "
#~ "(see :doc:`skinning to ObData </rigging/skinning/obdata>`)."
#~ msgstr ""

#~ msgid ""
#~ "This means that even in e.g. :guilabel:`Octahedron` visualization, if some "
#~ "bones in a chain have several segments, they will nonetheless smoothly "
#~ "deform their geometry..."
#~ msgstr ""

#~ msgid ""
#~ "If a bone is visualized as :guilabel:`Envelope`, in :guilabel:`Edit mode` "
#~ "and in :guilabel:`Pose mode` you can see the area of influence, which "
#~ "depends on:"
#~ msgstr ""

#~ msgid "the :guilabel:`distance` property"
#~ msgstr ""
